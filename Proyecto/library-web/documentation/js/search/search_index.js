var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.348,1,0.843]],["body/components/AppComponent.html",[0,0.607,1,1.542,2,1.723,3,0.487,4,0.335,5,1.488,6,1.488,7,1.488,8,1.488,9,0.335,10,3.353,11,1.488,12,2.382,13,2.193,14,2.216,15,1.871,16,5.525,17,1.871,18,5.051,19,0.387,20,0.626,21,2.904,22,0.387,23,0.032,24,0.752,25,0.982,26,0.982,27,5.051,28,3.666,29,0.824,30,4.017,31,0.684,32,0.619,33,0.387,34,0.684,35,1.488,36,1.871,37,1.871,38,1.488,39,2.147,40,1.488,41,0.7,42,1.488,43,0.982,44,1.488,45,0.982,46,1.133,47,1.871,48,0.982,49,1.488,50,0.982,51,1.488,52,0.982,53,0.824,54,0.982,55,1.488,56,1.069,57,1.37,58,1.488,59,0.982,60,1.488,61,0.982,62,0.901,63,1.488,64,1.488,65,0.025,66,0.025]],["title/modules/AppModule.html",[67,2.644,68,2.042]],["body/modules/AppModule.html",[1,1.671,3,0.329,4,0.285,9,0.285,13,1.164,23,0.033,31,1.086,32,0.525,33,0.329,34,0.581,43,1.426,45,1.426,46,1.019,48,1.426,50,1.426,52,1.426,53,0.7,54,1.426,56,1.552,57,1.164,59,1.426,61,1.426,62,0.765,65,0.022,66,0.022,68,4.228,69,1.978,70,2.929,71,2.848,72,2.848,73,2.848,74,2.848,75,3.382,76,3.793,77,2.848,78,2.477,79,3.412,80,4.544,81,3.793,82,3.793,83,3.793,84,4.544,85,2.848,86,2.477,87,4.544,88,4.544,89,1.497,90,3.412,91,3.412,92,2.848,93,4.544,94,3.412,95,1.978,96,2.848,97,2.848,98,2.848,99,2.199,100,3.793,101,2.199,102,2.477,103,3.412,104,2.199,105,3.793,106,2.199,107,3.412]],["title/modules/AppRoutingModule.html",[67,2.644,75,1.836]],["body/modules/AppRoutingModule.html",[0,0.69,3,0.465,4,0.312,9,0.312,23,0.033,31,1.077,32,0.575,33,0.36,34,0.636,43,1.179,45,1.305,46,1.197,48,1.179,50,1.179,52,1.305,53,0.766,54,1.179,59,1.179,61,1.179,62,1.197,65,0.024,66,0.024,69,2.165,75,2.795,81,3.118,83,4.025,92,3.118,96,3.118,97,3.118,98,3.118,99,2.408,100,4.025,101,2.408,104,2.408,105,4.025,106,2.408,108,3.735,109,3.735,110,4.822,111,3.442,112,1.274,113,3.856,114,2.165,115,3.735,116,1.639,117,6.328,118,3.735,119,4.025,120,3.735,121,3.735,122,3.735,123,4.876,124,3.735,125,2.711,126,3.735,127,3.735,128,3.735,129,2.408,130,3.735,131,3.735]],["title/interfaces/Auth.html",[132,1.08,133,1.518]],["body/interfaces/Auth.html",[3,0.441,4,0.382,9,0.382,19,0.441,20,0.678,22,0.584,23,0.032,24,1.178,33,0.441,65,0.027,66,0.027,132,1.562,133,2.624,134,2.408,135,3.824,136,1.027,137,2.408,138,4.581,139,2.01,140,1.027,141,4.581,142,1.614,143,3.188,144,4.403,145,3.91,146,1.558]],["title/components/AuthComponent.html",[0,0.348,43,0.774]],["body/components/AuthComponent.html",[0,0.491,1,0.706,2,1.302,3,0.368,4,0.221,5,0.984,6,0.984,7,0.984,8,0.984,9,0.221,11,0.984,12,2.229,13,2.052,15,1.415,17,1.415,19,0.256,20,0.473,22,0.256,23,0.033,24,0.715,25,0.649,26,0.649,29,1.004,31,0.918,32,0.409,33,0.256,34,0.452,35,0.984,36,1.415,37,1.415,38,0.984,39,1.812,40,0.984,41,0.62,42,0.984,43,1.196,44,0.984,45,0.649,46,0.856,47,1.415,48,0.649,49,0.984,50,0.649,51,0.984,52,0.649,53,0.545,54,0.649,55,0.984,56,0.706,57,0.905,58,0.984,59,0.649,60,0.984,61,0.649,62,0.595,63,0.984,64,0.984,65,0.019,66,0.019,89,1.165,112,0.905,129,2.462,133,2.344,139,1.676,140,1.21,143,2.007,147,2.216,148,1.302,149,1.802,150,4.472,151,3.819,152,4.472,153,0.856,154,1.97,155,3.153,156,0.595,157,2.216,158,2.836,159,2.665,160,1.746,161,2.24,162,3.733,163,2.835,164,2.655,165,0.595,166,0.595,167,2.655,168,0.856,169,1.812,170,2.655,171,2.108,172,1.199,173,1.104,174,1.104,175,2.772,176,1.812,177,3.55,178,3.188,179,1.676,180,2.772,181,3.188,182,3.819,183,1.536,184,2.006,185,1.97,186,2.214,187,3.55,188,2.462,189,1.83,190,2.462,191,3.819,192,2.007,193,3.819,194,1.319,195,1.802,196,3.584,197,3.819,198,2.462,199,2.655,200,3.819,201,2.772,202,3.188,203,1.711,204,1.395,205,2.216,206,0.706,207,1.414,208,4.472,209,3.188,210,2.655,211,2.216,212,2.655,213,2.655,214,2.216,215,1.395,216,2.655,217,2.655,218,2.655,219,3.819,220,1.711,221,2.216,222,2.655,223,2.655,224,3.819,225,2.772,226,2.772,227,1.199,228,2.462,229,3.188,230,3.188,231,2.216,232,2.216,233,2.216,234,1.963,235,0.984,236,2.216,237,3.733,238,2.216,239,2.216,240,2.216,241,1.395,242,1.711,243,2.216,244,1.165,245,2.655]],["title/injectables/AuthService.html",[159,1.518,246,0.843]],["body/injectables/AuthService.html",[3,0.242,4,0.209,9,0.209,14,1.101,19,0.242,20,0.454,22,0.54,23,0.033,24,1.177,25,0.613,26,0.613,29,1.121,31,0.901,32,0.386,33,0.242,34,0.427,41,0.702,65,0.018,66,0.018,95,1.454,116,1.901,129,2.363,133,2.62,136,1.068,140,1.068,142,1.408,143,3.264,144,4.067,145,3.794,146,1.152,153,0.822,156,0.563,159,1.757,160,1.716,165,1.136,166,1.136,168,1.302,172,1.151,173,1.377,174,1.377,183,1.151,184,2.118,194,1.481,196,3.411,206,0.668,207,1.377,227,1.824,228,2.363,246,0.975,247,1.203,248,2.094,249,3.144,250,3.666,251,3.666,252,3.666,253,4.764,254,1.617,255,3.071,256,2.509,257,2.363,258,3.666,259,2.509,260,2.537,261,1.757,262,1.927,263,5.292,264,3.538,265,3.666,266,2.509,267,3.06,268,2.761,269,3.666,270,2.509,271,2.661,272,2.363,273,3.666,274,2.509,275,3.06,276,3.666,277,2.509,278,3.06,279,1.757,280,3.666,281,3.06,282,3.06,283,3.666,284,1.617,285,2.363,286,1.757,287,3.144,288,2.661,289,2.661,290,2.661,291,2.661,292,4.764,293,3.666,294,2.509,295,2.509,296,1.319,297,2.509,298,2.094,299,1.821,300,1.203,301,1.949,302,2.509,303,3.411,304,2.429,305,2.509,306,2.509,307,2.509,308,2.509,309,2.509,310,1.821]],["title/interfaces/Book.html",[46,0.71,132,1.08]],["body/interfaces/Book.html",[3,0.413,4,0.358,9,0.358,19,0.413,20,0.652,22,0.611,23,0.032,24,1.214,33,0.413,41,0.822,46,1.18,65,0.026,66,0.026,132,1.463,134,2.254,136,1.365,137,2.254,142,1.578,146,1.725,174,1.24,311,3.58,312,2.486,313,4.306,314,4.306,315,3.824,316,4.306,317,3.118]],["title/components/BookFormComponent.html",[0,0.348,45,0.774]],["body/components/BookFormComponent.html",[0,0.34,1,0.395,2,0.831,3,0.382,4,0.124,5,0.55,6,0.55,7,0.55,8,0.55,9,0.124,11,0.55,12,1.94,13,1.786,15,0.903,17,0.903,19,0.143,20,0.302,21,2.469,22,0.453,23,0.033,24,0.842,25,0.969,26,0.969,29,1.075,31,0.799,32,0.229,33,0.143,34,0.253,35,0.55,36,0.903,37,0.903,38,0.55,39,1.329,40,0.55,41,0.651,42,0.55,43,0.363,44,0.55,45,0.877,46,1.272,47,0.903,48,0.363,49,0.55,50,0.363,51,0.55,52,0.363,53,1.153,54,0.363,55,0.55,56,0.395,57,0.506,58,0.55,59,0.363,60,0.55,61,0.363,62,0.333,63,0.55,64,0.55,65,0.012,66,0.012,89,0.651,104,3.437,112,0.831,114,1.797,116,0.651,125,2.25,136,0.955,137,1.281,139,2.376,140,1.362,142,1.197,146,0.825,148,0.831,149,1.249,153,0.546,154,1.445,155,2.313,156,0.333,157,1.239,158,2.238,161,1.812,165,0.546,166,0.805,168,0.888,169,1.802,171,2.266,172,0.765,173,1.231,174,1.231,175,2.25,176,1.74,177,3.091,179,2.197,181,2.034,183,1.858,184,1.847,185,2.11,187,2.604,189,1.168,190,1.571,194,1.474,195,2.181,201,2.604,206,0.395,207,1.037,215,2.083,220,0.957,227,1.127,234,1.574,235,1.74,244,1.069,260,2.719,261,1.168,272,2.313,279,2.51,281,2.034,301,0.506,312,3.48,313,2.876,314,2.25,315,2.554,316,2.876,317,2.365,318,3.87,319,1.077,320,2.587,321,2.034,322,2.587,323,2.587,324,2.604,325,2.604,326,2.034,327,2.557,328,2.365,329,2.604,330,1.239,331,1.484,332,3.028,333,2.034,334,2.437,335,1.484,336,2.034,337,3.091,338,2.238,339,1.484,340,2.313,341,3.588,342,3.182,343,3.09,344,2.604,345,2.468,346,2.437,347,2.437,348,1.769,349,2.437,350,2.51,351,2.313,352,2.437,353,2.034,354,2.437,355,2.437,356,2.437,357,2.437,358,2.437,359,2.437,360,2.437,361,2.437,362,1.484,363,2.034,364,2.437,365,1.571,366,1.571,367,2.034,368,2.437,369,1.769,370,3.588,371,1.571,372,3.588,373,3.588,374,2.034,375,2.034,376,1.484,377,3.921,378,2.604,379,2.034,380,2.034,381,2.034,382,2.034,383,1.484,384,2.034,385,2.437,386,2.437,387,2.437,388,2.437,389,0.903,390,1.069,391,1.484,392,2.437,393,1.484,394,1.484,395,2.034,396,1.484,397,2.437,398,2.437,399,1.484,400,2.437,401,2.437,402,2.437,403,2.437,404,2.995,405,0.957,406,0.957,407,1.077,408,1.077,409,1.239,410,1.484,411,2.034,412,0.55,413,1.769,414,1.239,415,1.484,416,1.484,417,1.484,418,1.484,419,1.484,420,1.484,421,1.484,422,1.769,423,1.484,424,2.437,425,2.587,426,1.484,427,1.484,428,1.239,429,1.239,430,1.484,431,1.239,432,1.239,433,2.034,434,2.034,435,2.034,436,2.034,437,2.437,438,2.437,439,2.034,440,1.239,441,1.412,442,1.281,443,0.78,444,1.239,445,1.484]],["title/components/BookInfoComponent.html",[0,0.348,48,0.774]],["body/components/BookInfoComponent.html",[0,0.448,1,0.602,2,1.158,3,0.491,4,0.189,5,0.838,6,0.838,7,0.838,8,0.838,9,0.189,11,0.838,12,2.159,13,1.987,15,1.258,17,1.258,19,0.218,20,0.421,22,0.436,23,0.033,25,0.553,26,0.553,29,1.085,31,0.868,32,0.349,33,0.218,34,0.385,35,0.838,36,1.258,37,1.258,38,0.838,39,1.678,40,0.838,41,0.628,42,0.838,43,0.553,44,0.838,45,0.553,46,1.355,47,1.258,48,1.107,49,0.838,50,0.553,51,0.838,52,0.553,53,0.464,54,0.553,55,0.838,56,0.602,57,0.772,58,0.838,59,0.553,60,0.838,61,0.553,62,0.507,63,0.838,64,0.838,65,0.017,66,0.017,101,3.505,112,1.158,114,2.363,116,0.993,136,0.507,140,1.219,142,1.48,146,1.205,148,1.158,149,1.642,153,0.762,154,1.825,156,0.507,160,1.66,161,2.13,165,0.762,166,1.016,168,1.016,169,2.014,171,1.678,173,0.982,174,1.638,178,2.835,179,1.49,183,1.779,184,1.545,185,2.053,186,1.969,194,1.246,195,1.825,201,3.288,204,1.19,206,0.602,207,1.179,220,1.459,228,2.189,234,2.32,235,0.838,242,2.627,244,1.988,261,1.628,262,1.785,279,1.628,301,0.772,312,3.448,317,1.785,318,3.947,324,3.288,327,2.679,329,3.288,332,2.92,333,3.781,342,2.626,350,1.628,351,2.189,378,2.465,384,2.835,389,1.258,390,1.789,405,1.459,408,1.643,412,0.838,414,1.889,422,1.643,425,1.889,432,1.889,439,2.835,441,1.969,442,2.143,443,1.19,446,1.643,447,3.403,448,2.835,449,2.959,450,2.363,451,2.835,452,2.92,453,1.889,454,3.396,455,2.835,456,2.263,457,4.539,458,2.263,459,3.396,460,3.396,461,1.889,462,3.396,463,2.189,464,3.396,465,3.396,466,2.263,467,1.889,468,3.396,469,3.396,470,1.459,471,2.465,472,2.263,473,2.835,474,4.53,475,3.396,476,3.396,477,2.835,478,2.263,479,4.112,480,2.263,481,2.263,482,2.263,483,2.263,484,2.263,485,2.263,486,2.263,487,2.263,488,2.263]],["title/injectables/BookService.html",[246,0.843,327,1.665]],["body/injectables/BookService.html",[3,0.17,4,0.147,9,0.147,14,0.772,19,0.17,20,0.346,22,0.497,23,0.033,24,1.172,25,0.43,26,0.43,29,1.059,31,0.736,32,0.271,33,0.17,34,0.299,41,0.842,46,1.21,53,1.028,65,0.014,66,0.014,95,1.02,116,1.227,136,1.325,139,1.227,140,1.362,142,1.616,146,1.665,153,0.627,156,0.395,160,1.516,165,1.123,166,1.123,168,1.266,171,1.036,172,1.573,173,1.529,174,1.821,177,2.029,183,1.244,185,1.126,189,1.34,194,1.508,195,1.126,206,0.468,207,1.146,227,1.446,246,0.744,247,0.843,249,2.525,254,1.134,255,2.554,257,1.802,260,2.4,261,1.899,262,2.083,264,3.488,271,2.029,272,1.802,279,2.206,284,1.134,285,1.802,286,1.34,287,2.525,288,2.029,289,2.029,290,2.029,296,0.925,299,1.277,300,0.843,301,2.062,303,2.554,304,2.313,310,2.029,312,3.701,313,3.985,314,3.985,315,3.539,316,3.985,317,3.032,324,2.029,327,1.47,345,2.297,350,1.34,366,1.802,389,1.289,405,1.134,433,3.308,434,3.308,435,3.308,436,3.308,451,2.334,455,2.334,489,1.469,490,2.796,491,2.796,492,2.796,493,2.796,494,2.796,495,1.76,496,1.76,497,1.621,498,2.796,499,3.963,500,3.963,501,3.963,502,1.76,503,2.967,504,3.635,505,2.334,506,2.029,507,2.334,508,2.796,509,2.796,510,2.796,511,2.796,512,2.796,513,2.796,514,2.796,515,2.796,516,2.796,517,2.796,518,2.796,519,1.76,520,2.796,521,1.76,522,2.796,523,2.796,524,2.796,525,1.76,526,2.796,527,2.796,528,2.796,529,1.76,530,3.963,531,2.876,532,2.796,533,1.76,534,2.334,535,1.76,536,1.76,537,1.76,538,1.76,539,2.796,540,1.76,541,1.76,542,1.76,543,1.469,544,1.76,545,1.76,546,1.76]],["title/components/BooksComponent.html",[0,0.348,50,0.774]],["body/components/BooksComponent.html",[0,0.431,1,0.565,2,1.104,3,0.312,4,0.177,5,0.787,6,0.787,7,0.787,8,0.787,9,0.177,11,0.787,12,2.129,13,1.96,15,1.199,17,1.199,19,0.205,20,0.401,21,2.482,22,0.526,23,0.033,24,0.821,25,1.265,26,1.265,29,1.193,31,0.804,32,0.327,33,0.205,34,0.362,35,0.787,36,1.199,37,1.199,38,0.787,39,1.625,40,0.787,41,0.654,42,0.787,43,0.519,44,0.787,45,0.519,46,1.116,47,1.199,48,0.519,49,0.787,50,1.072,51,0.787,52,0.519,53,1.062,54,0.519,55,0.787,56,0.565,57,0.724,58,0.787,59,0.519,60,0.787,61,0.519,62,0.476,63,0.787,64,0.787,65,0.016,66,0.016,89,0.932,119,3.941,136,0.726,139,1.421,140,1.25,142,0.565,146,1.256,148,1.104,149,1.58,153,0.726,154,1.767,156,0.476,158,2.719,160,1.625,165,0.88,166,0.88,168,1.059,169,1.976,171,1.199,172,1.378,176,1.199,183,1.562,184,1.697,185,1.767,186,1.877,189,1.552,194,1.304,195,1.304,198,2.087,204,1.117,206,0.565,207,0.936,215,2.306,227,1.017,234,2.183,235,1.749,241,1.702,244,1.925,260,2.103,272,2.087,279,2.103,291,1.542,301,1.104,312,2.543,315,2.528,323,3.274,326,2.702,327,2.615,332,2.087,338,1.702,340,2.087,343,1.877,345,1.231,348,2.35,353,2.702,366,2.087,369,2.35,375,2.702,377,2.702,378,2.35,379,2.702,380,2.702,381,2.702,382,2.702,389,1.199,390,1.721,405,1.369,408,1.542,412,0.787,413,2.35,428,2.702,429,1.773,441,1.231,442,1.117,443,1.117,450,2.274,452,2.827,453,1.773,463,2.087,470,1.369,471,2.35,473,2.702,477,2.702,479,2.35,503,2.827,504,3.966,505,2.702,506,2.35,507,2.702,547,1.773,548,3.922,549,3.237,550,4.975,551,3.922,552,3.237,553,3.662,554,2.124,555,3.237,556,2.124,557,2.124,558,2.35,559,3.237,560,3.237,561,2.702,562,4.386,563,2.124,564,3.237,565,3.922,566,2.124,567,3.237,568,3.237,569,3.237,570,3.237,571,2.124,572,2.124,573,2.124,574,2.124,575,2.124,576,2.124,577,2.124,578,2.124,579,2.124,580,2.124,581,1.773,582,2.124,583,2.124,584,2.124,585,3.922,586,2.124,587,2.124,588,2.124,589,2.124,590,2.124,591,2.124,592,3.237,593,2.702,594,3.237,595,3.237,596,2.124,597,3.237,598,2.124,599,1.773,600,1.542,601,1.773,602,1.773,603,1.542,604,2.124]],["title/injectables/CokieService.html",[160,0.995,246,0.843]],["body/injectables/CokieService.html",[3,0.33,4,0.286,9,0.286,14,1.504,19,0.33,22,0.526,23,0.033,24,1.195,29,1.12,31,0.776,32,0.528,33,0.33,34,0.583,41,0.871,65,0.023,66,0.023,136,1.148,140,1.409,153,1.022,156,0.768,160,1.431,165,1.224,166,1.224,168,1.224,169,2.022,172,1.431,173,1.751,180,2.488,192,3.071,194,1.48,206,0.912,227,1.835,246,1.212,247,1.643,300,1.643,301,1.861,304,1.643,350,2.616,395,3.804,450,3.757,497,2.642,605,2.861,606,4.557,607,4.557,608,3.427,609,5.842,610,3.427,611,4.557,612,3.427,613,5.457,614,5.457,615,4.557,616,3.427,617,4.557,618,3.427,619,5.457,620,2.861,621,3.427,622,3.427,623,3.427]],["title/interfaces/Editorial.html",[53,0.65,132,1.08]],["body/interfaces/Editorial.html",[3,0.442,4,0.383,9,0.383,19,0.442,20,0.679,22,0.585,23,0.032,24,1.209,33,0.442,41,0.841,53,1.202,65,0.027,66,0.027,132,1.565,134,2.413,136,1.029,137,2.413,140,1.029,142,1.615,146,1.559,194,1.122,624,3.832,625,4.406,626,4.406]],["title/components/EditorialFormComponent.html",[0,0.348,52,0.774]],["body/components/EditorialFormComponent.html",[0,0.442,1,0.589,2,1.139,3,0.322,4,0.185,5,0.82,6,0.82,7,0.82,8,0.82,9,0.185,11,0.82,12,2.148,13,1.978,15,1.237,17,1.237,19,0.213,20,0.414,21,2.839,22,0.432,23,0.033,24,0.9,25,0.983,26,0.983,28,2.424,29,1.077,31,0.86,32,0.341,33,0.213,34,0.377,35,0.82,36,1.237,37,1.237,38,0.82,39,1.659,40,0.82,41,0.727,42,0.82,43,0.541,44,0.82,45,0.541,46,0.749,47,1.237,48,0.541,49,0.82,50,0.541,51,0.82,52,1.095,53,1.296,54,0.541,55,0.82,56,0.589,57,0.755,58,0.82,59,0.541,60,0.82,61,0.541,62,0.496,63,0.82,64,0.82,65,0.016,66,0.016,89,0.971,106,3.481,112,1.139,114,1.936,116,1.465,140,1.382,142,1.345,148,1.139,149,1.62,153,0.749,154,1.804,155,2.887,156,0.749,158,1.163,161,2.114,165,0.496,166,0.496,168,0.902,169,1.872,171,1.872,172,1.587,173,1.295,175,2.919,176,1.659,179,2.218,183,1.696,184,1.724,185,1.345,188,2.152,189,2.147,190,2.152,192,2.354,194,1.491,195,1.804,207,1.163,215,2.527,227,1.049,234,1.965,235,1.237,241,1.163,244,1.765,262,1.755,279,2.422,317,2.905,319,1.606,320,3.357,321,2.787,322,4.013,328,2.905,329,3.251,330,1.847,332,2.152,338,1.755,340,2.887,342,2.786,343,2.786,345,2.596,350,2.147,351,2.887,363,2.787,365,2.152,366,2.152,367,2.787,371,2.152,389,1.237,390,1.465,404,2.787,406,1.426,407,1.606,411,2.787,412,0.82,413,2.424,422,2.424,440,1.847,441,1.936,442,1.163,443,1.163,531,2.424,603,1.606,625,2.424,626,2.919,627,4.508,628,3.739,629,2.213,630,2.213,631,2.213,632,2.213,633,4.479,634,3.339,635,3.339,636,3.339,637,2.213,638,3.339,639,3.339,640,2.213,641,2.213,642,2.213,643,2.213,644,2.213,645,2.213,646,2.213,647,2.213,648,2.213,649,2.213,650,3.339,651,4.021,652,2.213,653,2.213,654,2.213]],["title/injectables/EditorialService.html",[246,0.843,328,1.665]],["body/injectables/EditorialService.html",[3,0.22,4,0.19,9,0.19,14,1.001,19,0.22,22,0.493,23,0.033,24,1.163,28,3.301,29,1.088,31,0.774,32,0.351,33,0.22,34,0.388,41,0.854,53,1.328,65,0.017,66,0.017,95,1.322,116,1.499,136,1.092,140,1.387,142,1.63,146,1.483,153,0.766,156,0.512,165,1.146,166,1.146,168,1.309,172,1.606,173,1.478,174,0.988,176,2.162,179,2.561,189,2.18,192,2.983,194,1.553,206,0.607,227,1.783,246,0.909,247,1.093,254,1.47,255,2.932,257,2.202,261,2.45,262,2.687,264,3.57,271,2.48,285,2.64,296,1.199,300,1.093,301,1.936,303,2.932,304,2.45,317,3.131,325,3.301,328,1.796,337,2.48,338,1.796,365,3.762,406,1.47,412,1.517,497,1.98,531,3.301,534,2.852,625,2.48,626,4.12,628,2.852,655,1.904,656,2.852,657,3.416,658,3.416,659,3.416,660,2.281,661,2.852,662,2.281,663,4.872,664,3.416,665,2.281,666,3.416,667,2.281,668,2.281,669,3.416,670,3.416,671,2.281,672,3.416,673,3.416,674,2.281,675,3.416,676,4.096,677,2.281,678,3.416,679,2.281,680,2.281,681,2.281]],["title/components/EditorialsComponent.html",[0,0.348,54,0.774]],["body/components/EditorialsComponent.html",[0,0.498,1,0.724,2,1.326,3,0.375,4,0.227,5,1.008,6,1.008,7,1.008,8,1.008,9,0.227,11,1.008,12,2.24,13,2.062,15,1.44,17,1.44,19,0.262,20,0.482,22,0.477,23,0.033,25,0.95,26,0.95,29,1.149,31,0.89,32,0.419,33,0.262,34,0.463,35,1.008,36,1.44,37,1.44,38,1.008,39,1.833,40,1.008,41,0.686,42,1.008,43,0.665,44,1.008,45,0.665,46,0.872,47,1.44,48,0.665,49,1.008,50,0.665,51,1.008,52,0.665,53,1.214,54,1.209,55,1.008,56,0.724,57,0.928,58,1.008,59,0.665,60,1.008,61,0.665,62,0.61,63,1.008,64,1.008,65,0.019,66,0.019,112,0.928,125,3.95,136,0.61,139,1.706,140,1.22,142,1.206,146,1.206,148,1.326,149,1.827,153,0.872,154,1.993,156,0.61,160,1.759,161,2.256,165,0.872,166,0.872,168,1.109,169,2.122,171,1.833,172,1.221,173,1.124,183,1.221,184,1.326,185,1.993,192,2.043,194,1.209,195,1.566,204,1.43,206,0.724,207,1.124,234,2.296,235,1.008,241,2.043,244,1.99,260,1.863,291,1.975,301,0.928,325,3.591,328,2.86,336,3.245,337,2.822,338,2.6,342,2.253,343,2.253,345,1.577,348,2.822,369,2.822,389,1.44,390,1.99,406,1.754,407,1.975,409,2.271,412,1.008,431,2.271,442,1.43,443,1.43,449,3.292,450,2.628,452,3.188,457,3.245,470,1.754,471,2.822,479,2.822,497,2.253,543,2.271,558,2.822,561,3.245,599,2.271,600,1.975,601,2.271,602,2.271,603,1.975,656,3.245,661,3.245,682,2.271,683,4.535,684,3.887,685,2.721,686,3.887,687,2.721,688,3.887,689,2.721,690,2.721,691,3.887,692,3.887,693,3.887,694,2.721,695,2.721,696,2.721,697,2.721,698,2.721,699,3.887]],["title/injectables/EncryptService.html",[163,1.836,246,0.843]],["body/injectables/EncryptService.html",[3,0.393,4,0.34,9,0.34,14,1.788,19,0.393,20,0.631,22,0.491,23,0.033,24,1.175,25,0.996,26,0.996,29,1.141,31,0.867,32,0.628,33,0.393,34,0.694,41,0.565,65,0.025,66,0.025,136,0.914,143,2.678,153,1.143,156,1.247,163,2.954,165,0.914,166,0.914,168,1.143,196,3.285,242,2.626,246,1.356,247,1.953,260,2.443,300,1.953,301,1.39,304,1.953,700,3.401,701,5.56,702,5.096,703,5.096,704,5.096,705,4.075,706,5.096,707,5.096,708,5.096,709,5.56,710,5.096,711,4.075,712,3.401,713,3.401,714,5.096,715,5.096,716,5.096,717,4.075,718,4.075,719,4.075,720,4.075,721,4.075,722,4.075,723,4.075,724,4.075,725,4.075]],["title/components/NavBarComponent.html",[0,0.348,56,0.843]],["body/components/NavBarComponent.html",[0,0.495,1,0.715,2,1.314,3,0.371,4,0.224,5,0.996,6,0.996,7,0.996,8,0.996,9,0.224,11,0.996,12,2.235,13,2.057,15,1.428,17,1.428,19,0.259,20,0.478,21,2.368,22,0.434,23,0.033,24,0.722,25,0.942,26,0.942,29,1.112,31,0.767,32,0.414,33,0.259,34,0.458,35,0.996,36,1.428,37,1.428,38,0.996,39,1.823,40,0.996,41,0.624,42,0.996,43,0.657,44,0.996,45,0.657,46,0.864,47,1.428,48,0.657,49,0.996,50,0.657,51,0.996,52,0.657,53,0.552,54,0.657,55,0.996,56,1.309,57,1.947,58,0.996,59,0.657,60,0.996,61,0.657,62,0.603,63,0.996,64,0.996,65,0.019,66,0.019,102,4.051,112,0.917,140,1.103,148,1.314,149,1.815,153,0.864,154,1.982,156,0.603,160,1.702,161,2.248,165,0.603,166,0.603,168,1.01,169,2.008,171,2.008,173,1.114,174,1.423,176,2.115,179,1.691,183,1.545,184,1.848,185,1.553,186,2.234,187,2.798,188,2.484,189,1.847,190,2.484,194,1.442,195,1.553,204,1.413,206,0.715,207,0.778,225,2.798,226,2.798,227,1.21,228,2.484,229,4.107,235,0.996,267,4.524,279,1.847,338,2.026,340,2.484,343,2.852,350,2.358,351,3.171,371,2.484,389,1.428,390,1.977,412,0.996,449,3.27,452,3.171,463,2.484,470,1.733,497,2.234,504,2.798,558,2.798,593,3.217,726,4.659,727,2.245,728,3.854,729,4.505,730,3.854,731,4.505,732,5.709,733,2.689,734,3.854,735,2.689,736,3.854,737,3.854,738,2.689,739,3.854,740,3.854,741,4.92,742,3.854,743,5.419,744,3.854,745,4.92,746,2.689,747,2.689,748,3.854,749,2.689,750,2.689,751,2.689,752,4.92]],["title/guards/RouteGuardGuard.html",[113,2.042,753,2.299]],["body/guards/RouteGuardGuard.html",[3,0.356,4,0.308,9,0.308,14,1.621,19,0.356,20,0.458,22,0.461,23,0.033,29,0.982,31,0.991,32,0.569,33,0.356,34,0.629,41,0.663,65,0.024,66,0.024,112,1.632,113,3.085,114,2.775,123,4.859,133,2.294,139,2.1,148,1.259,153,1.073,156,0.828,159,2.693,161,2.445,165,1.073,166,1.073,168,0.828,176,1.773,183,1.765,184,1.632,185,1.928,186,2.775,203,2.38,206,0.982,207,1.068,220,2.38,221,3.083,246,1.273,264,3.078,268,2.775,278,3.995,282,3.995,296,1.941,300,1.77,304,2.546,389,1.967,390,1.621,412,1.368,463,3.085,754,3.693,755,4.433,756,3.083,757,4.786,758,3.693,759,3.693,760,3.693,761,5.618,762,5.311,763,5.618,764,3.693,765,4.786,766,4.786,767,4.786,768,4.786,769,4.786,770,4.786,771,4.786,772,5.311,773,3.693,774,5.618]],["title/interfaces/Staff.html",[62,0.71,132,1.08]],["body/interfaces/Staff.html",[3,0.42,4,0.364,9,0.364,19,0.42,20,0.659,22,0.607,23,0.032,24,1.199,33,0.42,41,0.827,62,1.285,65,0.026,66,0.026,132,1.488,134,2.293,136,0.978,137,2.293,142,1.587,146,1.655,174,1.261,389,2.124,775,3.641,776,3.846,777,3.846,778,3.846,779,3.846,780,4.331,781,4.161]],["title/components/StaffComponent.html",[0,0.348,59,0.774]],["body/components/StaffComponent.html",[0,0.484,1,0.688,2,1.278,3,0.361,4,0.216,5,0.958,6,0.958,7,0.958,8,0.958,9,0.216,11,0.958,12,2.218,13,2.042,15,1.388,17,1.388,19,0.249,20,0.464,22,0.249,23,0.033,24,0.96,25,0.632,26,0.632,29,0.991,31,0.939,32,0.398,33,0.249,34,0.44,35,0.958,36,1.388,37,1.388,38,0.958,39,1.79,40,0.958,41,0.611,42,0.958,43,0.632,44,0.958,45,0.632,46,0.84,47,1.388,48,0.632,49,0.958,50,0.632,51,0.958,52,0.632,53,0.531,54,0.632,55,0.958,56,0.688,57,0.882,58,0.958,59,1.181,60,0.958,61,0.632,62,1.199,63,0.958,64,0.958,65,0.019,66,0.019,89,1.135,112,0.882,129,2.415,139,1.644,140,1.267,143,1.969,145,2.84,146,0.688,148,1.278,149,1.775,153,0.84,154,1.946,156,0.58,158,2.899,159,2.644,161,2.222,162,3.678,163,2.801,165,0.58,166,0.58,168,0.84,169,1.79,171,1.388,172,1.177,173,1.083,174,1.397,176,1.388,179,2.12,184,1.927,188,2.415,194,1.381,196,2.415,198,2.415,203,1.667,205,2.158,206,0.688,207,1.397,209,2.158,211,2.158,214,2.158,215,1.969,225,2.72,226,2.72,227,1.517,230,3.128,231,2.158,232,2.158,233,2.158,234,2.12,235,0.958,236,2.158,237,3.678,238,2.158,239,2.158,240,2.158,241,1.359,242,1.667,243,2.158,244,1.644,260,1.796,286,1.239,350,1.796,371,2.415,374,3.128,443,1.969,444,2.158,553,4.033,581,2.158,776,2.84,777,3.114,778,2.415,779,3.114,782,2.158,783,4.406,784,3.747,785,4.406,786,2.158,787,3.1,788,2.586,789,2.586,790,2.586,791,3.747,792,3.747,793,3.747,794,3.747,795,2.586,796,1.877,797,2.158,798,2.586,799,2.586,800,2.586,801,2.586,802,2.72,803,2.586,804,2.586,805,2.586,806,2.586,807,2.586,808,2.586,809,2.586,810,2.586,811,2.586,812,4.832,813,2.72,814,3.128,815,3.128,816,3.128,817,3.747]],["title/components/StaffInfoComponent.html",[0,0.348,61,0.774]],["body/components/StaffInfoComponent.html",[0,0.427,1,0.558,2,1.093,3,0.452,4,0.175,5,0.777,6,0.777,7,0.777,8,0.777,9,0.175,11,0.777,12,2.123,13,1.954,15,1.188,17,1.188,19,0.202,20,0.397,21,1.102,22,0.452,23,0.033,25,1.065,26,1.065,29,1.14,31,0.904,32,0.323,33,0.202,34,0.357,35,0.777,36,1.188,37,1.188,38,0.777,39,1.614,40,0.777,41,0.77,42,0.777,43,0.513,44,0.777,45,0.513,46,0.719,47,1.188,48,0.513,49,0.777,50,0.513,51,0.777,52,0.513,53,0.43,54,0.513,55,0.777,56,0.558,57,0.715,58,0.777,59,0.513,60,0.777,61,1.065,62,1.371,63,0.777,64,0.777,65,0.016,66,0.016,89,0.92,99,3.641,112,0.715,133,2.373,136,0.47,137,2.792,140,0.719,142,1.503,143,2.29,144,2.825,145,3.191,146,1.159,148,1.093,149,1.568,153,0.719,154,1.755,155,2.809,156,0.47,158,2.707,159,2.469,160,1.617,161,2.075,165,0.719,166,0.719,168,1.053,169,2.017,171,1.188,172,1.368,174,1.657,176,1.188,183,1.007,184,1.954,194,1.065,198,2.066,203,1.352,204,1.102,206,0.558,207,1.26,215,2.29,227,1.555,234,2.172,235,1.834,241,1.102,244,1.407,261,1.536,262,1.685,286,1.536,298,1.75,301,0.715,342,1.858,344,2.327,412,1.188,441,2.721,442,2.045,446,1.522,447,3.248,448,2.676,461,1.75,467,1.75,503,3.424,600,1.522,776,2.809,777,3.58,778,2.066,779,3.191,780,3.408,781,2.327,786,1.75,787,2.869,796,1.522,797,1.75,802,2.327,813,2.327,816,2.676,818,4.715,819,3.919,820,3.891,821,2.676,822,4.357,823,3.637,824,2.676,825,2.097,826,2.097,827,2.097,828,2.097,829,3.206,830,2.097,831,3.206,832,3.206,833,2.097,834,2.097,835,2.097,836,2.097,837,2.097,838,2.097,839,2.097,840,2.097,841,2.097,842,2.097,843,2.097,844,2.097,845,2.097,846,2.097,847,2.097,848,2.097,849,2.097,850,2.097,851,2.097,852,2.097,853,2.097,854,2.097,855,2.097,856,2.097,857,2.097,858,2.097,859,2.097,860,2.097,861,4.357,862,3.206,863,3.206,864,3.206,865,3.206,866,3.206,867,3.206,868,3.206,869,1.75]],["title/injectables/StaffService.html",[246,0.843,787,1.836]],["body/injectables/StaffService.html",[3,0.212,4,0.183,9,0.183,14,0.964,19,0.212,20,0.411,22,0.486,23,0.033,24,1.14,25,0.537,26,0.537,29,1.074,31,0.815,32,0.338,33,0.212,34,0.374,41,0.827,62,1.373,65,0.016,66,0.016,95,1.273,116,1.756,136,1,140,0.744,142,1.62,146,1.6,153,0.744,156,0.492,160,1.643,165,1.074,166,1.074,168,1.261,172,1.401,173,1.29,174,1.852,176,1.867,179,2.211,183,1.401,192,1.745,194,1.317,195,1.797,202,3.724,206,0.584,207,1.29,227,1.401,246,0.883,247,1.052,249,2.905,254,1.415,255,2.876,257,2.14,261,1.591,264,3.485,275,2.771,284,1.415,285,2.14,286,1.591,287,2.905,288,2.41,289,2.41,290,2.41,296,1.154,299,1.594,300,1.052,301,2.035,303,3.248,304,2.296,310,1.594,344,2.41,365,3.248,389,1.867,503,2.14,663,4.206,776,3.731,777,3.875,778,2.14,779,3.731,780,4.293,781,3.658,787,1.924,796,1.594,802,4.081,813,3.238,814,3.724,815,3.724,819,5.253,821,2.771,823,3.724,824,2.771,870,1.833,871,3.32,872,3.32,873,3.32,874,2.196,875,2.196,876,2.196,877,3.32,878,2.196,879,3.32,880,2.196,881,4.461,882,4.461,883,4.461,884,4.461,885,3.32,886,2.196,887,3.32,888,2.196,889,2.196,890,3.32,891,2.196,892,3.32]],["title/interfaces/Token.html",[132,1.08,268,1.836]],["body/interfaces/Token.html",[3,0.469,4,0.406,9,0.406,19,0.469,20,0.703,22,0.469,23,0.031,24,1.124,33,0.469,65,0.028,66,0.028,132,1.659,134,2.556,136,1.091,173,1.406,174,1.406,268,3.73,893,4.06]],["title/coverage.html",[894,3.607]],["body/coverage.html",[0,0.691,1,1.002,9,0.314,10,3.143,22,0.363,23,0.033,43,0.921,45,0.921,46,0.844,48,0.921,50,0.921,52,0.921,53,0.773,54,0.921,56,1.002,59,0.921,61,0.921,62,0.844,65,0.024,66,0.024,99,2.427,101,2.427,102,2.734,104,2.427,106,2.427,113,2.427,132,1.997,133,1.805,135,3.143,147,3.143,159,1.805,160,1.183,163,2.183,235,1.986,246,1.595,248,3.143,268,2.183,286,1.805,311,3.143,318,3.519,319,3.519,327,1.979,328,1.979,446,3.519,489,3.143,547,3.143,605,3.143,624,3.143,627,3.143,655,3.143,682,3.143,700,3.143,726,3.143,727,3.143,753,2.734,755,3.143,756,3.143,775,3.143,782,3.143,787,2.183,818,3.143,869,3.143,870,3.143,893,3.143,894,3.143,895,3.766,896,3.766,897,3.766,898,3.766,899,3.766,900,3.766,901,3.766,902,3.766,903,4.847,904,4.847,905,3.766,906,3.766,907,4.847,908,4.847,909,5.36,910,5.36,911,3.143,912,3.766,913,3.766,914,3.766,915,4.847,916,3.766,917,3.766,918,3.766,919,4.847,920,4.847,921,3.766,922,3.766,923,3.766,924,3.766,925,3.766,926,3.766,927,3.766,928,3.766,929,3.766,930,3.143,931,4.847,932,4.046,933,4.847,934,3.143,935,3.766]],["title/dependencies.html",[70,2.455,936,1.92]],["body/dependencies.html",[23,0.033,32,0.711,65,0.027,66,0.027,70,2.977,82,3.855,85,4.592,86,3.993,89,2.027,112,1.575,180,3.352,296,2.427,450,2.677,620,3.855,712,3.855,713,3.855,937,4.618,938,6.421,939,4.618,940,4.618,941,4.618,942,4.618,943,4.618,944,4.618,945,4.618,946,4.618,947,4.618,948,4.618,949,4.618,950,4.618,951,4.618]],["title/index.html",[19,0.255,952,2.645,953,2.645]],["body/index.html",[0,0.619,4,0.35,23,0.026,41,0.581,65,0.026,66,0.026,78,3.045,148,1.43,286,2.01,506,3.045,936,3.045,954,4.194,955,5.188,956,4.194,957,5.634,958,5.634,959,3.501,960,4.194,961,4.194,962,5.188,963,6.049,964,6.246,965,4.194,966,4.194,967,4.194,968,4.194,969,4.194,970,4.194,971,4.194,972,4.194,973,4.194,974,4.194,975,4.194,976,5.634,977,5.634,978,4.194,979,5.886,980,4.194,981,4.194,982,4.194,983,4.194,984,5.188,985,5.188,986,5.886,987,4.194,988,5.188,989,5.188,990,4.194,991,6.162,992,4.194,993,4.194,994,4.194,995,5.188,996,4.194,997,4.194,998,4.194,999,4.194,1000,4.194,1001,4.194,1002,5.634,1003,4.194,1004,4.194,1005,4.194,1006,3.045,1007,4.194]],["title/modules.html",[69,2.505]],["body/modules.html",[23,0.029,65,0.029,66,0.029,68,3.253,69,2.925,75,2.925,86,3.663,1008,5.046,1009,5.046,1010,5.793,1011,5.046,1012,5.046]],["title/overview.html",[1006,3.137]],["body/overview.html",[1,1.665,2,1.444,23,0.032,43,1.383,45,1.383,48,1.383,50,1.383,52,1.383,54,1.383,56,1.505,59,1.383,61,1.383,65,0.026,66,0.026,68,4.28,69,2.454,70,3.363,71,3.534,72,3.534,73,3.534,74,3.534,75,3.279,76,4.356,77,3.534,78,3.073,111,2.729,134,2.225,247,2.029,753,3.073,911,3.534,1006,3.073,1013,4.233,1014,4.233,1015,4.233,1016,4.233,1017,4.233]],["title/properties.html",[20,0.472,936,1.92]],["body/properties.html",[20,0.634,23,0.03,65,0.029,66,0.029,959,4.269,1018,5.114]],["title/routes.html",[111,2.786]],["body/routes.html",[23,0.029,65,0.029,66,0.029,111,3.319]],["title/miscellaneous/variables.html",[1019,2.208,1020,3.18]],["body/miscellaneous/variables.html",[19,0.465,22,0.544,23,0.032,25,1.38,26,1.38,65,0.028,66,0.028,284,3.638,390,2.116,412,1.787,930,4.026,932,5.149,934,4.026,1019,4.026,1020,4.026,1021,4.823,1022,4.823,1023,5.643]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Auth.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"injectables/CokieService.html":{},"interfaces/Editorial.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"injectables/EncryptService.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{},"interfaces/Staff.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{},"interfaces/Token.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":235,"title":{},"body":{"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1018,"title":{},"body":{"properties.html":{}}}],["0.11.4",{"_index":951,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":933,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":898,"title":{},"body":{"coverage.html":{}}}],["0123456789123456",{"_index":710,"title":{},"body":{"injectables/EncryptService.html":{}}}],["1",{"_index":1016,"title":{},"body":{"overview.html":{}}}],["1/2",{"_index":916,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":920,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":910,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":914,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":912,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1014,"title":{},"body":{"overview.html":{}}}],["10/13",{"_index":902,"title":{},"body":{"coverage.html":{}}}],["10px",{"_index":241,"title":{},"body":{"components/AuthComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["10rem",{"_index":245,"title":{},"body":{"components/AuthComponent.html":{}}}],["11",{"_index":911,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["12",{"_index":913,"title":{},"body":{"coverage.html":{}}}],["14.0.1",{"_index":946,"title":{},"body":{"dependencies.html":{}}}],["14.2.0",{"_index":938,"title":{},"body":{"dependencies.html":{}}}],["14.2.4",{"_index":960,"title":{},"body":{"index.html":{}}}],["16",{"_index":720,"title":{},"body":{"injectables/EncryptService.html":{}}}],["2",{"_index":1013,"title":{},"body":{"overview.html":{}}}],["2.11.6",{"_index":943,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":949,"title":{},"body":{"dependencies.html":{}}}],["2/5",{"_index":900,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":918,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":909,"title":{},"body":{"coverage.html":{}}}],["20px",{"_index":441,"title":{},"body":{"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/StaffInfoComponent.html":{}}}],["25",{"_index":919,"title":{},"body":{"coverage.html":{}}}],["28",{"_index":917,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":231,"title":{},"body":{"components/AuthComponent.html":{},"components/StaffComponent.html":{}}}],["2rem",{"_index":243,"title":{},"body":{"components/AuthComponent.html":{},"components/StaffComponent.html":{}}}],["3",{"_index":565,"title":{},"body":{"components/BooksComponent.html":{}}}],["3/5",{"_index":926,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":908,"title":{},"body":{"coverage.html":{}}}],["30px",{"_index":443,"title":{},"body":{"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/StaffComponent.html":{}}}],["35",{"_index":905,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":907,"title":{},"body":{"coverage.html":{}}}],["4.1.1",{"_index":945,"title":{},"body":{"dependencies.html":{}}}],["4/8",{"_index":927,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":899,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":486,"title":{},"body":{"components/BookInfoComponent.html":{}}}],["4287f5",{"_index":233,"title":{},"body":{"components/AuthComponent.html":{},"components/StaffComponent.html":{}}}],["45",{"_index":928,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1017,"title":{},"body":{"overview.html":{}}}],["5.2.2",{"_index":944,"title":{},"body":{"dependencies.html":{}}}],["5/11",{"_index":929,"title":{},"body":{"coverage.html":{}}}],["5/14",{"_index":906,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":922,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":915,"title":{},"body":{"coverage.html":{}}}],["500px",{"_index":488,"title":{},"body":{"components/BookInfoComponent.html":{}}}],["50px",{"_index":479,"title":{},"body":{"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialsComponent.html":{}}}],["576px",{"_index":484,"title":{},"body":{"components/BookInfoComponent.html":{}}}],["6",{"_index":1015,"title":{},"body":{"overview.html":{}}}],["6/8",{"_index":904,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":925,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":921,"title":{},"body":{"coverage.html":{}}}],["68px",{"_index":445,"title":{},"body":{"components/BookFormComponent.html":{}}}],["7.5.0",{"_index":947,"title":{},"body":{"dependencies.html":{}}}],["7/10",{"_index":924,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":923,"title":{},"body":{"coverage.html":{}}}],["70px",{"_index":480,"title":{},"body":{"components/BookInfoComponent.html":{}}}],["75",{"_index":903,"title":{},"body":{"coverage.html":{}}}],["76",{"_index":901,"title":{},"body":{"coverage.html":{}}}],["_iv",{"_index":716,"title":{},"body":{"injectables/EncryptService.html":{}}}],["_key",{"_index":714,"title":{},"body":{"injectables/EncryptService.html":{}}}],["accept",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["acciones",{"_index":862,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["actions",{"_index":483,"title":{},"body":{"components/BookInfoComponent.html":{}}}],["activan",{"_index":464,"title":{},"body":{"components/BookInfoComponent.html":{}}}],["activatedroute",{"_index":329,"title":{},"body":{"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/EditorialFormComponent.html":{}}}],["activatedroutesnapshot",{"_index":761,"title":{},"body":{"guards/RouteGuardGuard.html":{}}}],["actual",{"_index":507,"title":{},"body":{"injectables/BookService.html":{},"components/BooksComponent.html":{}}}],["actual_component",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["actualiza",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"injectables/StaffService.html":{}}}],["actualizacion",{"_index":832,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["actualizar",{"_index":368,"title":{},"body":{"components/BookFormComponent.html":{}}}],["acuerdo",{"_index":400,"title":{},"body":{"components/BookFormComponent.html":{}}}],["add",{"_index":998,"title":{},"body":{"index.html":{}}}],["added",{"_index":237,"title":{},"body":{"components/AuthComponent.html":{},"components/StaffComponent.html":{}}}],["agregar",{"_index":369,"title":{},"body":{"components/BookFormComponent.html":{},"components/BooksComponent.html":{},"components/EditorialsComponent.html":{}}}],["agrego",{"_index":364,"title":{},"body":{"components/BookFormComponent.html":{}}}],["al",{"_index":179,"title":{},"body":{"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"injectables/StaffService.html":{}}}],["alert(\"usuario",{"_index":222,"title":{},"body":{"components/AuthComponent.html":{}}}],["alerta",{"_index":193,"title":{},"body":{"components/AuthComponent.html":{}}}],["almacena",{"_index":395,"title":{},"body":{"components/BookFormComponent.html":{},"injectables/CokieService.html":{}}}],["almacenar",{"_index":384,"title":{},"body":{"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{}}}],["angular",{"_index":957,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":937,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":939,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/EditorialService.html":{},"injectables/StaffService.html":{}}}],["angular/compiler",{"_index":940,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"injectables/CokieService.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"injectables/EncryptService.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":112,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"dependencies.html":{}}}],["anu",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["aparece",{"_index":560,"title":{},"body":{"components/BooksComponent.html":{}}}],["apellido",{"_index":813,"title":{},"body":{"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["app.component",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":969,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["appmodule",{"_index":68,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":75,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":980,"title":{},"body":{"index.html":{}}}],["asc",{"_index":501,"title":{},"body":{"injectables/BookService.html":{}}}],["ascendente",{"_index":515,"title":{},"body":{"injectables/BookService.html":{}}}],["asi",{"_index":346,"title":{},"body":{"components/BookFormComponent.html":{}}}],["auntetico",{"_index":691,"title":{},"body":{"components/EditorialsComponent.html":{}}}],["autentica",{"_index":182,"title":{},"body":{"components/AuthComponent.html":{}}}],["autenticacion",{"_index":141,"title":{},"body":{"interfaces/Auth.html":{}}}],["autenticado",{"_index":186,"title":{},"body":{"components/AuthComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{}}}],["auth",{"_index":133,"title":{"interfaces/Auth.html":{}},"body":{"interfaces/Auth.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"guards/RouteGuardGuard.html":{},"components/StaffInfoComponent.html":{},"coverage.html":{}}}],["auth'},{'name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["auth.component.css",{"_index":150,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.html",{"_index":151,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth/auth.component",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["authcomponent",{"_index":43,"title":{"components/AuthComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["author",{"_index":313,"title":{},"body":{"interfaces/Book.html":{},"components/BookFormComponent.html":{},"injectables/BookService.html":{}}}],["authorization",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/StaffService.html":{}}}],["authservice",{"_index":159,"title":{"injectables/AuthService.html":{}},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"guards/RouteGuardGuard.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"coverage.html":{}}}],["auto",{"_index":236,"title":{},"body":{"components/AuthComponent.html":{},"components/StaffComponent.html":{}}}],["automatically",{"_index":970,"title":{},"body":{"index.html":{}}}],["autor",{"_index":433,"title":{},"body":{"components/BookFormComponent.html":{},"injectables/BookService.html":{}}}],["available",{"_index":1012,"title":{},"body":{"modules.html":{}}}],["back",{"_index":663,"title":{},"body":{"injectables/EditorialService.html":{},"injectables/StaffService.html":{}}}],["bar",{"_index":728,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["bar.component",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.css",{"_index":729,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.html",{"_index":730,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts",{"_index":727,"title":{},"body":{"components/NavBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:12",{"_index":747,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:13",{"_index":734,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:19",{"_index":746,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:27",{"_index":738,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:40",{"_index":735,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar/nav",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"components/NavBarComponent.html":{},"coverage.html":{}}}],["base",{"_index":355,"title":{},"body":{"components/BookFormComponent.html":{}}}],["bearer",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/StaffService.html":{}}}],["birth",{"_index":776,"title":{},"body":{"interfaces/Staff.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["body",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/EditorialService.html":{},"injectables/StaffService.html":{}}}],["book",{"_index":46,"title":{"interfaces/Book.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"interfaces/Book.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"coverage.html":{}}}],["book.author",{"_index":475,"title":{},"body":{"components/BookInfoComponent.html":{}}}],["book.content",{"_index":586,"title":{},"body":{"components/BooksComponent.html":{}}}],["book.description",{"_index":477,"title":{},"body":{"components/BookInfoComponent.html":{},"components/BooksComponent.html":{}}}],["book.name",{"_index":473,"title":{},"body":{"components/BookInfoComponent.html":{},"components/BooksComponent.html":{}}}],["book.price",{"_index":476,"title":{},"body":{"components/BookInfoComponent.html":{}}}],["book.totalpages",{"_index":584,"title":{},"body":{"components/BooksComponent.html":{}}}],["book/create",{"_index":122,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["book/edit/:id",{"_index":124,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["bookformcomponent",{"_index":45,"title":{"components/BookFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bookinfocomponent",{"_index":48,"title":{"components/BookInfoComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["books",{"_index":119,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BooksComponent.html":{}}}],["books'},{'name",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["books.component.css",{"_index":548,"title":{},"body":{"components/BooksComponent.html":{}}}],["books.component.html",{"_index":549,"title":{},"body":{"components/BooksComponent.html":{}}}],["books/books.component",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["bookscomponent",{"_index":50,"title":{"components/BooksComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bookservice",{"_index":327,"title":{"injectables/BookService.html":{}},"body":{"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"coverage.html":{}}}],["boolean",{"_index":389,"title":{},"body":{"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{},"interfaces/Staff.html":{},"injectables/StaffService.html":{}}}],["booleano",{"_index":513,"title":{},"body":{"injectables/BookService.html":{}}}],["bootstrap",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":230,"title":{},"body":{"components/AuthComponent.html":{},"components/StaffComponent.html":{}}}],["boton",{"_index":561,"title":{},"body":{"components/BooksComponent.html":{},"components/EditorialsComponent.html":{}}}],["botones",{"_index":465,"title":{},"body":{"components/BookInfoComponent.html":{}}}],["bottom",{"_index":240,"title":{},"body":{"components/AuthComponent.html":{},"components/StaffComponent.html":{}}}],["browse",{"_index":1010,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":979,"title":{},"body":{"index.html":{}}}],["busca",{"_index":341,"title":{},"body":{"components/BookFormComponent.html":{}}}],["buscar",{"_index":353,"title":{},"body":{"components/BookFormComponent.html":{},"components/BooksComponent.html":{}}}],["busqueda",{"_index":568,"title":{},"body":{"components/BooksComponent.html":{}}}],["cambia",{"_index":344,"title":{},"body":{"components/BookFormComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["cambiar",{"_index":868,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["cambio",{"_index":363,"title":{},"body":{"components/BookFormComponent.html":{},"components/EditorialFormComponent.html":{}}}],["campos",{"_index":887,"title":{},"body":{"injectables/StaffService.html":{}}}],["canactivate",{"_index":123,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/RouteGuardGuard.html":{}}}],["canactivate(route",{"_index":760,"title":{},"body":{"guards/RouteGuardGuard.html":{}}}],["cantidad",{"_index":434,"title":{},"body":{"components/BookFormComponent.html":{},"injectables/BookService.html":{}}}],["capabilities",{"_index":1000,"title":{},"body":{"index.html":{}}}],["card",{"_index":599,"title":{},"body":{"components/BooksComponent.html":{},"components/EditorialsComponent.html":{}}}],["carga",{"_index":349,"title":{},"body":{"components/BookFormComponent.html":{}}}],["caso",{"_index":351,"title":{},"body":{"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/EditorialFormComponent.html":{},"components/NavBarComponent.html":{}}}],["catcherror",{"_index":537,"title":{},"body":{"injectables/BookService.html":{}}}],["center",{"_index":602,"title":{},"body":{"components/BooksComponent.html":{},"components/EditorialsComponent.html":{}}}],["cerrar",{"_index":732,"title":{},"body":{"components/NavBarComponent.html":{}}}],["cerrarsesion",{"_index":731,"title":{},"body":{"components/NavBarComponent.html":{}}}],["change",{"_index":972,"title":{},"body":{"index.html":{}}}],["changestatus",{"_index":821,"title":{},"body":{"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["changestatus(id",{"_index":824,"title":{},"body":{"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["check",{"_index":1005,"title":{},"body":{"index.html":{}}}],["choice",{"_index":994,"title":{},"body":{"index.html":{}}}],["cierra",{"_index":736,"title":{},"body":{"components/NavBarComponent.html":{}}}],["ciertas",{"_index":768,"title":{},"body":{"guards/RouteGuardGuard.html":{}}}],["class",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"injectables/CokieService.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"injectables/EncryptService.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["cli",{"_index":958,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":974,"title":{},"body":{"index.html":{}}}],["codigo",{"_index":381,"title":{},"body":{"components/BookFormComponent.html":{},"components/BooksComponent.html":{}}}],["cokie.service",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/StaffService.html":{}}}],["cokieservice",{"_index":160,"title":{"injectables/CokieService.html":{}},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"injectables/CokieService.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{},"coverage.html":{}}}],["command",{"_index":995,"title":{},"body":{"index.html":{}}}],["como",{"_index":347,"title":{},"body":{"components/BookFormComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["componente",{"_index":373,"title":{},"body":{"components/BookFormComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"overview.html":{}}}],["con",{"_index":366,"title":{},"body":{"components/BookFormComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{}}}],["conocer",{"_index":378,"title":{},"body":{"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{}}}],["console.log(book",{"_index":582,"title":{},"body":{"components/BooksComponent.html":{}}}],["console.log(id",{"_index":543,"title":{},"body":{"injectables/BookService.html":{},"components/EditorialsComponent.html":{}}}],["console.log(this.editorial.img",{"_index":648,"title":{},"body":{"components/EditorialFormComponent.html":{}}}],["console.log(website",{"_index":647,"title":{},"body":{"components/EditorialFormComponent.html":{}}}],["const",{"_index":116,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"injectables/StaffService.html":{}}}],["constructor",{"_index":156,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"injectables/CokieService.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"injectables/EncryptService.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["constructor(auth",{"_index":758,"title":{},"body":{"guards/RouteGuardGuard.html":{}}}],["constructor(bookservice",{"_index":453,"title":{},"body":{"components/BookInfoComponent.html":{},"components/BooksComponent.html":{}}}],["constructor(cokieservice",{"_index":733,"title":{},"body":{"components/NavBarComponent.html":{}}}],["constructor(cookieservice",{"_index":608,"title":{},"body":{"injectables/CokieService.html":{}}}],["constructor(editorialservice",{"_index":685,"title":{},"body":{"components/EditorialsComponent.html":{}}}],["constructor(formbuilder",{"_index":157,"title":{},"body":{"components/AuthComponent.html":{},"components/BookFormComponent.html":{}}}],["constructor(http",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/EditorialService.html":{},"injectables/StaffService.html":{}}}],["constructor(private",{"_index":206,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"injectables/CokieService.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["constructor(route",{"_index":629,"title":{},"body":{"components/EditorialFormComponent.html":{}}}],["constructor(staffservice",{"_index":786,"title":{},"body":{"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["container",{"_index":440,"title":{},"body":{"components/BookFormComponent.html":{},"components/EditorialFormComponent.html":{}}}],["contenedor",{"_index":478,"title":{},"body":{"components/BookInfoComponent.html":{}}}],["contenga",{"_index":633,"title":{},"body":{"components/EditorialFormComponent.html":{}}}],["contenida",{"_index":613,"title":{},"body":{"injectables/CokieService.html":{}}}],["content",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"components/BooksComponent.html":{},"components/EditorialsComponent.html":{}}}],["contrario",{"_index":744,"title":{},"body":{"components/NavBarComponent.html":{}}}],["contraseña",{"_index":196,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/EncryptService.html":{},"components/StaffComponent.html":{}}}],["cookie",{"_index":450,"title":{},"body":{"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"injectables/CokieService.html":{},"components/EditorialsComponent.html":{},"dependencies.html":{}}}],["cookieservice",{"_index":609,"title":{},"body":{"injectables/CokieService.html":{}}}],["correo",{"_index":817,"title":{},"body":{"components/StaffComponent.html":{}}}],["coverage",{"_index":894,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/EditorialService.html":{}}}],["creacion",{"_index":374,"title":{},"body":{"components/BookFormComponent.html":{},"components/StaffComponent.html":{}}}],["creación",{"_index":359,"title":{},"body":{"components/BookFormComponent.html":{}}}],["crear",{"_index":343,"title":{},"body":{"components/BookFormComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{}}}],["create",{"_index":635,"title":{},"body":{"components/EditorialFormComponent.html":{}}}],["creo",{"_index":639,"title":{},"body":{"components/EditorialFormComponent.html":{}}}],["crypto",{"_index":712,"title":{},"body":{"injectables/EncryptService.html":{},"dependencies.html":{}}}],["cryptojs",{"_index":711,"title":{},"body":{"injectables/EncryptService.html":{}}}],["cryptojs.aes.encrypt",{"_index":717,"title":{},"body":{"injectables/EncryptService.html":{}}}],["cryptojs.enc.utf8.parse(this.tokenfromui",{"_index":715,"title":{},"body":{"injectables/EncryptService.html":{}}}],["cryptojs.mode.ecb",{"_index":723,"title":{},"body":{"injectables/EncryptService.html":{}}}],["cryptojs.pad.pkcs7",{"_index":724,"title":{},"body":{"injectables/EncryptService.html":{}}}],["cuenta",{"_index":743,"title":{},"body":{"components/NavBarComponent.html":{}}}],["da",{"_index":356,"title":{},"body":{"components/BookFormComponent.html":{}}}],["dado",{"_index":708,"title":{},"body":{"injectables/EncryptService.html":{}}}],["data",{"_index":215,"title":{},"body":{"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["data.token",{"_index":217,"title":{},"body":{"components/AuthComponent.html":{}}}],["date",{"_index":781,"title":{},"body":{"interfaces/Staff.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["date(birth",{"_index":808,"title":{},"body":{"components/StaffComponent.html":{}}}],["datos",{"_index":137,"title":{},"body":{"interfaces/Auth.html":{},"interfaces/Book.html":{},"components/BookFormComponent.html":{},"interfaces/Editorial.html":{},"interfaces/Staff.html":{},"components/StaffInfoComponent.html":{}}}],["de",{"_index":194,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"injectables/CokieService.html":{},"interfaces/Editorial.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["declarations",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["decripcion",{"_index":530,"title":{},"body":{"injectables/BookService.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"injectables/EncryptService.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"injectables/CokieService.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"injectables/EncryptService.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["del",{"_index":174,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"injectables/EditorialService.html":{},"components/NavBarComponent.html":{},"interfaces/Staff.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{},"interfaces/Token.html":{}}}],["delete",{"_index":606,"title":{},"body":{"injectables/CokieService.html":{}}}],["delete(name",{"_index":611,"title":{},"body":{"injectables/CokieService.html":{}}}],["deletebook",{"_index":451,"title":{},"body":{"components/BookInfoComponent.html":{},"injectables/BookService.html":{}}}],["deletebook(id",{"_index":455,"title":{},"body":{"components/BookInfoComponent.html":{},"injectables/BookService.html":{}}}],["deleteeditorial",{"_index":656,"title":{},"body":{"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{}}}],["deleteeditorial(id",{"_index":661,"title":{},"body":{"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{}}}],["dentro",{"_index":614,"title":{},"body":{"injectables/CokieService.html":{}}}],["dependencies",{"_index":70,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependiendo",{"_index":340,"title":{},"body":{"components/BookFormComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/NavBarComponent.html":{}}}],["descente",{"_index":516,"title":{},"body":{"injectables/BookService.html":{}}}],["descripcion",{"_index":482,"title":{},"body":{"components/BookInfoComponent.html":{}}}],["descripción",{"_index":439,"title":{},"body":{"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{}}}],["description",{"_index":136,"title":{},"body":{"interfaces/Auth.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"injectables/CokieService.html":{},"interfaces/Editorial.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"injectables/EncryptService.html":{},"interfaces/Staff.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{},"interfaces/Token.html":{}}}],["detalle",{"_index":594,"title":{},"body":{"components/BooksComponent.html":{}}}],["determinar",{"_index":514,"title":{},"body":{"injectables/BookService.html":{}}}],["dev",{"_index":966,"title":{},"body":{"index.html":{}}}],["development",{"_index":961,"title":{},"body":{"index.html":{}}}],["directive",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["directives",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":978,"title":{},"body":{"index.html":{}}}],["directory",{"_index":983,"title":{},"body":{"index.html":{}}}],["dist",{"_index":982,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":895,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["donde",{"_index":181,"title":{},"body":{"components/AuthComponent.html":{},"components/BookFormComponent.html":{}}}],["dropdown",{"_index":398,"title":{},"body":{"components/BookFormComponent.html":{}}}],["dynamic",{"_index":941,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":380,"title":{},"body":{"components/BookFormComponent.html":{},"components/BooksComponent.html":{}}}],["e.target.value",{"_index":429,"title":{},"body":{"components/BookFormComponent.html":{},"components/BooksComponent.html":{}}}],["e2e",{"_index":992,"title":{},"body":{"index.html":{}}}],["ediar",{"_index":388,"title":{},"body":{"components/BookFormComponent.html":{}}}],["edición",{"_index":360,"title":{},"body":{"components/BookFormComponent.html":{}}}],["edit",{"_index":322,"title":{},"body":{"components/BookFormComponent.html":{},"components/EditorialFormComponent.html":{}}}],["edita",{"_index":534,"title":{},"body":{"injectables/BookService.html":{},"injectables/EditorialService.html":{}}}],["editar",{"_index":342,"title":{},"body":{"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/StaffInfoComponent.html":{}}}],["edito",{"_index":638,"title":{},"body":{"components/EditorialFormComponent.html":{}}}],["editorial",{"_index":53,"title":{"interfaces/Editorial.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"interfaces/Editorial.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"coverage.html":{}}}],["editorial.name",{"_index":699,"title":{},"body":{"components/EditorialsComponent.html":{}}}],["editorial/create",{"_index":126,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["editorial/edit/:id",{"_index":127,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["editoriales",{"_index":338,"title":{},"body":{"components/BookFormComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{}}}],["editorialformcomponent",{"_index":52,"title":{"components/EditorialFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editorialid",{"_index":314,"title":{},"body":{"interfaces/Book.html":{},"components/BookFormComponent.html":{},"injectables/BookService.html":{}}}],["editorialid).subscribe",{"_index":424,"title":{},"body":{"components/BookFormComponent.html":{}}}],["editorials",{"_index":125,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BookFormComponent.html":{},"components/EditorialsComponent.html":{}}}],["editorials'},{'name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["editorials.component.css",{"_index":683,"title":{},"body":{"components/EditorialsComponent.html":{}}}],["editorials.component.html",{"_index":684,"title":{},"body":{"components/EditorialsComponent.html":{}}}],["editorials/editorials.component",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["editorialscomponent",{"_index":54,"title":{"components/EditorialsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editorialservice",{"_index":328,"title":{"injectables/EditorialService.html":{}},"body":{"components/BookFormComponent.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"coverage.html":{}}}],["edtitorial",{"_index":669,"title":{},"body":{"injectables/EditorialService.html":{}}}],["ejemplo",{"_index":402,"title":{},"body":{"components/BookFormComponent.html":{}}}],["el",{"_index":183,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["element",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["elimina",{"_index":497,"title":{},"body":{"injectables/BookService.html":{},"injectables/CokieService.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{}}}],["eliminar",{"_index":457,"title":{},"body":{"components/BookInfoComponent.html":{},"components/EditorialsComponent.html":{}}}],["email",{"_index":777,"title":{},"body":{"interfaces/Staff.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["empelado",{"_index":200,"title":{},"body":{"components/AuthComponent.html":{}}}],["emplea",{"_index":377,"title":{},"body":{"components/BookFormComponent.html":{},"components/BooksComponent.html":{}}}],["empleados",{"_index":138,"title":{},"body":{"interfaces/Auth.html":{}}}],["en",{"_index":350,"title":{},"body":{"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"injectables/CokieService.html":{},"components/EditorialFormComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{}}}],["encripta",{"_index":706,"title":{},"body":{"injectables/EncryptService.html":{}}}],["encrypt",{"_index":162,"title":{},"body":{"components/AuthComponent.html":{},"components/StaffComponent.html":{}}}],["encrypted",{"_index":709,"title":{},"body":{"injectables/EncryptService.html":{}}}],["encrypted.tostring",{"_index":725,"title":{},"body":{"injectables/EncryptService.html":{}}}],["encryptservice",{"_index":163,"title":{"injectables/EncryptService.html":{}},"body":{"components/AuthComponent.html":{},"injectables/EncryptService.html":{},"components/StaffComponent.html":{},"coverage.html":{}}}],["encryptusingaes256",{"_index":702,"title":{},"body":{"injectables/EncryptService.html":{}}}],["encryptusingaes256(password",{"_index":704,"title":{},"body":{"injectables/EncryptService.html":{}}}],["end",{"_index":991,"title":{},"body":{"index.html":{}}}],["enviado",{"_index":178,"title":{},"body":{"components/AuthComponent.html":{},"components/BookInfoComponent.html":{}}}],["environment",{"_index":932,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":221,"title":{},"body":{"components/AuthComponent.html":{},"guards/RouteGuardGuard.html":{}}}],["es",{"_index":177,"title":{},"body":{"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"injectables/BookService.html":{}}}],["esatado",{"_index":882,"title":{},"body":{"injectables/StaffService.html":{}}}],["escogida",{"_index":382,"title":{},"body":{"components/BookFormComponent.html":{},"components/BooksComponent.html":{}}}],["escogido",{"_index":570,"title":{},"body":{"components/BooksComponent.html":{}}}],["escogio",{"_index":379,"title":{},"body":{"components/BookFormComponent.html":{},"components/BooksComponent.html":{}}}],["ese",{"_index":354,"title":{},"body":{"components/BookFormComponent.html":{}}}],["especifico",{"_index":468,"title":{},"body":{"components/BookInfoComponent.html":{}}}],["est",{"_index":559,"title":{},"body":{"components/BooksComponent.html":{}}}],["esta",{"_index":463,"title":{},"body":{"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{}}}],["estatus",{"_index":861,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["este",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"components/BookFormComponent.html":{}}}],["esto",{"_index":739,"title":{},"body":{"components/NavBarComponent.html":{}}}],["execute",{"_index":988,"title":{},"body":{"index.html":{}}}],["export",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Auth.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"injectables/CokieService.html":{},"interfaces/Editorial.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"injectables/EncryptService.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{},"interfaces/Staff.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{},"interfaces/Token.html":{}}}],["exports",{"_index":131,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["false",{"_index":390,"title":{},"body":{"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{},"miscellaneous/variables.html":{}}}],["falso",{"_index":884,"title":{},"body":{"injectables/StaffService.html":{}}}],["fecha",{"_index":814,"title":{},"body":{"components/StaffComponent.html":{},"injectables/StaffService.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Auth.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"injectables/CokieService.html":{},"interfaces/Editorial.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"injectables/EncryptService.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{},"interfaces/Staff.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{},"interfaces/Token.html":{},"coverage.html":{}}}],["files",{"_index":973,"title":{},"body":{"index.html":{}}}],["finalizar",{"_index":371,"title":{},"body":{"components/BookFormComponent.html":{},"components/EditorialFormComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{}}}],["first",{"_index":997,"title":{},"body":{"index.html":{}}}],["firstname",{"_index":794,"title":{},"body":{"components/StaffComponent.html":{}}}],["firstnameparam",{"_index":798,"title":{},"body":{"components/StaffComponent.html":{}}}],["float",{"_index":238,"title":{},"body":{"components/AuthComponent.html":{},"components/StaffComponent.html":{}}}],["form",{"_index":175,"title":{},"body":{"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/EditorialFormComponent.html":{}}}],["form'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["form.component",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["form.component.css",{"_index":320,"title":{},"body":{"components/BookFormComponent.html":{},"components/EditorialFormComponent.html":{}}}],["form.component.html",{"_index":321,"title":{},"body":{"components/BookFormComponent.html":{},"components/EditorialFormComponent.html":{}}}],["form.component.ts",{"_index":319,"title":{},"body":{"components/BookFormComponent.html":{},"components/EditorialFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:113",{"_index":376,"title":{},"body":{"components/BookFormComponent.html":{}}}],["form.component.ts:121",{"_index":335,"title":{},"body":{"components/BookFormComponent.html":{}}}],["form.component.ts:128",{"_index":331,"title":{},"body":{"components/BookFormComponent.html":{}}}],["form.component.ts:15",{"_index":641,"title":{},"body":{"components/EditorialFormComponent.html":{}}}],["form.component.ts:16",{"_index":330,"title":{},"body":{"components/BookFormComponent.html":{},"components/EditorialFormComponent.html":{}}}],["form.component.ts:17",{"_index":640,"title":{},"body":{"components/EditorialFormComponent.html":{}}}],["form.component.ts:23",{"_index":630,"title":{},"body":{"components/EditorialFormComponent.html":{}}}],["form.component.ts:28",{"_index":399,"title":{},"body":{"components/BookFormComponent.html":{}}}],["form.component.ts:33",{"_index":391,"title":{},"body":{"components/BookFormComponent.html":{}}}],["form.component.ts:35",{"_index":632,"title":{},"body":{"components/EditorialFormComponent.html":{}}}],["form.component.ts:38",{"_index":383,"title":{},"body":{"components/BookFormComponent.html":{}}}],["form.component.ts:51",{"_index":637,"title":{},"body":{"components/EditorialFormComponent.html":{}}}],["form.component.ts:53",{"_index":394,"title":{},"body":{"components/BookFormComponent.html":{}}}],["form.component.ts:54",{"_index":393,"title":{},"body":{"components/BookFormComponent.html":{}}}],["form.component.ts:59",{"_index":396,"title":{},"body":{"components/BookFormComponent.html":{}}}],["form.component.ts:66",{"_index":339,"title":{},"body":{"components/BookFormComponent.html":{}}}],["form.component.ts:75",{"_index":631,"title":{},"body":{"components/EditorialFormComponent.html":{}}}],["form.component.ts:84",{"_index":362,"title":{},"body":{"components/BookFormComponent.html":{}}}],["form/book",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookFormComponent.html":{},"coverage.html":{}}}],["form/editorial",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditorialFormComponent.html":{},"coverage.html":{}}}],["forma",{"_index":511,"title":{},"body":{"injectables/BookService.html":{}}}],["formbuilder",{"_index":158,"title":{},"body":{"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["formsmodule",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["full",{"_index":121,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["funcion",{"_index":367,"title":{},"body":{"components/BookFormComponent.html":{},"components/EditorialFormComponent.html":{}}}],["further",{"_index":1001,"title":{},"body":{"index.html":{}}}],["genera",{"_index":693,"title":{},"body":{"components/EditorialsComponent.html":{}}}],["generado",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["general",{"_index":481,"title":{},"body":{"components/BookInfoComponent.html":{}}}],["generate",{"_index":976,"title":{},"body":{"index.html":{}}}],["generated",{"_index":956,"title":{},"body":{"index.html":{}}}],["get(name",{"_index":615,"title":{},"body":{"injectables/CokieService.html":{}}}],["getbook",{"_index":490,"title":{},"body":{"injectables/BookService.html":{}}}],["getbook(page",{"_index":498,"title":{},"body":{"injectables/BookService.html":{}}}],["getbookbyid",{"_index":324,"title":{},"body":{"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{}}}],["getbookbyid(id",{"_index":518,"title":{},"body":{"injectables/BookService.html":{}}}],["getbookbytitle",{"_index":491,"title":{},"body":{"injectables/BookService.html":{}}}],["getbookbytitle(name",{"_index":520,"title":{},"body":{"injectables/BookService.html":{}}}],["getbooks",{"_index":552,"title":{},"body":{"components/BooksComponent.html":{}}}],["getbooks(page",{"_index":555,"title":{},"body":{"components/BooksComponent.html":{}}}],["getbooksbyeditorial",{"_index":492,"title":{},"body":{"injectables/BookService.html":{}}}],["getbooksbyeditorial(name",{"_index":524,"title":{},"body":{"injectables/BookService.html":{}}}],["geteditorialbyid",{"_index":628,"title":{},"body":{"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{}}}],["geteditorialbyid(id",{"_index":664,"title":{},"body":{"injectables/EditorialService.html":{}}}],["geteditorialbyname",{"_index":657,"title":{},"body":{"injectables/EditorialService.html":{}}}],["geteditorialbyname(name",{"_index":666,"title":{},"body":{"injectables/EditorialService.html":{}}}],["geteditorials",{"_index":325,"title":{},"body":{"components/BookFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{}}}],["getpersonal",{"_index":822,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["getstaff",{"_index":823,"title":{},"body":{"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["getstaffbyid",{"_index":871,"title":{},"body":{"injectables/StaffService.html":{}}}],["getstaffbyid(id",{"_index":877,"title":{},"body":{"injectables/StaffService.html":{}}}],["getting",{"_index":952,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuser(user",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["go",{"_index":1004,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1011,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":753,"title":{"guards/RouteGuardGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard.guard",{"_index":115,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guard.guard.ts",{"_index":756,"title":{},"body":{"guards/RouteGuardGuard.html":{},"coverage.html":{}}}],["guard.guard.ts:10",{"_index":759,"title":{},"body":{"guards/RouteGuardGuard.html":{}}}],["guard.guard.ts:19",{"_index":764,"title":{},"body":{"guards/RouteGuardGuard.html":{}}}],["guards",{"_index":754,"title":{},"body":{"guards/RouteGuardGuard.html":{}}}],["hace",{"_index":831,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["haya",{"_index":569,"title":{},"body":{"components/BooksComponent.html":{}}}],["head",{"_index":603,"title":{},"body":{"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{}}}],["headers",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/EditorialService.html":{},"injectables/StaffService.html":{}}}],["height",{"_index":487,"title":{},"body":{"components/BookInfoComponent.html":{}}}],["help",{"_index":1002,"title":{},"body":{"index.html":{}}}],["hizo",{"_index":692,"title":{},"body":{"components/EditorialsComponent.html":{}}}],["html",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["http",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/EditorialService.html":{},"injectables/StaffService.html":{}}}],["http://localhost:4200",{"_index":968,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/EditorialService.html":{},"injectables/StaffService.html":{}}}],["httpclientmodule",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":536,"title":{},"body":{"injectables/BookService.html":{}}}],["httphandler",{"_index":889,"title":{},"body":{"injectables/StaffService.html":{}}}],["httpheaders",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/StaffService.html":{}}}],["httpoptions",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/StaffService.html":{}}}],["httpparams",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":142,"title":{},"body":{"interfaces/Auth.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"interfaces/Editorial.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"interfaces/Staff.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["id=\"pagination",{"_index":595,"title":{},"body":{"components/BooksComponent.html":{}}}],["iden",{"_index":802,"title":{},"body":{"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["identificacion",{"_index":881,"title":{},"body":{"injectables/StaffService.html":{}}}],["identificación",{"_index":816,"title":{},"body":{"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["identification",{"_index":778,"title":{},"body":{"interfaces/Staff.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["identifier",{"_index":896,"title":{},"body":{"coverage.html":{}}}],["imagen",{"_index":531,"title":{},"body":{"injectables/BookService.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{}}}],["img",{"_index":625,"title":{},"body":{"interfaces/Editorial.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{}}}],["implements",{"_index":148,"title":{},"body":{"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"index.html":{}}}],["import",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"injectables/CokieService.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"injectables/EncryptService.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["imports",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["incorrecta",{"_index":197,"title":{},"body":{"components/AuthComponent.html":{}}}],["incorrecto",{"_index":223,"title":{},"body":{"components/AuthComponent.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Auth.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"injectables/CokieService.html":{},"interfaces/Editorial.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"injectables/EncryptService.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{},"interfaces/Staff.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{},"interfaces/Token.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Auth.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"injectables/CokieService.html":{},"interfaces/Editorial.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"injectables/EncryptService.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{},"interfaces/Staff.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{},"interfaces/Token.html":{}}}],["info'},{'name",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["info.component",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["info.component.css",{"_index":447,"title":{},"body":{"components/BookInfoComponent.html":{},"components/StaffInfoComponent.html":{}}}],["info.component.html",{"_index":448,"title":{},"body":{"components/BookInfoComponent.html":{},"components/StaffInfoComponent.html":{}}}],["info.component.ts",{"_index":446,"title":{},"body":{"components/BookInfoComponent.html":{},"components/StaffInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:17",{"_index":834,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["info.component.ts:19",{"_index":467,"title":{},"body":{"components/BookInfoComponent.html":{},"components/StaffInfoComponent.html":{}}}],["info.component.ts:24",{"_index":454,"title":{},"body":{"components/BookInfoComponent.html":{}}}],["info.component.ts:29",{"_index":833,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["info.component.ts:34",{"_index":466,"title":{},"body":{"components/BookInfoComponent.html":{}}}],["info.component.ts:36",{"_index":835,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["info.component.ts:41",{"_index":461,"title":{},"body":{"components/BookInfoComponent.html":{},"components/StaffInfoComponent.html":{}}}],["info.component.ts:52",{"_index":828,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["info.component.ts:53",{"_index":458,"title":{},"body":{"components/BookInfoComponent.html":{}}}],["info.component.ts:60",{"_index":827,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["info.component.ts:62",{"_index":456,"title":{},"body":{"components/BookInfoComponent.html":{}}}],["info.component.ts:67",{"_index":826,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["info.component.ts:82",{"_index":825,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["info.component.ts:91",{"_index":830,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["info/:id",{"_index":128,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["info/book",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookInfoComponent.html":{},"coverage.html":{}}}],["info/staff",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/StaffInfoComponent.html":{},"coverage.html":{}}}],["informacion",{"_index":173,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"injectables/CokieService.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"injectables/StaffService.html":{},"interfaces/Token.html":{}}}],["información",{"_index":332,"title":{},"body":{"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{}}}],["ingresa",{"_index":224,"title":{},"body":{"components/AuthComponent.html":{}}}],["ingreso",{"_index":767,"title":{},"body":{"guards/RouteGuardGuard.html":{}}}],["inicar",{"_index":742,"title":{},"body":{"components/NavBarComponent.html":{}}}],["inicializa",{"_index":829,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["iniciar",{"_index":228,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/BookInfoComponent.html":{},"components/NavBarComponent.html":{}}}],["injectable",{"_index":246,"title":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/CokieService.html":{},"injectables/EditorialService.html":{},"injectables/EncryptService.html":{},"injectables/StaffService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/CokieService.html":{},"injectables/EditorialService.html":{},"injectables/EncryptService.html":{},"guards/RouteGuardGuard.html":{},"injectables/StaffService.html":{},"coverage.html":{}}}],["injectables",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/CokieService.html":{},"injectables/EditorialService.html":{},"injectables/EncryptService.html":{},"injectables/StaffService.html":{},"overview.html":{}}}],["interface",{"_index":132,"title":{"interfaces/Auth.html":{},"interfaces/Book.html":{},"interfaces/Editorial.html":{},"interfaces/Staff.html":{},"interfaces/Token.html":{}},"body":{"interfaces/Auth.html":{},"interfaces/Book.html":{},"interfaces/Editorial.html":{},"interfaces/Staff.html":{},"interfaces/Token.html":{},"coverage.html":{}}}],["interfaces",{"_index":134,"title":{},"body":{"interfaces/Auth.html":{},"interfaces/Book.html":{},"interfaces/Editorial.html":{},"interfaces/Staff.html":{},"interfaces/Token.html":{},"overview.html":{}}}],["item",{"_index":592,"title":{},"body":{"components/BooksComponent.html":{}}}],["item.name",{"_index":438,"title":{},"body":{"components/BookFormComponent.html":{}}}],["iv",{"_index":721,"title":{},"body":{"injectables/EncryptService.html":{}}}],["js",{"_index":713,"title":{},"body":{"injectables/EncryptService.html":{},"dependencies.html":{}}}],["json.stringify(password",{"_index":718,"title":{},"body":{"injectables/EncryptService.html":{}}}],["justify",{"_index":601,"title":{},"body":{"components/BooksComponent.html":{},"components/EditorialsComponent.html":{}}}],["jwt",{"_index":737,"title":{},"body":{"components/NavBarComponent.html":{}}}],["karma",{"_index":990,"title":{},"body":{"index.html":{}}}],["keysize",{"_index":719,"title":{},"body":{"injectables/EncryptService.html":{}}}],["la",{"_index":140,"title":{},"body":{"interfaces/Auth.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"injectables/CokieService.html":{},"interfaces/Editorial.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["laquo",{"_index":596,"title":{},"body":{"components/BooksComponent.html":{}}}],["las",{"_index":337,"title":{},"body":{"components/BookFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{}}}],["lastname",{"_index":779,"title":{},"body":{"interfaces/Staff.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["le",{"_index":187,"title":{},"body":{"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/NavBarComponent.html":{}}}],["left",{"_index":442,"title":{},"body":{"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/StaffInfoComponent.html":{}}}],["legend",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["library",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["libraryweb",{"_index":954,"title":{},"body":{"index.html":{}}}],["libreria",{"_index":225,"title":{},"body":{"components/AuthComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{}}}],["libro",{"_index":312,"title":{},"body":{"interfaces/Book.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{}}}],["libros",{"_index":504,"title":{},"body":{"injectables/BookService.html":{},"components/BooksComponent.html":{},"components/NavBarComponent.html":{}}}],["llama",{"_index":365,"title":{},"body":{"components/BookFormComponent.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"injectables/StaffService.html":{}}}],["lo",{"_index":348,"title":{},"body":{"components/BookFormComponent.html":{},"components/BooksComponent.html":{},"components/EditorialsComponent.html":{}}}],["login",{"_index":129,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/StaffComponent.html":{}}}],["login(user",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginform",{"_index":152,"title":{},"body":{"components/AuthComponent.html":{}}}],["los",{"_index":503,"title":{},"body":{"injectables/BookService.html":{},"components/BooksComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["manda",{"_index":191,"title":{},"body":{"components/AuthComponent.html":{}}}],["margin",{"_index":234,"title":{},"body":{"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["matching",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Auth.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"injectables/CokieService.html":{},"interfaces/Editorial.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"injectables/EncryptService.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{},"interfaces/Staff.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{},"interfaces/Token.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["mediante",{"_index":333,"title":{},"body":{"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{}}}],["medio",{"_index":460,"title":{},"body":{"components/BookInfoComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["methods",{"_index":153,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"injectables/CokieService.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"injectables/EncryptService.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["mi",{"_index":752,"title":{},"body":{"components/NavBarComponent.html":{}}}],["miscellaneous",{"_index":1019,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mismo",{"_index":334,"title":{},"body":{"components/BookFormComponent.html":{}}}],["mode",{"_index":722,"title":{},"body":{"injectables/EncryptService.html":{}}}],["models/auth",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"components/StaffInfoComponent.html":{}}}],["models/book",{"_index":405,"title":{},"body":{"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{}}}],["models/editorial",{"_index":406,"title":{},"body":{"components/BookFormComponent.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{}}}],["models/staff",{"_index":796,"title":{},"body":{"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["module",{"_index":67,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{}}],["modules",{"_index":69,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1003,"title":{},"body":{"index.html":{}}}],["mostrar",{"_index":510,"title":{},"body":{"injectables/BookService.html":{}}}],["mostrarle",{"_index":357,"title":{},"body":{"components/BookFormComponent.html":{}}}],["muestran",{"_index":740,"title":{},"body":{"components/NavBarComponent.html":{}}}],["nacimiento",{"_index":815,"title":{},"body":{"components/StaffComponent.html":{},"injectables/StaffService.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"injectables/CokieService.html":{},"interfaces/Editorial.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"injectables/EncryptService.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{},"interfaces/Staff.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{},"index.html":{}}}],["nav",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["navbarcomponent",{"_index":56,"title":{"components/NavBarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":967,"title":{},"body":{"index.html":{}}}],["need",{"_index":996,"title":{},"body":{"index.html":{}}}],["new",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":964,"title":{},"body":{"index.html":{}}}],["ngdocheck",{"_index":452,"title":{},"body":{"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{}}}],["ngmodule",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":154,"title":{},"body":{"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["ngx",{"_index":620,"title":{},"body":{"injectables/CokieService.html":{},"dependencies.html":{}}}],["nombre",{"_index":227,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/BookFormComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"injectables/CokieService.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["none",{"_index":239,"title":{},"body":{"components/AuthComponent.html":{},"components/StaffComponent.html":{}}}],["novedades",{"_index":579,"title":{},"body":{"components/BooksComponent.html":{}}}],["nueva",{"_index":672,"title":{},"body":{"injectables/EditorialService.html":{}}}],["nuevo",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"components/BookFormComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{}}}],["number",{"_index":146,"title":{},"body":{"interfaces/Auth.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"interfaces/Editorial.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"interfaces/Staff.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["number(this.registerform.value.identification",{"_index":803,"title":{},"body":{"components/StaffComponent.html":{}}}],["number(this.route.snapshot.parammap.get('id",{"_index":422,"title":{},"body":{"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/EditorialFormComponent.html":{}}}],["number(this.selected.split(\":\")[1",{"_index":421,"title":{},"body":{"components/BookFormComponent.html":{}}}],["number}id",{"_index":697,"title":{},"body":{"components/EditorialsComponent.html":{}}}],["o",{"_index":195,"title":{},"body":{"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"injectables/StaffService.html":{}}}],["object",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/StaffService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/EditorialService.html":{},"guards/RouteGuardGuard.html":{},"injectables/StaffService.html":{}}}],["observable}token",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["obtendr",{"_index":361,"title":{},"body":{"components/BookFormComponent.html":{}}}],["obtener",{"_index":201,"title":{},"body":{"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{}}}],["obtiene",{"_index":172,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/BookFormComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"injectables/CokieService.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["oninit",{"_index":149,"title":{},"body":{"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["onsubmit",{"_index":155,"title":{},"body":{"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/EditorialFormComponent.html":{},"components/StaffInfoComponent.html":{}}}],["onsumbit",{"_index":553,"title":{},"body":{"components/BooksComponent.html":{},"components/StaffComponent.html":{}}}],["opcion",{"_index":562,"title":{},"body":{"components/BooksComponent.html":{}}}],["opciones",{"_index":741,"title":{},"body":{"components/NavBarComponent.html":{}}}],["optional",{"_index":166,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"injectables/CokieService.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"injectables/EncryptService.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["orden",{"_index":517,"title":{},"body":{"injectables/BookService.html":{}}}],["ordenar",{"_index":512,"title":{},"body":{"injectables/BookService.html":{}}}],["order",{"_index":500,"title":{},"body":{"injectables/BookService.html":{}}}],["out",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1006,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":936,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":242,"title":{},"body":{"components/AuthComponent.html":{},"components/BookInfoComponent.html":{},"injectables/EncryptService.html":{},"components/StaffComponent.html":{}}}],["page",{"_index":506,"title":{},"body":{"injectables/BookService.html":{},"components/BooksComponent.html":{},"index.html":{}}}],["page=${page}&size=${size}&order=${order}&asc=${asc",{"_index":540,"title":{},"body":{"injectables/BookService.html":{}}}],["pages",{"_index":315,"title":{},"body":{"interfaces/Book.html":{},"components/BookFormComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{}}}],["pagina",{"_index":189,"title":{},"body":{"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/NavBarComponent.html":{}}}],["paginacion",{"_index":508,"title":{},"body":{"injectables/BookService.html":{}}}],["paginados",{"_index":505,"title":{},"body":{"injectables/BookService.html":{},"components/BooksComponent.html":{}}}],["paginas",{"_index":435,"title":{},"body":{"components/BookFormComponent.html":{},"injectables/BookService.html":{}}}],["pagination",{"_index":604,"title":{},"body":{"components/BooksComponent.html":{}}}],["pantalla",{"_index":793,"title":{},"body":{"components/StaffComponent.html":{}}}],["para",{"_index":139,"title":{},"body":{"interfaces/Auth.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"components/EditorialsComponent.html":{},"guards/RouteGuardGuard.html":{},"components/StaffComponent.html":{}}}],["param",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"injectables/CokieService.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"injectables/EncryptService.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["parameters",{"_index":165,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"injectables/CokieService.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"injectables/EncryptService.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["passparam",{"_index":209,"title":{},"body":{"components/AuthComponent.html":{},"components/StaffComponent.html":{}}}],["passparam).subscribe",{"_index":214,"title":{},"body":{"components/AuthComponent.html":{},"components/StaffComponent.html":{}}}],["password",{"_index":143,"title":{},"body":{"interfaces/Auth.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/EncryptService.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["path",{"_index":117,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":120,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["perfil",{"_index":745,"title":{},"body":{"components/NavBarComponent.html":{}}}],["permitir",{"_index":766,"title":{},"body":{"guards/RouteGuardGuard.html":{}}}],["persona",{"_index":202,"title":{},"body":{"components/AuthComponent.html":{},"injectables/StaffService.html":{}}}],["personal",{"_index":819,"title":{},"body":{"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["platform",{"_index":993,"title":{},"body":{"index.html":{}}}],["pondra",{"_index":404,"title":{},"body":{"components/BookFormComponent.html":{},"components/EditorialFormComponent.html":{}}}],["pone",{"_index":634,"title":{},"body":{"components/EditorialFormComponent.html":{}}}],["poner",{"_index":619,"title":{},"body":{"injectables/CokieService.html":{}}}],["popperjs/core",{"_index":942,"title":{},"body":{"dependencies.html":{}}}],["por",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"injectables/EditorialService.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["portada",{"_index":437,"title":{},"body":{"components/BookFormComponent.html":{}}}],["postbook",{"_index":493,"title":{},"body":{"injectables/BookService.html":{}}}],["postbook(name",{"_index":528,"title":{},"body":{"injectables/BookService.html":{}}}],["posteditorial",{"_index":658,"title":{},"body":{"injectables/EditorialService.html":{}}}],["posteditorial(name",{"_index":670,"title":{},"body":{"injectables/EditorialService.html":{}}}],["precio",{"_index":436,"title":{},"body":{"components/BookFormComponent.html":{},"injectables/BookService.html":{}}}],["price",{"_index":316,"title":{},"body":{"interfaces/Book.html":{},"components/BookFormComponent.html":{},"injectables/BookService.html":{}}}],["primero",{"_index":564,"title":{},"body":{"components/BooksComponent.html":{}}}],["principal",{"_index":190,"title":{},"body":{"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/EditorialFormComponent.html":{},"components/NavBarComponent.html":{}}}],["private",{"_index":207,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["production",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":955,"title":{},"body":{"index.html":{}}}],["promise",{"_index":771,"title":{},"body":{"guards/RouteGuardGuard.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Auth.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"interfaces/Editorial.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"injectables/EncryptService.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{},"interfaces/Staff.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{},"interfaces/Token.html":{},"properties.html":{}}}],["providedin",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/CokieService.html":{},"injectables/EditorialService.html":{},"injectables/EncryptService.html":{},"guards/RouteGuardGuard.html":{},"injectables/StaffService.html":{}}}],["providers",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":449,"title":{},"body":{"components/BookInfoComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{}}}],["puj",{"_index":226,"title":{},"body":{"components/AuthComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{}}}],["putbook",{"_index":494,"title":{},"body":{"injectables/BookService.html":{}}}],["putbook(id",{"_index":532,"title":{},"body":{"injectables/BookService.html":{}}}],["puteditorial",{"_index":659,"title":{},"body":{"injectables/EditorialService.html":{}}}],["puteditorial(id",{"_index":673,"title":{},"body":{"injectables/EditorialService.html":{}}}],["que",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/NavBarComponent.html":{}}}],["quiera",{"_index":352,"title":{},"body":{"components/BookFormComponent.html":{}}}],["raquo",{"_index":598,"title":{},"body":{"components/BooksComponent.html":{}}}],["reactiveformsmodule",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["realiza",{"_index":567,"title":{},"body":{"components/BooksComponent.html":{}}}],["redirecciona",{"_index":188,"title":{},"body":{"components/AuthComponent.html":{},"components/EditorialFormComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{}}}],["redireccionar",{"_index":372,"title":{},"body":{"components/BookFormComponent.html":{}}}],["redirectto",{"_index":118,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":1007,"title":{},"body":{"index.html":{}}}],["registerform",{"_index":785,"title":{},"body":{"components/StaffComponent.html":{}}}],["registerstaff",{"_index":872,"title":{},"body":{"injectables/StaffService.html":{}}}],["registerstaff(name",{"_index":879,"title":{},"body":{"injectables/StaffService.html":{}}}],["registeruser",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["registeruser(username",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["registrarse",{"_index":812,"title":{},"body":{"components/StaffComponent.html":{}}}],["registro",{"_index":792,"title":{},"body":{"components/StaffComponent.html":{}}}],["reload",{"_index":971,"title":{},"body":{"index.html":{}}}],["requerida",{"_index":527,"title":{},"body":{"injectables/BookService.html":{}}}],["reset",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response",{"_index":757,"title":{},"body":{"guards/RouteGuardGuard.html":{}}}],["restringidas",{"_index":770,"title":{},"body":{"guards/RouteGuardGuard.html":{}}}],["resultados",{"_index":587,"title":{},"body":{"components/BooksComponent.html":{}}}],["results",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Auth.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"injectables/CokieService.html":{},"interfaces/Editorial.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"injectables/EncryptService.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{},"interfaces/Staff.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{},"interfaces/Token.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/CokieService.html":{},"injectables/EditorialService.html":{},"injectables/EncryptService.html":{},"guards/RouteGuardGuard.html":{},"injectables/StaffService.html":{}}}],["returns",{"_index":168,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"injectables/CokieService.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"injectables/EncryptService.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["right",{"_index":600,"title":{},"body":{"components/BooksComponent.html":{},"components/EditorialsComponent.html":{},"components/StaffInfoComponent.html":{}}}],["roles",{"_index":144,"title":{},"body":{"interfaces/Auth.html":{},"injectables/AuthService.html":{},"components/StaffInfoComponent.html":{}}}],["roles).subscribe",{"_index":860,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/CokieService.html":{},"injectables/EditorialService.html":{},"injectables/EncryptService.html":{},"guards/RouteGuardGuard.html":{},"injectables/StaffService.html":{}}}],["root'},{'name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["route",{"_index":114,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/EditorialFormComponent.html":{},"guards/RouteGuardGuard.html":{}}}],["routeguardguard",{"_index":113,"title":{"guards/RouteGuardGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/RouteGuardGuard.html":{},"coverage.html":{}}}],["router",{"_index":161,"title":{},"body":{"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["routermodule",{"_index":110,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":130,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":763,"title":{},"body":{"guards/RouteGuardGuard.html":{}}}],["routes",{"_index":111,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":109,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":963,"title":{},"body":{"index.html":{}}}],["running",{"_index":984,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/EditorialService.html":{},"guards/RouteGuardGuard.html":{},"injectables/StaffService.html":{},"dependencies.html":{}}}],["saber",{"_index":392,"title":{},"body":{"components/BookFormComponent.html":{}}}],["scaffolding",{"_index":975,"title":{},"body":{"index.html":{}}}],["se",{"_index":171,"title":{},"body":{"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["sea",{"_index":386,"title":{},"body":{"components/BookFormComponent.html":{}}}],["search",{"_index":550,"title":{},"body":{"components/BooksComponent.html":{}}}],["searchform",{"_index":551,"title":{},"body":{"components/BooksComponent.html":{}}}],["seccion",{"_index":401,"title":{},"body":{"components/BookFormComponent.html":{}}}],["seleccionada",{"_index":688,"title":{},"body":{"components/EditorialsComponent.html":{}}}],["seleccionado",{"_index":459,"title":{},"body":{"components/BookInfoComponent.html":{}}}],["selecciono",{"_index":397,"title":{},"body":{"components/BookFormComponent.html":{}}}],["selected",{"_index":323,"title":{},"body":{"components/BookFormComponent.html":{},"components/BooksComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["serve",{"_index":965,"title":{},"body":{"index.html":{}}}],["server",{"_index":962,"title":{},"body":{"index.html":{}}}],["service",{"_index":180,"title":{},"body":{"components/AuthComponent.html":{},"injectables/CokieService.html":{},"dependencies.html":{}}}],["services/auth.service",{"_index":203,"title":{},"body":{"components/AuthComponent.html":{},"guards/RouteGuardGuard.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["services/book.service",{"_index":408,"title":{},"body":{"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{}}}],["services/cokie.service",{"_index":204,"title":{},"body":{"components/AuthComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffInfoComponent.html":{}}}],["services/editorial.service",{"_index":407,"title":{},"body":{"components/BookFormComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{}}}],["services/encrypt.service",{"_index":205,"title":{},"body":{"components/AuthComponent.html":{},"components/StaffComponent.html":{}}}],["services/staff.service",{"_index":797,"title":{},"body":{"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["sesion",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"components/NavBarComponent.html":{}}}],["sesión",{"_index":229,"title":{},"body":{"components/AuthComponent.html":{},"components/NavBarComponent.html":{}}}],["set",{"_index":607,"title":{},"body":{"injectables/CokieService.html":{}}}],["set(name",{"_index":617,"title":{},"body":{"injectables/CokieService.html":{}}}],["si",{"_index":185,"title":{},"body":{"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{}}}],["similitudes",{"_index":523,"title":{},"body":{"injectables/BookService.html":{}}}],["simplemente",{"_index":636,"title":{},"body":{"components/EditorialFormComponent.html":{}}}],["size",{"_index":499,"title":{},"body":{"injectables/BookService.html":{}}}],["skip",{"_index":676,"title":{},"body":{"injectables/EditorialService.html":{}}}],["solid",{"_index":232,"title":{},"body":{"components/AuthComponent.html":{},"components/StaffComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Auth.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"injectables/CokieService.html":{},"interfaces/Editorial.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"injectables/EncryptService.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{},"interfaces/Staff.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{},"interfaces/Token.html":{},"index.html":{}}}],["src/.../environment.prod.ts",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":108,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth.component.ts",{"_index":147,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/auth/auth.component.ts:18",{"_index":199,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:21",{"_index":164,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:29",{"_index":167,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:38",{"_index":170,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/book",{"_index":318,"title":{},"body":{"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"coverage.html":{}}}],["src/app/books/books.component.ts",{"_index":547,"title":{},"body":{"components/BooksComponent.html":{},"coverage.html":{}}}],["src/app/books/books.component.ts:15",{"_index":578,"title":{},"body":{"components/BooksComponent.html":{}}}],["src/app/books/books.component.ts:16",{"_index":572,"title":{},"body":{"components/BooksComponent.html":{}}}],["src/app/books/books.component.ts:17",{"_index":573,"title":{},"body":{"components/BooksComponent.html":{}}}],["src/app/books/books.component.ts:18",{"_index":575,"title":{},"body":{"components/BooksComponent.html":{}}}],["src/app/books/books.component.ts:22",{"_index":577,"title":{},"body":{"components/BooksComponent.html":{}}}],["src/app/books/books.component.ts:23",{"_index":574,"title":{},"body":{"components/BooksComponent.html":{}}}],["src/app/books/books.component.ts:25",{"_index":576,"title":{},"body":{"components/BooksComponent.html":{}}}],["src/app/books/books.component.ts:27",{"_index":554,"title":{},"body":{"components/BooksComponent.html":{}}}],["src/app/books/books.component.ts:37",{"_index":571,"title":{},"body":{"components/BooksComponent.html":{}}}],["src/app/books/books.component.ts:45",{"_index":556,"title":{},"body":{"components/BooksComponent.html":{}}}],["src/app/books/books.component.ts:60",{"_index":557,"title":{},"body":{"components/BooksComponent.html":{}}}],["src/app/books/books.component.ts:72",{"_index":566,"title":{},"body":{"components/BooksComponent.html":{}}}],["src/app/books/books.component.ts:91",{"_index":563,"title":{},"body":{"components/BooksComponent.html":{}}}],["src/app/editorial",{"_index":627,"title":{},"body":{"components/EditorialFormComponent.html":{},"coverage.html":{}}}],["src/app/editorials/editorials.component.ts",{"_index":682,"title":{},"body":{"components/EditorialsComponent.html":{},"coverage.html":{}}}],["src/app/editorials/editorials.component.ts:14",{"_index":695,"title":{},"body":{"components/EditorialsComponent.html":{}}}],["src/app/editorials/editorials.component.ts:15",{"_index":686,"title":{},"body":{"components/EditorialsComponent.html":{}}}],["src/app/editorials/editorials.component.ts:24",{"_index":690,"title":{},"body":{"components/EditorialsComponent.html":{}}}],["src/app/editorials/editorials.component.ts:33",{"_index":694,"title":{},"body":{"components/EditorialsComponent.html":{}}}],["src/app/editorials/editorials.component.ts:40",{"_index":689,"title":{},"body":{"components/EditorialsComponent.html":{}}}],["src/app/editorials/editorials.component.ts:48",{"_index":687,"title":{},"body":{"components/EditorialsComponent.html":{}}}],["src/app/models/auth.ts",{"_index":135,"title":{},"body":{"interfaces/Auth.html":{},"coverage.html":{}}}],["src/app/models/book.ts",{"_index":311,"title":{},"body":{"interfaces/Book.html":{},"coverage.html":{}}}],["src/app/models/editorial.ts",{"_index":624,"title":{},"body":{"interfaces/Editorial.html":{},"coverage.html":{}}}],["src/app/models/staff.ts",{"_index":775,"title":{},"body":{"interfaces/Staff.html":{},"coverage.html":{}}}],["src/app/models/token",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/models/token.ts",{"_index":893,"title":{},"body":{"interfaces/Token.html":{},"coverage.html":{}}}],["src/app/nav",{"_index":726,"title":{},"body":{"components/NavBarComponent.html":{},"coverage.html":{}}}],["src/app/route",{"_index":755,"title":{},"body":{"guards/RouteGuardGuard.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:12",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:17",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:31",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:42",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:52",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:64",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:73",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/book.service.ts",{"_index":489,"title":{},"body":{"injectables/BookService.html":{},"coverage.html":{}}}],["src/app/services/book.service.ts:10",{"_index":495,"title":{},"body":{"injectables/BookService.html":{}}}],["src/app/services/book.service.ts:15",{"_index":535,"title":{},"body":{"injectables/BookService.html":{}}}],["src/app/services/book.service.ts:28",{"_index":502,"title":{},"body":{"injectables/BookService.html":{}}}],["src/app/services/book.service.ts:36",{"_index":519,"title":{},"body":{"injectables/BookService.html":{}}}],["src/app/services/book.service.ts:46",{"_index":525,"title":{},"body":{"injectables/BookService.html":{}}}],["src/app/services/book.service.ts:55",{"_index":521,"title":{},"body":{"injectables/BookService.html":{}}}],["src/app/services/book.service.ts:64",{"_index":496,"title":{},"body":{"injectables/BookService.html":{}}}],["src/app/services/book.service.ts:81",{"_index":533,"title":{},"body":{"injectables/BookService.html":{}}}],["src/app/services/book.service.ts:97",{"_index":529,"title":{},"body":{"injectables/BookService.html":{}}}],["src/app/services/cokie.service.ts",{"_index":605,"title":{},"body":{"injectables/CokieService.html":{},"coverage.html":{}}}],["src/app/services/cokie.service.ts:16",{"_index":618,"title":{},"body":{"injectables/CokieService.html":{}}}],["src/app/services/cokie.service.ts:25",{"_index":616,"title":{},"body":{"injectables/CokieService.html":{}}}],["src/app/services/cokie.service.ts:33",{"_index":612,"title":{},"body":{"injectables/CokieService.html":{}}}],["src/app/services/cokie.service.ts:7",{"_index":610,"title":{},"body":{"injectables/CokieService.html":{}}}],["src/app/services/editorial.service.ts",{"_index":655,"title":{},"body":{"injectables/EditorialService.html":{},"coverage.html":{}}}],["src/app/services/editorial.service.ts:17",{"_index":668,"title":{},"body":{"injectables/EditorialService.html":{}}}],["src/app/services/editorial.service.ts:26",{"_index":667,"title":{},"body":{"injectables/EditorialService.html":{}}}],["src/app/services/editorial.service.ts:35",{"_index":665,"title":{},"body":{"injectables/EditorialService.html":{}}}],["src/app/services/editorial.service.ts:47",{"_index":674,"title":{},"body":{"injectables/EditorialService.html":{}}}],["src/app/services/editorial.service.ts:59",{"_index":671,"title":{},"body":{"injectables/EditorialService.html":{}}}],["src/app/services/editorial.service.ts:69",{"_index":662,"title":{},"body":{"injectables/EditorialService.html":{}}}],["src/app/services/editorial.service.ts:9",{"_index":660,"title":{},"body":{"injectables/EditorialService.html":{}}}],["src/app/services/encrypt.service.ts",{"_index":700,"title":{},"body":{"injectables/EncryptService.html":{},"coverage.html":{}}}],["src/app/services/encrypt.service.ts:18",{"_index":705,"title":{},"body":{"injectables/EncryptService.html":{}}}],["src/app/services/encrypt.service.ts:9",{"_index":703,"title":{},"body":{"injectables/EncryptService.html":{}}}],["src/app/services/staff.service.ts",{"_index":870,"title":{},"body":{"injectables/StaffService.html":{},"coverage.html":{}}}],["src/app/services/staff.service.ts:12",{"_index":888,"title":{},"body":{"injectables/StaffService.html":{}}}],["src/app/services/staff.service.ts:16",{"_index":874,"title":{},"body":{"injectables/StaffService.html":{}}}],["src/app/services/staff.service.ts:25",{"_index":876,"title":{},"body":{"injectables/StaffService.html":{}}}],["src/app/services/staff.service.ts:34",{"_index":878,"title":{},"body":{"injectables/StaffService.html":{}}}],["src/app/services/staff.service.ts:48",{"_index":880,"title":{},"body":{"injectables/StaffService.html":{}}}],["src/app/services/staff.service.ts:58",{"_index":875,"title":{},"body":{"injectables/StaffService.html":{}}}],["src/app/services/staff.service.ts:74",{"_index":886,"title":{},"body":{"injectables/StaffService.html":{}}}],["src/app/staff",{"_index":818,"title":{},"body":{"components/StaffInfoComponent.html":{},"coverage.html":{}}}],["src/app/staff/staff.component.ts",{"_index":782,"title":{},"body":{"components/StaffComponent.html":{},"coverage.html":{}}}],["src/app/staff/staff.component.ts:17",{"_index":795,"title":{},"body":{"components/StaffComponent.html":{}}}],["src/app/staff/staff.component.ts:25",{"_index":788,"title":{},"body":{"components/StaffComponent.html":{}}}],["src/app/staff/staff.component.ts:34",{"_index":789,"title":{},"body":{"components/StaffComponent.html":{}}}],["src/app/staff/staff.component.ts:41",{"_index":790,"title":{},"body":{"components/StaffComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":930,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":934,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["staf",{"_index":840,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["staf.email",{"_index":866,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["staf.id",{"_index":863,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["staf.identification",{"_index":865,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["staf.name",{"_index":864,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["staf.status",{"_index":867,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["staff",{"_index":62,"title":{"interfaces/Staff.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"interfaces/Staff.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{},"coverage.html":{}}}],["staff'},{'name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["staff.component.css",{"_index":783,"title":{},"body":{"components/StaffComponent.html":{}}}],["staff.component.html",{"_index":784,"title":{},"body":{"components/StaffComponent.html":{}}}],["staff/staff.component",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["staffcomponent",{"_index":59,"title":{"components/StaffComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["staffinfocomponent",{"_index":61,"title":{"components/StaffInfoComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["stafform",{"_index":820,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["staffservice",{"_index":787,"title":{"injectables/StaffService.html":{}},"body":{"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{},"coverage.html":{}}}],["started",{"_index":953,"title":{"index.html":{}},"body":{}}],["state",{"_index":762,"title":{},"body":{"guards/RouteGuardGuard.html":{}}}],["statements",{"_index":897,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":780,"title":{},"body":{"interfaces/Staff.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["status).subscribe",{"_index":858,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["stored",{"_index":981,"title":{},"body":{"index.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Auth.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"components/BookFormComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"injectables/CokieService.html":{},"interfaces/Editorial.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"injectables/EncryptService.html":{},"components/NavBarComponent.html":{},"interfaces/Staff.html":{},"components/StaffComponent.html":{},"injectables/StaffService.html":{},"interfaces/Token.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["su",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/StaffInfoComponent.html":{}}}],["sumbit",{"_index":444,"title":{},"body":{"components/BookFormComponent.html":{},"components/StaffComponent.html":{}}}],["support",{"_index":1008,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1009,"title":{},"body":{"modules.html":{}}}],["table",{"_index":869,"title":{},"body":{"components/StaffInfoComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":935,"title":{},"body":{"coverage.html":{}}}],["tamaño",{"_index":509,"title":{},"body":{"injectables/BookService.html":{}}}],["tanto",{"_index":358,"title":{},"body":{"components/BookFormComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["tenga",{"_index":522,"title":{},"body":{"injectables/BookService.html":{}}}],["tengan",{"_index":526,"title":{},"body":{"injectables/BookService.html":{}}}],["test",{"_index":987,"title":{},"body":{"index.html":{}}}],["testing",{"_index":999,"title":{},"body":{"index.html":{}}}],["tests",{"_index":986,"title":{},"body":{"index.html":{}}}],["texto",{"_index":707,"title":{},"body":{"injectables/EncryptService.html":{}}}],["this.auth",{"_index":842,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["this.auth.password",{"_index":855,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["this.auth.roles",{"_index":856,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["this.auth.username",{"_index":854,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["this.auth.validate().subscribe(data",{"_index":773,"title":{},"body":{"guards/RouteGuardGuard.html":{}}}],["this.authservice.getuser(this.cokieservice.get(\"user\")).subscribe",{"_index":841,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["this.authservice.login(userparam",{"_index":213,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.authservice.registeruser(username",{"_index":809,"title":{},"body":{"components/StaffComponent.html":{}}}],["this.authservice.updateuser(id",{"_index":859,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["this.book",{"_index":425,"title":{},"body":{"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{}}}],["this.book.author",{"_index":416,"title":{},"body":{"components/BookFormComponent.html":{}}}],["this.book.description",{"_index":417,"title":{},"body":{"components/BookFormComponent.html":{}}}],["this.book.name",{"_index":415,"title":{},"body":{"components/BookFormComponent.html":{}}}],["this.book.pages",{"_index":420,"title":{},"body":{"components/BookFormComponent.html":{}}}],["this.book.price",{"_index":419,"title":{},"body":{"components/BookFormComponent.html":{}}}],["this.book.url",{"_index":418,"title":{},"body":{"components/BookFormComponent.html":{}}}],["this.books",{"_index":585,"title":{},"body":{"components/BooksComponent.html":{}}}],["this.bookservice.deletebook(id).subscribe",{"_index":472,"title":{},"body":{"components/BookInfoComponent.html":{}}}],["this.bookservice.getbook(page",{"_index":580,"title":{},"body":{"components/BooksComponent.html":{}}}],["this.bookservice.getbookbyid(id).subscribe(book",{"_index":432,"title":{},"body":{"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{}}}],["this.bookservice.getbookbytitle(search).subscribe",{"_index":589,"title":{},"body":{"components/BooksComponent.html":{}}}],["this.bookservice.getbooksbyeditorial(search).subscribe",{"_index":590,"title":{},"body":{"components/BooksComponent.html":{}}}],["this.bookservice.postbook(name",{"_index":427,"title":{},"body":{"components/BookFormComponent.html":{}}}],["this.bookservice.putbook(id",{"_index":423,"title":{},"body":{"components/BookFormComponent.html":{}}}],["this.cerrarsesion",{"_index":748,"title":{},"body":{"components/NavBarComponent.html":{}}}],["this.cokieservice.delete(\"token",{"_index":749,"title":{},"body":{"components/NavBarComponent.html":{}}}],["this.cokieservice.delete(\"user",{"_index":750,"title":{},"body":{"components/NavBarComponent.html":{}}}],["this.cokieservice.get(\"token",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/StaffService.html":{}}}],["this.cokieservice.get(\"token\").length",{"_index":470,"title":{},"body":{"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{}}}],["this.cokieservice.set(\"token",{"_index":216,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.cokieservice.set(\"user",{"_index":218,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.cookie",{"_index":471,"title":{},"body":{"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialsComponent.html":{}}}],["this.cookieservice.delete(name",{"_index":623,"title":{},"body":{"injectables/CokieService.html":{}}}],["this.cookieservice.get(name",{"_index":622,"title":{},"body":{"injectables/CokieService.html":{}}}],["this.cookieservice.set(name",{"_index":621,"title":{},"body":{"injectables/CokieService.html":{}}}],["this.edit",{"_index":411,"title":{},"body":{"components/BookFormComponent.html":{},"components/EditorialFormComponent.html":{}}}],["this.editorial",{"_index":651,"title":{},"body":{"components/EditorialFormComponent.html":{}}}],["this.editorial.img",{"_index":645,"title":{},"body":{"components/EditorialFormComponent.html":{}}}],["this.editorial.name",{"_index":644,"title":{},"body":{"components/EditorialFormComponent.html":{}}}],["this.editorial.website",{"_index":646,"title":{},"body":{"components/EditorialFormComponent.html":{}}}],["this.editorials",{"_index":431,"title":{},"body":{"components/BookFormComponent.html":{},"components/EditorialsComponent.html":{}}}],["this.editorialservice.deleteeditorial(id).subscribe",{"_index":698,"title":{},"body":{"components/EditorialsComponent.html":{}}}],["this.editorialservice.geteditorialbyid(id).subscribe(data",{"_index":654,"title":{},"body":{"components/EditorialFormComponent.html":{}}}],["this.editorialservice.geteditorials().subscribe(data",{"_index":430,"title":{},"body":{"components/BookFormComponent.html":{}}}],["this.editorialservice.geteditorials().subscribe(editorials",{"_index":696,"title":{},"body":{"components/EditorialsComponent.html":{}}}],["this.editorialservice.posteditorial(name",{"_index":652,"title":{},"body":{"components/EditorialFormComponent.html":{}}}],["this.editorialservice.puteditorial(id",{"_index":649,"title":{},"body":{"components/EditorialFormComponent.html":{}}}],["this.encrypt.encryptusingaes256",{"_index":211,"title":{},"body":{"components/AuthComponent.html":{},"components/StaffComponent.html":{}}}],["this.formbuilder.group",{"_index":198,"title":{},"body":{"components/AuthComponent.html":{},"components/BooksComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["this.getbookbyid",{"_index":414,"title":{},"body":{"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{}}}],["this.getbooks(0",{"_index":591,"title":{},"body":{"components/BooksComponent.html":{}}}],["this.geteditorialbyid",{"_index":643,"title":{},"body":{"components/EditorialFormComponent.html":{}}}],["this.geteditorials",{"_index":409,"title":{},"body":{"components/BookFormComponent.html":{},"components/EditorialsComponent.html":{}}}],["this.getpersonal",{"_index":837,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["this.getstaff",{"_index":836,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["this.http.delete(\"http://localhost:8081/editorialapi/editorial",{"_index":681,"title":{},"body":{"injectables/EditorialService.html":{}}}],["this.http.delete(\"http://localhost:8084/bookapi/book",{"_index":544,"title":{},"body":{"injectables/BookService.html":{}}}],["this.http.get(\"http://localhost:8081/editorialapi/editorial",{"_index":677,"title":{},"body":{"injectables/EditorialService.html":{}}}],["this.http.get(\"http://localhost:8081/editorialapi/editorials",{"_index":675,"title":{},"body":{"injectables/EditorialService.html":{}}}],["this.http.get(\"http://localhost:8082/staffapi/staff",{"_index":890,"title":{},"body":{"injectables/StaffService.html":{}}}],["this.http.get(\"http://localhost:8084/bookapi/books",{"_index":539,"title":{},"body":{"injectables/BookService.html":{}}}],["this.http.get(\"http://localhost:8084/bookapi/books/editorials",{"_index":541,"title":{},"body":{"injectables/BookService.html":{}}}],["this.http.get(\"http://localhost:8084/bookapi/books/search",{"_index":542,"title":{},"body":{"injectables/BookService.html":{}}}],["this.http.get(\"http://localhost:8085/authapi/user",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(\"http://localhost:8085/authapi/validatetoken",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(\"http://localhost:8081/editorialapi/editorial",{"_index":680,"title":{},"body":{"injectables/EditorialService.html":{}}}],["this.http.post(\"http://localhost:8082/staffapi/newstaff",{"_index":891,"title":{},"body":{"injectables/StaffService.html":{}}}],["this.http.post(\"http://localhost:8084/bookapi/book",{"_index":546,"title":{},"body":{"injectables/BookService.html":{}}}],["this.http.post(\"http://localhost:8085/authapi/login",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(\"http://localhost:8085/authapi/register",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.put(\"http://localhost:8081/editorialapi/editorial",{"_index":679,"title":{},"body":{"injectables/EditorialService.html":{}}}],["this.http.put(\"http://localhost:8082/staffapi/staff",{"_index":892,"title":{},"body":{"injectables/StaffService.html":{}}}],["this.http.put(\"http://localhost:8084/bookapi/book",{"_index":545,"title":{},"body":{"injectables/BookService.html":{}}}],["this.http.put(\"http://localhost:8085/authapi/user/update",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpoptions",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/StaffService.html":{}}}],["this.loginform.reset",{"_index":219,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.loginform.value.login",{"_index":210,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.loginform.value.password",{"_index":212,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.pages",{"_index":583,"title":{},"body":{"components/BooksComponent.html":{}}}],["this.personal",{"_index":844,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["this.personal.birth",{"_index":852,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["this.personal.email",{"_index":850,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["this.personal.id",{"_index":847,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["this.personal.identification",{"_index":851,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["this.personal.lastname",{"_index":849,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["this.personal.name",{"_index":848,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["this.personal.status",{"_index":853,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["this.registerform.reset",{"_index":810,"title":{},"body":{"components/StaffComponent.html":{}}}],["this.registerform.value.birth",{"_index":804,"title":{},"body":{"components/StaffComponent.html":{}}}],["this.registerform.value.email",{"_index":801,"title":{},"body":{"components/StaffComponent.html":{}}}],["this.registerform.value.firstname",{"_index":799,"title":{},"body":{"components/StaffComponent.html":{}}}],["this.registerform.value.lastname",{"_index":800,"title":{},"body":{"components/StaffComponent.html":{}}}],["this.registerform.value.password",{"_index":806,"title":{},"body":{"components/StaffComponent.html":{}}}],["this.registerform.value.username",{"_index":805,"title":{},"body":{"components/StaffComponent.html":{}}}],["this.response",{"_index":774,"title":{},"body":{"guards/RouteGuardGuard.html":{}}}],["this.router.navigatebyurl(\"/book",{"_index":426,"title":{},"body":{"components/BookFormComponent.html":{}}}],["this.router.navigatebyurl(\"/books",{"_index":220,"title":{},"body":{"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"guards/RouteGuardGuard.html":{}}}],["this.router.navigatebyurl(\"/editorials",{"_index":653,"title":{},"body":{"components/EditorialFormComponent.html":{}}}],["this.router.navigatebyurl(\"/staff",{"_index":846,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["this.router.navigatebyurl('/books",{"_index":751,"title":{},"body":{"components/NavBarComponent.html":{}}}],["this.router.navigatebyurl('/login",{"_index":811,"title":{},"body":{"components/StaffComponent.html":{}}}],["this.router.url.includes('create",{"_index":642,"title":{},"body":{"components/EditorialFormComponent.html":{}}}],["this.router.url.includes('edit",{"_index":410,"title":{},"body":{"components/BookFormComponent.html":{}}}],["this.searchform.value.search",{"_index":588,"title":{},"body":{"components/BooksComponent.html":{}}}],["this.selected",{"_index":428,"title":{},"body":{"components/BookFormComponent.html":{},"components/BooksComponent.html":{}}}],["this.staff",{"_index":839,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["this.staffservice.changestatus(id).subscribe",{"_index":845,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["this.staffservice.getstaff().subscribe(staf",{"_index":838,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["this.staffservice.getstaffbyid(this.auth.id).subscribe",{"_index":843,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["this.staffservice.registerstaff(firstnameparam",{"_index":807,"title":{},"body":{"components/StaffComponent.html":{}}}],["this.staffservice.updatestaff(id",{"_index":857,"title":{},"body":{"components/StaffInfoComponent.html":{}}}],["this.title",{"_index":413,"title":{},"body":{"components/BookFormComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{}}}],["throwerror",{"_index":538,"title":{},"body":{"injectables/BookService.html":{}}}],["tiene",{"_index":765,"title":{},"body":{"guards/RouteGuardGuard.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/BookFormComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/NavBarComponent.html":{},"components/StaffInfoComponent.html":{}}}],["titulo",{"_index":345,"title":{},"body":{"components/BookFormComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{}}}],["toda",{"_index":791,"title":{},"body":{"components/StaffComponent.html":{}}}],["todas",{"_index":336,"title":{},"body":{"components/BookFormComponent.html":{},"components/EditorialsComponent.html":{}}}],["token",{"_index":268,"title":{"interfaces/Token.html":{}},"body":{"injectables/AuthService.html":{},"guards/RouteGuardGuard.html":{},"interfaces/Token.html":{},"coverage.html":{}}}],["tokenfromui",{"_index":701,"title":{},"body":{"injectables/EncryptService.html":{}}}],["top",{"_index":244,"title":{},"body":{"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["true",{"_index":412,"title":{},"body":{"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{},"components/StaffInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["true).subscribe",{"_index":581,"title":{},"body":{"components/BooksComponent.html":{},"components/StaffComponent.html":{}}}],["tslib",{"_index":948,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Auth.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Book.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"injectables/CokieService.html":{},"interfaces/Editorial.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"injectables/EncryptService.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{},"interfaces/Staff.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{},"interfaces/Token.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["un",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"components/BookFormComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"components/EditorialsComponent.html":{},"injectables/EncryptService.html":{},"components/StaffComponent.html":{}}}],["una",{"_index":192,"title":{},"body":{"components/AuthComponent.html":{},"injectables/CokieService.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/EditorialsComponent.html":{},"injectables/StaffService.html":{}}}],["unit",{"_index":985,"title":{},"body":{"index.html":{}}}],["uno",{"_index":370,"title":{},"body":{"components/BookFormComponent.html":{}}}],["update",{"_index":326,"title":{},"body":{"components/BookFormComponent.html":{},"components/BooksComponent.html":{}}}],["update(e",{"_index":375,"title":{},"body":{"components/BookFormComponent.html":{},"components/BooksComponent.html":{}}}],["updatestaff",{"_index":873,"title":{},"body":{"injectables/StaffService.html":{}}}],["updatestaff(id",{"_index":885,"title":{},"body":{"injectables/StaffService.html":{}}}],["updateuser",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuser(id",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["uppercase",{"_index":474,"title":{},"body":{"components/BookInfoComponent.html":{}}}],["url",{"_index":317,"title":{},"body":{"interfaces/Book.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{}}}],["urls",{"_index":769,"title":{},"body":{"guards/RouteGuardGuard.html":{}}}],["urltree",{"_index":772,"title":{},"body":{"guards/RouteGuardGuard.html":{}}}],["use",{"_index":977,"title":{},"body":{"index.html":{}}}],["user",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["username",{"_index":145,"title":{},"body":{"interfaces/Auth.html":{},"injectables/AuthService.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["userparam",{"_index":208,"title":{},"body":{"components/AuthComponent.html":{}}}],["usuaio",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["usuario",{"_index":184,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["utenticado",{"_index":469,"title":{},"body":{"components/BookInfoComponent.html":{}}}],["va",{"_index":403,"title":{},"body":{"components/BookFormComponent.html":{}}}],["valida",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"guards/RouteGuardGuard.html":{}}}],["validate",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["valido",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"guards/RouteGuardGuard.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"injectables/BookService.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"injectables/EncryptService.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["variable",{"_index":931,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1020,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vaya",{"_index":387,"title":{},"body":{"components/BookFormComponent.html":{}}}],["ver",{"_index":593,"title":{},"body":{"components/BooksComponent.html":{},"components/NavBarComponent.html":{}}}],["verdadero",{"_index":883,"title":{},"body":{"injectables/StaffService.html":{}}}],["verifica",{"_index":558,"title":{},"body":{"components/BooksComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{}}}],["verificar",{"_index":462,"title":{},"body":{"components/BookInfoComponent.html":{}}}],["version",{"_index":959,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":989,"title":{},"body":{"index.html":{}}}],["void",{"_index":169,"title":{},"body":{"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BookInfoComponent.html":{},"components/BooksComponent.html":{},"injectables/CokieService.html":{},"components/EditorialFormComponent.html":{},"components/EditorialsComponent.html":{},"components/NavBarComponent.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{}}}],["web",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{}}}],["web_site",{"_index":678,"title":{},"body":{"injectables/EditorialService.html":{}}}],["website",{"_index":626,"title":{},"body":{"interfaces/Editorial.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{}}}],["website).subscribe",{"_index":650,"title":{},"body":{"components/EditorialFormComponent.html":{}}}],["width",{"_index":485,"title":{},"body":{"components/BookInfoComponent.html":{}}}],["y",{"_index":176,"title":{},"body":{"components/AuthComponent.html":{},"components/BookFormComponent.html":{},"components/BooksComponent.html":{},"components/EditorialFormComponent.html":{},"injectables/EditorialService.html":{},"components/NavBarComponent.html":{},"guards/RouteGuardGuard.html":{},"components/StaffComponent.html":{},"components/StaffInfoComponent.html":{},"injectables/StaffService.html":{}}}],["y+1",{"_index":597,"title":{},"body":{"components/BooksComponent.html":{}}}],["ya",{"_index":385,"title":{},"body":{"components/BookFormComponent.html":{}}}],["zone.js",{"_index":950,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'library-web'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'library-web';\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'BookFormComponent', 'selector': 'app-book-form'},{'name': 'BookInfoComponent', 'selector': 'app-book-info'},{'name': 'BooksComponent', 'selector': 'app-books'},{'name': 'EditorialFormComponent', 'selector': 'app-editorial-form'},{'name': 'EditorialsComponent', 'selector': 'app-editorials'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'StaffComponent', 'selector': 'app-staff'},{'name': 'StaffInfoComponent', 'selector': 'app-staff-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\nAppModule -->\n\nAuthComponent->AppModule\n\n\n\n\n\nBookFormComponent\n\nBookFormComponent\n\nAppModule -->\n\nBookFormComponent->AppModule\n\n\n\n\n\nBookInfoComponent\n\nBookInfoComponent\n\nAppModule -->\n\nBookInfoComponent->AppModule\n\n\n\n\n\nBooksComponent\n\nBooksComponent\n\nAppModule -->\n\nBooksComponent->AppModule\n\n\n\n\n\nEditorialFormComponent\n\nEditorialFormComponent\n\nAppModule -->\n\nEditorialFormComponent->AppModule\n\n\n\n\n\nEditorialsComponent\n\nEditorialsComponent\n\nAppModule -->\n\nEditorialsComponent->AppModule\n\n\n\n\n\nNavBarComponent\n\nNavBarComponent\n\nAppModule -->\n\nNavBarComponent->AppModule\n\n\n\n\n\nStaffComponent\n\nStaffComponent\n\nAppModule -->\n\nStaffComponent->AppModule\n\n\n\n\n\nStaffInfoComponent\n\nStaffInfoComponent\n\nAppModule -->\n\nStaffInfoComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AuthComponent\n                        \n                        \n                            BookFormComponent\n                        \n                        \n                            BookInfoComponent\n                        \n                        \n                            BooksComponent\n                        \n                        \n                            EditorialFormComponent\n                        \n                        \n                            EditorialsComponent\n                        \n                        \n                            NavBarComponent\n                        \n                        \n                            StaffComponent\n                        \n                        \n                            StaffInfoComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BooksComponent } from './books/books.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { EditorialsComponent } from './editorials/editorials.component';\nimport { StaffComponent } from './staff/staff.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { StaffInfoComponent } from './staff-info/staff-info.component';\nimport { BookInfoComponent } from './book-info/book-info.component';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { BookFormComponent } from './book-form/book-form.component';\nimport { EditorialFormComponent } from './editorial-form/editorial-form.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BooksComponent,\n    EditorialsComponent,\n    StaffComponent,\n    AuthComponent,\n    StaffInfoComponent,\n    BookInfoComponent,\n    NavBarComponent,\n    BookFormComponent,\n    EditorialFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [\n\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BooksComponent } from './books/books.component';\nimport { EditorialsComponent } from './editorials/editorials.component';\nimport { StaffComponent } from './staff/staff.component';\nimport { StaffInfoComponent } from './staff-info/staff-info.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { BookInfoComponent } from './book-info/book-info.component';\nimport { BookFormComponent } from './book-form/book-form.component';\nimport { EditorialFormComponent } from './editorial-form/editorial-form.component';\nimport { RouteGuardGuard } from './route-guard.guard';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/books', pathMatch: 'full' },\n  { path: 'books', component: BooksComponent },\n  { path: 'book/create', component: BookFormComponent, canActivate: [RouteGuardGuard] },\n  { path: 'book/edit/:id', component: BookFormComponent, canActivate: [RouteGuardGuard] },\n  { path: 'editorials', component: EditorialsComponent },\n  { path: 'editorial/create', component: EditorialFormComponent, canActivate: [RouteGuardGuard] },\n  { path: 'editorial/edit/:id', component: EditorialFormComponent, canActivate: [RouteGuardGuard] },\n  { path: 'staff', component: StaffComponent },\n  { path: 'staff-info', component: StaffInfoComponent, canActivate: [RouteGuardGuard] },\n  { path: 'book-info/:id', component: BookInfoComponent },\n  { path: 'login', component: AuthComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Auth.html":{"url":"interfaces/Auth.html","title":"interface - Auth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Auth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Auth.ts\n        \n\n\n            \n                Description\n            \n            \n                Datos empleados para la autenticacion.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            userName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     []\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     []\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Auth {\n    id: number,\n    userName: string,\n    password: string,\n    roles: []\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/auth.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                styleUrls\n                ./auth.component.css\n            \n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, cokieService: CokieService, router: Router, encrypt: EncryptService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cokieService\n                                                  \n                                                        \n                                                                        CokieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        encrypt\n                                                  \n                                                        \n                                                                        EncryptService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.component.ts:38\n                \n            \n\n\n            \n                \n                    Se obtiene la informacion del form y es enviado al auth service donde se autentica el usuario.\nSi el usuario es autenticado se le redirecciona a la pagina principal, si no se le manda una alerta de usuario o contraseña incorrecta\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    login: '',\n    password: '',\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.component.ts:18\n                        \n                    \n\n            \n                \n                    Empelado para obtener usuario y contraseña de la persona\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { CokieService } from '../services/cokie.service';\nimport { EncryptService } from '../services/encrypt.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  /**\n   * Empelado para obtener usuario y contraseña de la persona\n   */\n  loginForm = this.formBuilder.group({\n    login: '',\n    password: '',\n  });\n\n  constructor(private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private cokieService: CokieService,\n    private router: Router,\n    private encrypt: EncryptService) { }\n\n  ngOnInit(): void {\n  }\n\n\n  /**\n   * Se obtiene la informacion del form y es enviado al auth service donde se autentica el usuario.\n   * Si el usuario es autenticado se le redirecciona a la pagina principal, si no se le manda una alerta de usuario o contraseña incorrecta\n   */\n\n  onSubmit(): void {\n\n    let userParam: string;\n    let passParam: string;\n    userParam = '' + this.loginForm.value.login;\n    passParam = this.encrypt.encryptUsingAES256('' + this.loginForm.value.password);\n\n\n    this.authService.login(userParam, passParam).subscribe(\n      data => {\n        this.cokieService.set(\"token\", data.token);\n        this.cokieService.set(\"user\", userParam);\n        this.loginForm.reset();\n        this.router.navigateByUrl(\"/books\");\n\n      },\n      error => {\n        this.loginForm.reset();\n        alert(\"Usuario o contraseña incorrecto\")\n      });\n\n  }\n\n\n}\n\n    \n\n    \n        \n  \n\n    \n    \n       Ingresa a Libreria PUJ\n    \n\n    \n    \n      Nombre de usuario\n      \n    \n\n    \n    \n      Contraseña\n      \n    \n\n    \n    \n      Iniciar sesión\n    \n  \n\n    \n\n    \n                \n                    ./auth.component.css\n                \n                \n#border {\n    border: 2px solid #4287f5;\n    margin: 0 auto; /* Added */\n    float: none; /* Added */\n    margin-bottom: 10px; /* Added */\n    padding: 2rem;\n    margin-top: 10rem;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                 Ingresa a Libreria PUJ                  Nombre de usuario                        Contraseña                        Iniciar sesión      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'BookFormComponent', 'selector': 'app-book-form'},{'name': 'BookInfoComponent', 'selector': 'app-book-info'},{'name': 'BooksComponent', 'selector': 'app-books'},{'name': 'EditorialFormComponent', 'selector': 'app-editorial-form'},{'name': 'EditorialsComponent', 'selector': 'app-editorials'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'StaffComponent', 'selector': 'app-staff'},{'name': 'StaffInfoComponent', 'selector': 'app-staff-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                login\n                            \n                            \n                                registerUser\n                            \n                            \n                                updateUser\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, cokieService: CokieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cokieService\n                                                  \n                                                        \n                                                                        CokieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser(user: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:52\n                \n            \n\n\n            \n                \n                    Obtiene la informacion de un usuario por su nombre de usuario\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        nombre de usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Auth\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(user: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:31\n                \n            \n\n\n            \n                \n                    Iniciar sesion.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        nombre de usuario\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        contraseña\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Token\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser(userName: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:42\n                \n            \n\n\n            \n                \n                    Crea un nuevo usuario\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        nombre de usuario\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        contraseña\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Auth\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(id: number, userName: string, password: string, roles: [])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:64\n                \n            \n\n\n            \n                \n                    Actualiza la informacion de un usuario.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id del usuaio\n\n                                    \n                                \n                                \n                                    userName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        nombre de usuario\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        contraseña\n\n                                    \n                                \n                                \n                                    roles\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        roles del usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Auth\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:73\n                \n            \n\n\n            \n                \n                    Valida que el token generado este valido\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Anu\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'authorization': 'Bearer ' + this.cokieService.get(\"token\"),\n      'content-type': 'application/json',\n      'accept': 'application/json'\n    })\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Token } from 'src/app/models/Token';\nimport { Auth } from '../models/Auth';\nimport { CokieService } from './cokie.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n\n  constructor(private http: HttpClient,\n    private cokieService: CokieService) { }\n\n  private httpOptions = {\n    headers: new HttpHeaders({\n      'authorization': 'Bearer ' + this.cokieService.get(\"token\"),\n      'content-type': 'application/json',\n      'accept': 'application/json'\n    })\n  }\n\n  /**\n   * Iniciar sesion.\n   * @param user nombre de usuario\n   * @param password contraseña \n   * @returns {Observable}Token\n   */\n  login(user: string, password: string): Observable {\n    const body = { \"username\": user, \"password\": password };\n    return this.http.post(\"http://localhost:8085/authAPI/login\", body);\n  }\n\n  /**\n   * Crea un nuevo usuario\n   * @param userName nombre de usuario\n   * @param password contraseña\n   * @returns {Observable} Auth\n   */\n  registerUser(userName: string, password: string): Observable {\n    const body = { \"userName\": userName, \"password\": password };\n    return this.http.post(\"http://localhost:8085/authAPI/register\", body);\n  }\n\n  /**\n   * Obtiene la informacion de un usuario por su nombre de usuario\n   * @param user nombre de usuario\n   * @returns {Observable} Auth\n   */\n  getUser(user: string): Observable {\n    return this.http.get(\"http://localhost:8085/authAPI/user/\" + user);\n  }\n\n  /**\n   * Actualiza la informacion de un usuario.\n   * @param id id del usuaio\n   * @param userName nombre de usuario\n   * @param password contraseña \n   * @param roles roles del usuario\n   * @returns {Observable} Auth\n   */\n  updateUser(id: number, userName: string, password: string, roles: []): Observable {\n    const body = { \"id\": id, \"username\": userName, \"password\": password, \"roles\": roles };\n    return this.http.put(\"http://localhost:8085/authAPI/user/update\", body);\n  }\n\n  /**\n   * Valida que el token generado este valido\n   * @returns {Observable} Anu\n   */\n  validate(): Observable {\n    return this.http.get(\"http://localhost:8085/authAPI/validateToken\", this.httpOptions)\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Book.html":{"url":"interfaces/Book.html","title":"interface - Book","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Book\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Book.ts\n        \n\n\n            \n                Description\n            \n            \n                Datos del libro.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            author\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            editorialId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            pages\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        author:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editorialId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        editorialId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Book {\n    id: number,\n    name: string,\n    description: string,\n    author: string,\n    url: string,\n    pages: number,\n    price: number,\n    editorialId: number\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BookFormComponent.html":{"url":"components/BookFormComponent.html","title":"component - BookFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BookFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/book-form/book-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-book-form\n            \n\n            \n                styleUrls\n                ./book-form.component.css\n            \n\n\n\n            \n                templateUrl\n                ./book-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                book\n                            \n                            \n                                edit\n                            \n                            \n                                    Optional\n                                editorial\n                            \n                            \n                                editorials\n                            \n                            \n                                selected\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBookById\n                            \n                            \n                                getEditorials\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, bookService: BookService, editorialService: EditorialService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/book-form/book-form.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bookService\n                                                  \n                                                        \n                                                                        BookService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorialService\n                                                  \n                                                        \n                                                                        EditorialService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getBookById\n                        \n                    \n                \n            \n            \n                \ngetBookById()\n                \n            \n\n\n            \n                \n                    Defined in src/app/book-form/book-form.component.ts:128\n                \n            \n\n\n            \n                \n                    Obtener la información de un libro mediante el id del mismo.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEditorials\n                        \n                    \n                \n            \n            \n                \ngetEditorials()\n                \n            \n\n\n            \n                \n                    Defined in src/app/book-form/book-form.component.ts:121\n                \n            \n\n\n            \n                \n                    Obtener la información de todas las editoriales.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/book-form/book-form.component.ts:66\n                \n            \n\n\n            \n                \n                    Dependiendo de si el usuario busca editar un libro o crear, se cambia el titulo de la pagina asi como lo que se carga.\nEn el caso de que el usuario quiera editar un libro, se buscará ese libro en la base da datos para mostrarle la informacion al usuario.\nEn tanto la creación o edición de un libro se obtendrá la información de las editoriales.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/book-form/book-form.component.ts:84\n                \n            \n\n\n            \n                \n                    Se obtiene la información que el usuario cambio o agrego y dependiendo de si es para editar o crear un libro, se llama al bookService con la funcion de\nactualizar un libro o agregar uno nuevo.\nEn caso de editar un libro, al finalizar se le redireccionará al componente book-info y si es la creacion se le redireccionará al componente principal.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(e: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/book-form/book-form.component.ts:113\n                \n            \n\n\n            \n                \n                    Se emplea para conocer la editorial que escogio el usuario\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : codigo y nombre de editorial escogida\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        book\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Book\n\n                    \n                \n                \n                    \n                        Default value : {\n      \"id\": 0,\n      \"name\": '',\n      \"description\": '',\n      \"author\": '',\n      \"url\": '',\n      \"pages\": 0,\n      \"price\": 0,\n      \"editorialId\": 0\n    }\n                    \n                \n                    \n                        \n                                Defined in src/app/book-form/book-form.component.ts:38\n                        \n                    \n\n            \n                \n                    Se emplea para almacenar la informacion del libro ya sea que se vaya a ediar o crear\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/book-form/book-form.component.ts:33\n                        \n                    \n\n            \n                \n                    Se emplea para saber si el usuario busca editar un libro o crear uno nuevo\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        editorial\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Editorial\n\n                    \n                \n                    \n                        \n                                Defined in src/app/book-form/book-form.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editorials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Editorial[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/book-form/book-form.component.ts:53\n                        \n                    \n\n            \n                \n                    Almacena la informacion de las editoriales\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/book-form/book-form.component.ts:59\n                        \n                    \n\n            \n                \n                    Se emplea para conocer la editorial que el usuario selecciono en el dropdown\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/book-form/book-form.component.ts:28\n                        \n                    \n\n            \n                \n                    Cambia de acuerdo a la seccion en donde este, por ejemplo si se va a crear un libro se pondra el titulo \"Crear libro\" y\nsi es para editar se pondra el titulo \"Editar\"\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Book } from '../models/Book';\nimport { Editorial } from '../models/Editorial';\nimport { EditorialService } from '../services/editorial.service';\nimport { BookService } from '../services/book.service';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'app-book-form',\n  templateUrl: './book-form.component.html',\n  styleUrls: ['./book-form.component.css']\n})\nexport class BookFormComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder,\n    private bookService: BookService,\n    private editorialService: EditorialService,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  /**\n   * Cambia de acuerdo a la seccion en donde este, por ejemplo si se va a crear un libro se pondra el titulo \"Crear libro\" y \n   * si es para editar se pondra el titulo \"Editar\"\n   */\n  title: string = '';\n\n  /**\n   * Se emplea para saber si el usuario busca editar un libro o crear uno nuevo\n   */\n  edit: boolean = false;\n\n  /**\n   * Se emplea para almacenar la informacion del libro ya sea que se vaya a ediar o crear\n   */\n  book: Book =\n    {\n      \"id\": 0,\n      \"name\": '',\n      \"description\": '',\n      \"author\": '',\n      \"url\": '',\n      \"pages\": 0,\n      \"price\": 0,\n      \"editorialId\": 0\n    };\n\n  /** \n   * Almacena la informacion de las editoriales \n   */\n  editorials: Editorial[] = [];\n  editorial?: Editorial;\n\n  /**\n   * Se emplea para conocer la editorial que el usuario selecciono en el dropdown\n   */\n  selected = '';\n\n  /**\n   * Dependiendo de si el usuario busca editar un libro o crear, se cambia el titulo de la pagina asi como lo que se carga. \n   * En el caso de que el usuario quiera editar un libro, se buscará ese libro en la base da datos para mostrarle la informacion al usuario. \n   * En tanto la creación o edición de un libro se obtendrá la información de las editoriales.\n   */\n  ngOnInit(): void {\n    this.getEditorials();\n    if (this.router.url.includes('edit')) {\n      this.edit = true;\n      this.title = 'Editar';\n      this.getBookById();\n    }\n    else {\n      this.title = 'Crear libro';\n    }\n  }\n\n  /**\n   * Se obtiene la información que el usuario cambio o agrego y dependiendo de si es para editar o crear un libro, se llama al bookService con la funcion de \n   * actualizar un libro o agregar uno nuevo.\n   * En caso de editar un libro, al finalizar se le redireccionará al componente book-info y si es la creacion se le redireccionará al componente principal.\n   */\n\n  onSubmit(): void {\n    let name: string = this.book.name;\n    let author: string = this.book.author;\n    let description: string = this.book.description;\n    let url: string = this.book.url;\n    let price: number = this.book.price;\n    let pages: number = this.book.pages;\n    let editorialId: number = Number(this.selected.split(\":\")[1]);\n\n    if (this.edit) {\n      let id = Number(this.route.snapshot.paramMap.get('id'));\n      this.bookService.putBook(id, name, description, author, url, pages, price, editorialId).subscribe(\n        data => this.book = data\n      )\n      this.router.navigateByUrl(\"/book-info/\" + id);\n    }\n    else {\n      this.bookService.postBook(name, description, author, url, pages, price, editorialId).subscribe(\n        data => this.book = data\n      );\n      this.router.navigateByUrl(\"/books\");\n    }\n  }\n\n\n  /**\n   * Se emplea para conocer la editorial que escogio el usuario \n   * @param {any} e: codigo y nombre de editorial escogida\n   */\n  update(e: any) {\n    this.selected = e.target.value;\n  }\n\n  /**\n   * Obtener la información de todas las editoriales.\n   */\n\n  getEditorials(): void {\n    this.editorialService.getEditorials().subscribe(data => this.editorials = data);\n  }\n\n  /**\n   * Obtener la información de un libro mediante el id del mismo.\n   */\n  getBookById(): void {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    this.bookService.getBookById(id).subscribe(book => this.book = book);\n  }\n\n}\n\n    \n\n    \n        \n     {{title}} \n\n\n    \n\n        \n            Nombre del libro \n            \n        \n\n        \n             Autor \n            \n        \n        \n             Cantidad de paginas \n            \n        \n\n        \n             Precio \n            \n        \n    \n\n    \n\n        \n             Portada (URL)\n            \n        \n\n        \n             Editorial \n\n            \n                 {{item.name}} \n            \n\n        \n        \n             Descripción \n            \n        \n\n    \n\n    \n        \n            {{title}}\n        \n    \n\n    \n\n    \n                \n                    ./book-form.component.css\n                \n                #form-container {\n    margin-top: 20px;\n}\n\n#title {\n    margin-top: 20px;\n    margin-left: 30px;\n}\n\n#sumbit {\n    margin-left: 68px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     {{title}}                         Nombre del libro                                          Autor                                          Cantidad de paginas                                          Precio                                                  Portada (URL)                                         Editorial                              {{item.name}}                                          Descripción                                                 {{title}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'BookFormComponent', 'selector': 'app-book-form'},{'name': 'BookInfoComponent', 'selector': 'app-book-info'},{'name': 'BooksComponent', 'selector': 'app-books'},{'name': 'EditorialFormComponent', 'selector': 'app-editorial-form'},{'name': 'EditorialsComponent', 'selector': 'app-editorials'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'StaffComponent', 'selector': 'app-staff'},{'name': 'StaffInfoComponent', 'selector': 'app-staff-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BookFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BookInfoComponent.html":{"url":"components/BookInfoComponent.html","title":"component - BookInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BookInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/book-info/book-info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-book-info\n            \n\n            \n                styleUrls\n                ./book-info.component.css\n            \n\n\n\n            \n                templateUrl\n                ./book-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                book\n                            \n                            \n                                    Public\n                                cookie\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteBook\n                            \n                            \n                                getBookById\n                            \n                            \n                                ngDoCheck\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bookService: BookService, route: ActivatedRoute, cokieService: CokieService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/book-info/book-info.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bookService\n                                                  \n                                                        \n                                                                        BookService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cokieService\n                                                  \n                                                        \n                                                                        CokieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteBook\n                        \n                    \n                \n            \n            \n                \ndeleteBook(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/book-info/book-info.component.ts:62\n                \n            \n\n\n            \n                \n                    Eliminar el libro mediante su id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : Id del libro a eliminar.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBookById\n                        \n                    \n                \n            \n            \n                \ngetBookById()\n                \n            \n\n\n            \n                \n                    Defined in src/app/book-info/book-info.component.ts:53\n                \n            \n\n\n            \n                \n                    Obtener la información del libro seleccionado mediante el id del libro enviado por medio de la url.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoCheck\n                        \n                    \n                \n            \n            \n                \nngDoCheck()\n                \n            \n\n\n            \n                \n                    Defined in src/app/book-info/book-info.component.ts:41\n                \n            \n\n\n            \n                \n                    Verificar si el usuario esta autenticado. en caso de que si se activan botones de editar o eliminar el libro.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/book-info/book-info.component.ts:34\n                \n            \n\n\n            \n                \n                    Al iniciar obtener la información del libro.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        book\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Book\n\n                    \n                \n                    \n                        \n                                Defined in src/app/book-info/book-info.component.ts:19\n                        \n                    \n\n            \n                \n                    Almacenar la informacion del libro especifico.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cookie\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/book-info/book-info.component.ts:24\n                        \n                    \n\n            \n                \n                    Conocer si el usuario se a utenticado o no.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Book } from '../models/Book';\nimport { BookService } from '../services/book.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { CokieService } from '../services/cokie.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-book-info',\n  templateUrl: './book-info.component.html',\n  styleUrls: ['./book-info.component.css']\n})\n\nexport class BookInfoComponent implements OnInit {\n\n  /**\n   * Almacenar la informacion del libro especifico.\n   */\n  book?: Book;\n\n  /**\n   * Conocer si el usuario se a utenticado o no.\n   */\n  public cookie: boolean = false;\n\n  constructor(private bookService: BookService,\n    private route: ActivatedRoute,\n    private cokieService: CokieService,\n    private router: Router) { }\n\n  /**\n   * Al iniciar obtener la información del libro.\n   */\n  ngOnInit(): void {\n    this.getBookById();\n  }\n\n  /**\n   * Verificar si el usuario esta autenticado. en caso de que si se activan botones de editar o eliminar el libro.\n   */\n  ngDoCheck(): void {\n    if (this.cokieService.get(\"token\").length > 0) {\n      this.cookie = true;\n    }\n    else {\n      this.cookie = false;\n    }\n  }\n\n  /**\n   * Obtener la información del libro seleccionado mediante el id del libro enviado por medio de la url.\n   */\n  getBookById(): void {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    this.bookService.getBookById(id).subscribe(book => this.book = book);\n  }\n\n  /**\n   * Eliminar el libro mediante su id.\n   * @param {number} id: Id del libro a eliminar. \n   */\n  deleteBook(id: number): void {\n    this.bookService.deleteBook(id).subscribe();\n    this.router.navigateByUrl(\"/books\");\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n    \n\n    \n      {{ book.name | uppercase }}\n\n      \n        {{ book.author | uppercase }}\n        $ {{ book.price }}\n      \n\n      \n        Descripción:\n        {{ book.description }}\n      \n\n      \n           Editar\n        \n\n          Eliminar \n      \n    \n\n  \n\n    \n\n    \n                \n                    ./book-info.component.css\n                \n                #contenedor {\n    margin-top: 50px;\n    margin-left: 70px;\n}\n\n#info-general {\n    margin-top: 20px;\n}\n\n#descripcion {\n    margin-top: 20px;\n}\n\n#info {\n    margin-left: 30px;\n    padding: 50px 50px 50px 50px;\n}\n\n#actions {\n    margin-top: 50px;\n    margin-left: 576px;\n}\n\n.padding {\n    width: 400px;\n    height: 500px;\n    padding: 50px 50px 50px 50px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{ book.name | uppercase }}              {{ book.author | uppercase }}        $ {{ book.price }}                    Descripción:        {{ book.description }}                       Editar                  Eliminar             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'BookFormComponent', 'selector': 'app-book-form'},{'name': 'BookInfoComponent', 'selector': 'app-book-info'},{'name': 'BooksComponent', 'selector': 'app-books'},{'name': 'EditorialFormComponent', 'selector': 'app-editorial-form'},{'name': 'EditorialsComponent', 'selector': 'app-editorials'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'StaffComponent', 'selector': 'app-staff'},{'name': 'StaffInfoComponent', 'selector': 'app-staff-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BookInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookService.html":{"url":"injectables/BookService.html","title":"injectable - BookService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BookService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/book.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteBook\n                            \n                            \n                                getBook\n                            \n                            \n                                getBookById\n                            \n                            \n                                getBookByTitle\n                            \n                            \n                                getBooksByEditorial\n                            \n                            \n                                postBook\n                            \n                            \n                                putBook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, cokieService: CokieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/book.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cokieService\n                                                  \n                                                        \n                                                                        CokieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteBook\n                        \n                    \n                \n            \n            \n                \ndeleteBook(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/book.service.ts:64\n                \n            \n\n\n            \n                \n                    Elimina un libro por su id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id del libro\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBook\n                        \n                    \n                \n            \n            \n                \ngetBook(page: number, size: number, order: string, asc: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/book.service.ts:28\n                \n            \n\n\n            \n                \n                    Obtiene la informacion de los libros paginados\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Pagina actual de la paginacion\n\n                                    \n                                \n                                \n                                    size\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tamaño de libros a mostrar\n\n                                    \n                                \n                                \n                                    order\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Forma en la que se ordenará\n\n                                    \n                                \n                                \n                                    asc\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Booleano para determinar si es ascendente o descente el orden\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBookById\n                        \n                    \n                \n            \n            \n                \ngetBookById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/book.service.ts:36\n                \n            \n\n\n            \n                \n                    Obtiene la informacion de un libro por su id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id del libro\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Book\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBookByTitle\n                        \n                    \n                \n            \n            \n                \ngetBookByTitle(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/book.service.ts:55\n                \n            \n\n\n            \n                \n                    Obtiene la informacion de los libros que tenga similitudes con el titulo\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        titulo del libro\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Book[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBooksByEditorial\n                        \n                    \n                \n            \n            \n                \ngetBooksByEditorial(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/book.service.ts:46\n                \n            \n\n\n            \n                \n                    Obtiene la informacion de los libros que tengan la editorial requerida\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        nombre de editorial\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Book[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postBook\n                        \n                    \n                \n            \n            \n                \npostBook(name: string, description: string, author: string, url: string, pages: number, price: number, editorialId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/book.service.ts:97\n                \n            \n\n\n            \n                \n                    Crea un nuevo libro\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        nombre del libro\n\n                                    \n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        decripcion del libro\n\n                                    \n                                \n                                \n                                    author\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        autor del libro\n\n                                    \n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        url de la imagen del libro\n\n                                    \n                                \n                                \n                                    pages\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        cantidad de paginas del libro\n\n                                    \n                                \n                                \n                                    price\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        precio del libro\n\n                                    \n                                \n                                \n                                    editorialId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id de la editorial del libro\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Book\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putBook\n                        \n                    \n                \n            \n            \n                \nputBook(id: number, name: string, description: string, author: string, url: string, pages: number, price: number, editorialId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/book.service.ts:81\n                \n            \n\n\n            \n                \n                    Edita la informacion de un libro\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id del libro\n\n                                    \n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        nombre del libro\n\n                                    \n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        decripcion del libro\n\n                                    \n                                \n                                \n                                    author\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        autor del libro\n\n                                    \n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        url de la imagen del libro\n\n                                    \n                                \n                                \n                                    pages\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        cantidad de paginas del libro\n\n                                    \n                                \n                                \n                                    price\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        precio del libro\n\n                                    \n                                \n                                \n                                    editorialId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id de la editorial del libro\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Book\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'authorization': 'Bearer ' + this.cokieService.get(\"token\")\n    })\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/book.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { Book } from '../models/Book';\nimport { CokieService } from './cokie.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookService {\n\n  constructor(private http: HttpClient,\n    private cokieService: CokieService) { }\n\n  private httpOptions = {\n    headers: new HttpHeaders({\n      'authorization': 'Bearer ' + this.cokieService.get(\"token\")\n    })\n  }\n  /**\n   * Obtiene la informacion de los libros paginados\n   * @param page Pagina actual de la paginacion\n   * @param size Tamaño de libros a mostrar\n   * @param order Forma en la que se ordenará \n   * @param asc Booleano para determinar si es ascendente o descente el orden\n   * @returns {Observable} Any\n   */\n  getBook(page: number, size: number, order: string, asc: boolean): Observable {\n    return this.http.get(\"http://localhost:8084/bookAPI/books?\" + `page=${page}&size=${size}&order=${order}&asc=${asc}`);\n  }\n  /**\n   * Obtiene la informacion de un libro por su id\n   * @param id id del libro\n   * @returns {Observable} Book\n   */\n  getBookById(id: number): Observable {\n    return this.http.get(\"http://localhost:8084/bookAPI/books/\" + id);\n  }\n\n  /**\n   * Obtiene la informacion de los libros que tengan la editorial requerida\n   * @param name nombre de editorial\n   * @returns {Observable} Book[]\n   */\n\n  getBooksByEditorial(name: string): Observable {\n    return this.http.get(\"http://localhost:8084/bookAPI/books/editorials/\" + name);\n  }\n\n  /**\n   * Obtiene la informacion de los libros que tenga similitudes con el titulo \n   * @param name titulo del libro\n   * @returns {Observable} Book[]\n   */\n  getBookByTitle(name: string): Observable {\n    return this.http.get(\"http://localhost:8084/bookAPI/books/search/\" + name);\n  }\n\n  /**\n   * Elimina un libro por su id \n   * @param id id del libro\n   * @returns {Observable} Any\n   */\n  deleteBook(id: number): Observable {\n    console.log(id);\n    return this.http.delete(\"http://localhost:8084/bookAPI/book/\" + id, this.httpOptions);\n  }\n\n  /**\n   * Edita la informacion de un libro\n   * @param id id del libro\n   * @param name nombre del libro\n   * @param description decripcion del libro\n   * @param author autor del libro\n   * @param url url de la imagen del libro\n   * @param pages cantidad de paginas del libro\n   * @param price precio del libro\n   * @param editorialId id de la editorial del libro\n   * @returns {Observable} Book\n   */\n  putBook(id: number, name: string, description: string, author: string, url: string, pages: number, price: number, editorialId: number): Observable {\n    const body = { \"id\": id, \"name\": name, \"description\": description, \"author\": author, \"url\": url, \"pages\": pages, \"price\": price, \"editorialId\": editorialId };\n    return this.http.put(\"http://localhost:8084/bookAPI/book\", body, this.httpOptions);\n  }\n\n  /**\n   * Crea un nuevo libro\n   * @param name nombre del libro\n   * @param description decripcion del libro\n   * @param author autor del libro\n   * @param url url de la imagen del libro\n   * @param pages cantidad de paginas del libro\n   * @param price precio del libro\n   * @param editorialId id de la editorial del libro\n   * @returns {Observable} Book\n   */\n  postBook(name: string, description: string, author: string, url: string, pages: number, price: number, editorialId: number): Observable {\n    const body = { \"name\": name, \"description\": description, \"author\": author, \"url\": url, \"pages\": pages, \"price\": price, \"editorialId\": editorialId }\n    return this.http.post(\"http://localhost:8084/bookAPI/book\", body);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BooksComponent.html":{"url":"components/BooksComponent.html","title":"component - BooksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BooksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/books/books.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-books\n            \n\n            \n                styleUrls\n                ./books.component.css\n            \n\n\n\n            \n                templateUrl\n                ./books.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                books\n                            \n                            \n                                cookie\n                            \n                            \n                                pages\n                            \n                            \n                                search\n                            \n                            \n                                searchForm\n                            \n                            \n                                selected\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBooks\n                            \n                            \n                                ngDoCheck\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSumbit\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bookService: BookService, cokieService: CokieService, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/books/books.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bookService\n                                                  \n                                                        \n                                                                        BookService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cokieService\n                                                  \n                                                        \n                                                                        CokieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getBooks\n                        \n                    \n                \n            \n            \n                \ngetBooks(page: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/books/books.component.ts:45\n                \n            \n\n\n            \n                \n                    Obtiene la información de los libros paginados\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : Pagina actual\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoCheck\n                        \n                    \n                \n            \n            \n                \nngDoCheck()\n                \n            \n\n\n            \n                \n                    Defined in src/app/books/books.component.ts:60\n                \n            \n\n\n            \n                \n                    Verifica si el usuario esta autenticado, si lo está aparece un boton con la opcion de crear un nuevo libro.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/books/books.component.ts:91\n                \n            \n\n\n            \n                \n                    Obtiene los primero 3 libros.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSumbit\n                        \n                    \n                \n            \n            \n                \nonSumbit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/books/books.component.ts:72\n                \n            \n\n\n            \n                \n                    Realiza la busqueda dependiendo de la opcion que el usuario haya escogido, libro o editorial.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(e: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/books/books.component.ts:37\n                \n            \n\n\n            \n                \n                    Se emplea para conocer la editorial que escogio el usuario\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : codigo y nombre de editorial escogida\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        books\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Book[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/books/books.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cookie\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/books/books.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/books/books.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    \"Libros\",\n    \"Editoriales\"\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/books/books.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    search: ''\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/books/books.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Libros'\n                    \n                \n                    \n                        \n                                Defined in src/app/books/books.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/books/books.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BookService } from '../services/book.service';\nimport { Book } from '../models/Book';\nimport { CokieService } from '../services/cokie.service';\n\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-books',\n  templateUrl: './books.component.html',\n  styleUrls: ['./books.component.css']\n})\nexport class BooksComponent implements OnInit {\n\n  title: string = '';\n  books: Book[] = [];\n  cookie: boolean = false;\n  search = [\n    \"Libros\",\n    \"Editoriales\"\n  ]\n  selected = 'Libros';\n  pages = 0;\n\n  searchForm = this.formBuilder.group({\n    search: ''\n  });\n\n  constructor(private bookService: BookService,\n    private cokieService: CokieService,\n    private formBuilder: FormBuilder) { }\n\n  /**\n   * Se emplea para conocer la editorial que escogio el usuario \n   * @param {any} e: codigo y nombre de editorial escogida\n   */\n  update(e: any) {\n    this.selected = e.target.value;\n  }\n\n  /**\n   * Obtiene la información de los libros paginados \n   * @param {number} page: Pagina actual  \n   */\n  getBooks(page: number): void {\n    this.title = \"Novedades\";\n    this.bookService.getBook(page, 3, \"id\", true).subscribe(\n      book => {\n        console.log(book)\n        this.pages = book.totalPages\n        this.books = book.content\n      }\n    );\n\n  }\n\n  /**\n   * Verifica si el usuario esta autenticado, si lo está aparece un boton con la opcion de crear un nuevo libro.\n   */\n  ngDoCheck(): void {\n    if (this.cokieService.get(\"token\").length > 0) {\n      this.cookie = true;\n    }\n    else {\n      this.cookie = false;\n    }\n  }\n\n  /**\n   * Realiza la busqueda dependiendo de la opcion que el usuario haya escogido, libro o editorial.\n   */\n  onSumbit() {\n    this.title = \"Resultados\"\n    let search: string = '' + this.searchForm.value.search;\n    if (this.selected == \"Libros\") {\n      this.bookService.getBookByTitle(search).subscribe(\n        data => this.books = data\n      )\n    }\n    else {\n      this.bookService.getBooksByEditorial(search).subscribe(\n        data => this.books = data\n      )\n    }\n\n  }\n\n  /**\n   * Obtiene los primero 3 libros.\n   */\n  ngOnInit(): void {\n    this.getBooks(0);\n  }\n\n\n\n}\n\n    \n\n    \n        \n    \n\n        \n             {{title}}\n        \n\n        \n\n        \n        \n            \n                \n                \n                    \n                        {{item}}\n                    \n                \n\n                \n                Buscar\n            \n        \n\n        \n             Agregar \n        \n    \n\n\n\n    \n        \n            \n            \n                {{book.name}}\n                 \n                {{book.description}}\n                Ver detalle\n            \n        \n    \n\n\n 0\" id=\"pagination\">\n    \n        \n             &laquo;\n        \n         {{y+1}} \n        \n\n        \n            &raquo;\n        \n    \n\n    \n\n    \n                \n                    ./books.component.css\n                \n                #card {\n    margin-top: 30px;\n    margin-left: 50px;\n    margin-right: 50px;\n    justify-content: center;\n}\n\n#titulo {\n    margin-top: 10px;\n\n}\n\n#head {\n    margin-top: 10px;\n}\n\n#pagination {\n    margin-top: 20px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                         {{title}}                                                                                                                        {{item}}                                                                    Buscar                                         Agregar                                                                 {{book.name}}                                 {{book.description}}                Ver detalle                         0\" id=\"pagination\">                         «                 {{y+1}}                             »            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'BookFormComponent', 'selector': 'app-book-form'},{'name': 'BookInfoComponent', 'selector': 'app-book-info'},{'name': 'BooksComponent', 'selector': 'app-books'},{'name': 'EditorialFormComponent', 'selector': 'app-editorial-form'},{'name': 'EditorialsComponent', 'selector': 'app-editorials'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'StaffComponent', 'selector': 'app-staff'},{'name': 'StaffInfoComponent', 'selector': 'app-staff-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BooksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CokieService.html":{"url":"injectables/CokieService.html","title":"injectable - CokieService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CokieService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/cokie.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cookieService: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/cokie.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/cokie.service.ts:33\n                \n            \n\n\n            \n                \n                    Elimina la informacion contenida dentro de una cookie\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        nombre de la cookie\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/cokie.service.ts:25\n                \n            \n\n\n            \n                \n                    Obtiene la informacion contenida dentro de una cookie\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        nombre de la cookie\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        name\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(name: string, cookie: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/cokie.service.ts:16\n                \n            \n\n\n            \n                \n                    Almacena informacion en una cookie\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        nombre a poner a la cookie\n\n                                    \n                                \n                                \n                                    cookie\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        informacion a poner en la cookie\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CokieService {\n\n  constructor(private cookieService: CookieService) { }\n\n  /**\n   * Almacena informacion en una cookie \n   * @param name nombre a poner a la cookie\n   * @param cookie informacion a poner en la cookie\n   */\n  set(name: string, cookie: string): void {\n    this.cookieService.set(name, cookie);\n  }\n\n  /**\n   * Obtiene la informacion contenida dentro de una cookie \n   * @param name nombre de la cookie\n   * @returns {String} name\n   */\n  get(name: string): string {\n    return this.cookieService.get(name);\n  }\n\n  /**\n   * Elimina la informacion contenida dentro de una cookie\n   * @param name nombre de la cookie\n   */\n  delete(name: string): void {\n    this.cookieService.delete(name);\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Editorial.html":{"url":"interfaces/Editorial.html","title":"interface - Editorial","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Editorial\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Editorial.ts\n        \n\n\n            \n                Description\n            \n            \n                Datos de la editorial.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            img\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            webSite\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        img\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        img:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        webSite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        webSite:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Editorial {\n    id: number,\n    name: string,\n    webSite: string,\n    img: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditorialFormComponent.html":{"url":"components/EditorialFormComponent.html","title":"component - EditorialFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditorialFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/editorial-form/editorial-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editorial-form\n            \n\n            \n                styleUrls\n                ./editorial-form.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editorial-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                edit\n                            \n                            \n                                editorial\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEditorialByid\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, editorialService: EditorialService)\n                    \n                \n                        \n                            \n                                Defined in src/app/editorial-form/editorial-form.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorialService\n                                                  \n                                                        \n                                                                        EditorialService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getEditorialByid\n                        \n                    \n                \n            \n            \n                \ngetEditorialByid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/editorial-form/editorial-form.component.ts:75\n                \n            \n\n\n            \n                \n                    Obtiene la informacion de una editorial dependiendo de su id\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/editorial-form/editorial-form.component.ts:35\n                \n            \n\n\n            \n                \n                    Obtiene la informacion de la editorial en caso de que la url contenga \"edit\" y pone el titulo \"Editar\", en caso de que la url contenga\n\"create\", simplemente se pondra el titulo \"Crear editorial\"\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/editorial-form/editorial-form.component.ts:51\n                \n            \n\n\n            \n                \n                    Obtiene la información que el usuario cambio de la editorial y dependiendo si el usuario edito o creo una editorial, se llama al editorialService\ncon la funcion de editar o crear. Al finalizar se redirecciona al usuario a la pagina principal de editoriales.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        edit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/editorial-form/editorial-form.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editorial\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Editorial\n\n                    \n                \n                \n                    \n                        Default value : {\n      \"id\": 0,\n      \"name\": '',\n      \"webSite\": '',\n      \"img\": ''\n    }\n                    \n                \n                    \n                        \n                                Defined in src/app/editorial-form/editorial-form.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/editorial-form/editorial-form.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder } from '@angular/forms';\nimport { Editorial } from '../models/Editorial';\nimport { EditorialService } from '../services/editorial.service';\n\n@Component({\n  selector: 'app-editorial-form',\n  templateUrl: './editorial-form.component.html',\n  styleUrls: ['./editorial-form.component.css']\n})\nexport class EditorialFormComponent implements OnInit {\n\n  title: string = '';\n  edit: boolean = false;\n  editorial: Editorial =\n    {\n      \"id\": 0,\n      \"name\": '',\n      \"webSite\": '',\n      \"img\": ''\n    };\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private editorialService: EditorialService) { }\n\n\n  /**\n   * Obtiene la informacion de la editorial en caso de que la url contenga \"edit\" y pone el titulo \"Editar\", en caso de que la url contenga \n   * \"create\", simplemente se pondra el titulo \"Crear editorial\"\n   */\n  ngOnInit(): void {\n\n    if (this.router.url.includes('create')) {\n      this.title = 'Crear editorial';\n    }\n    else {\n      this.title = 'Editar';\n      this.edit = true;\n      this.getEditorialByid();\n    }\n  }\n\n  /**\n   * Obtiene la información que el usuario cambio de la editorial y dependiendo si el usuario edito o creo una editorial, se llama al editorialService\n   * con la funcion de editar o crear. Al finalizar se redirecciona al usuario a la pagina principal de editoriales.\n   */\n  onSubmit(): void {\n    let name: string = this.editorial.name;\n    let url: string = this.editorial.img;\n    let webSite: string = this.editorial.webSite;\n    console.log(webSite)\n    if (this.edit) {\n      const id = Number(this.route.snapshot.paramMap.get('id'));\n      console.log(this.editorial.img)\n      this.editorialService.putEditorial(id, name, url, webSite).subscribe(\n        data => this.editorial = data\n      )\n\n    }\n    else {\n      this.editorialService.postEditorial(name, url, webSite).subscribe(\n        data => this.editorial = data\n      )\n    }\n    this.router.navigateByUrl(\"/editorials\");\n  }\n\n  /**\n   * Obtiene la informacion de una editorial dependiendo de su id \n   */\n  getEditorialByid(): void {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    this.editorialService.getEditorialById(id).subscribe(data => this.editorial = data);\n  }\n\n}\n\n    \n\n    \n        \n     {{title}} \n\n\n\n    \n\n        \n            Nombre de la editorial \n            \n        \n\n        \n             Imagen (url) \n            \n        \n        \n             Pagina web \n            \n        \n\n    \n    \n        \n            {{title}}\n        \n    \n\n\n    \n\n    \n                \n                    ./editorial-form.component.css\n                \n                #title {\n    margin-top: 20px;\n    margin-left: 30px;\n}\n\n\n#head {\n    margin-top: 10px;\n}\n\n#form-container {\n    margin-top: 20px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     {{title}}                         Nombre de la editorial                                          Imagen (url)                                          Pagina web                                                 {{title}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'BookFormComponent', 'selector': 'app-book-form'},{'name': 'BookInfoComponent', 'selector': 'app-book-info'},{'name': 'BooksComponent', 'selector': 'app-books'},{'name': 'EditorialFormComponent', 'selector': 'app-editorial-form'},{'name': 'EditorialsComponent', 'selector': 'app-editorials'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'StaffComponent', 'selector': 'app-staff'},{'name': 'StaffInfoComponent', 'selector': 'app-staff-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditorialFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EditorialService.html":{"url":"injectables/EditorialService.html","title":"injectable - EditorialService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EditorialService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/editorial.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteEditorial\n                            \n                            \n                                getEditorialById\n                            \n                            \n                                getEditorialByName\n                            \n                            \n                                getEditorials\n                            \n                            \n                                postEditorial\n                            \n                            \n                                putEditorial\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/editorial.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteEditorial\n                        \n                    \n                \n            \n            \n                \ndeleteEditorial(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/editorial.service.ts:69\n                \n            \n\n\n            \n                \n                    Llama al back y elimina una editorial por su id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id de la editorial\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEditorialById\n                        \n                    \n                \n            \n            \n                \ngetEditorialById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/editorial.service.ts:35\n                \n            \n\n\n            \n                \n                    Llama al back y obtiene informacion de una editorial por su nombre\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id de la editorial\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Editorial\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEditorialByName\n                        \n                    \n                \n            \n            \n                \ngetEditorialByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/editorial.service.ts:26\n                \n            \n\n\n            \n                \n                    Llama al back y obtiene informacion de una editorial por su nombre\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        nombre de editorial\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Editorial\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEditorials\n                        \n                    \n                \n            \n            \n                \ngetEditorials()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/editorial.service.ts:17\n                \n            \n\n\n            \n                \n                    Llama al back y obtiene informacion de las editoriales\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Edtitorial[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postEditorial\n                        \n                    \n                \n            \n            \n                \npostEditorial(name: string, url: string, webSite: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/editorial.service.ts:59\n                \n            \n\n\n            \n                \n                    Llama al back y crea una editorial nueva\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        nombre de la editorial\n\n                                    \n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        url de la imagen de la editorial\n\n                                    \n                                \n                                \n                                    webSite\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        pagina web de la editorial\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Editorial\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putEditorial\n                        \n                    \n                \n            \n            \n                \nputEditorial(id: number, name: string, url: string, webSite: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/editorial.service.ts:47\n                \n            \n\n\n            \n                \n                    Llama al back y edita una editorial\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id del editorial\n\n                                    \n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Nombre de la editorial\n\n                                    \n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        url de la imagen de la editorial\n\n                                    \n                                \n                                \n                                    webSite\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        pagina web de la editorial\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Editorial\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Editorial } from '../models/Editorial';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EditorialService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Llama al back y obtiene informacion de las editoriales\n   * @returns {Observable} Edtitorial[]\n   */\n  getEditorials(): Observable {\n    return this.http.get(\"http://localhost:8081/editorialAPI/editorials\" /*, { headers: { skip: \"true\" } }*/);\n  }\n\n  /**\n   * Llama al back y obtiene informacion de una editorial por su nombre\n   * @param name nombre de editorial \n   * @returns {Observable} Editorial\n   */\n  getEditorialByName(name: string): Observable {\n    return this.http.get(\"http://localhost:8081/editorialAPI/editorials/\" + name /*, { headers: { skip: \"true\" } }*/);\n  }\n\n  /**\n   * Llama al back y obtiene informacion de una editorial por su nombre\n   * @param id id de la editorial \n   * @returns {Observable} Editorial\n   */\n  getEditorialById(id: number): Observable {\n    return this.http.get(\"http://localhost:8081/editorialAPI/editorial/\" + id /*, { headers: { skip: \"true\" } }*/);\n  }\n\n  /**\n   * Llama al back y edita una editorial\n   * @param id id del editorial\n   * @param name Nombre de la editorial\n   * @param url url de la imagen de la editorial\n   * @param webSite pagina web de la editorial\n   * @returns {Observable} Editorial\n   */\n  putEditorial(id: number, name: string, url: string, webSite: string): Observable {\n    const body = { \"id\": id, \"name\": name, \"img\": url, \"web_site\": webSite };\n    return this.http.put(\"http://localhost:8081/editorialAPI/editorial/\", body);\n  }\n\n  /**\n   * Llama al back y crea una editorial nueva\n   * @param name nombre de la editorial\n   * @param url url de la imagen de la editorial\n   * @param webSite pagina web de la editorial\n   * @returns {Observable} Editorial\n   */\n  postEditorial(name: string, url: string, webSite: string): Observable {\n    const body = { \"name\": name, \"img\": url, \"web_site\": webSite };\n    return this.http.post(\"http://localhost:8081/editorialAPI/editorial/\", body);\n  }\n\n  /**\n   * Llama al back y elimina una editorial por su id\n   * @param id id de la editorial\n   * @returns {Observable} Any\n   */\n  deleteEditorial(id: number): Observable {\n    return this.http.delete(\"http://localhost:8081/editorialAPI/editorial/\" + id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditorialsComponent.html":{"url":"components/EditorialsComponent.html","title":"component - EditorialsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditorialsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/editorials/editorials.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editorials\n            \n\n            \n                styleUrls\n                ./editorials.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editorials.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cookie\n                            \n                            \n                                editorials\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteEditorial\n                            \n                            \n                                getEditorials\n                            \n                            \n                                ngDoCheck\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(editorialService: EditorialService, cokieService: CokieService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/editorials/editorials.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        editorialService\n                                                  \n                                                        \n                                                                        EditorialService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cokieService\n                                                  \n                                                        \n                                                                        CokieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteEditorial\n                        \n                    \n                \n            \n            \n                \ndeleteEditorial(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/editorials/editorials.component.ts:48\n                \n            \n\n\n            \n                \n                    Elimina la editorial seleccionada\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : Id de la editorial\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEditorials\n                        \n                    \n                \n            \n            \n                \ngetEditorials()\n                \n            \n\n\n            \n                \n                    Defined in src/app/editorials/editorials.component.ts:40\n                \n            \n\n\n            \n                \n                    Obtiene la informacion de todas las editoriales\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoCheck\n                        \n                    \n                \n            \n            \n                \nngDoCheck()\n                \n            \n\n\n            \n                \n                    Defined in src/app/editorials/editorials.component.ts:24\n                \n            \n\n\n            \n                \n                    Verifica si el usuario se auntetico, si lo hizo se genera un boton para crear, editar o eliminar una editorial,\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/editorials/editorials.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cookie\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/editorials/editorials.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editorials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Editorial[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/editorials/editorials.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Editorial } from '../models/Editorial';\nimport { EditorialService } from '../services/editorial.service';\nimport { CokieService } from '../services/cokie.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-editorials',\n  templateUrl: './editorials.component.html',\n  styleUrls: ['./editorials.component.css']\n})\nexport class EditorialsComponent implements OnInit {\n\n  editorials: Editorial[] = [];\n  public cookie: boolean = false;\n\n  constructor(private editorialService: EditorialService,\n    private cokieService: CokieService,\n    private router: Router) { }\n\n  /**\n   * Verifica si el usuario se auntetico, si lo hizo se genera un boton para crear, editar o eliminar una editorial,  \n   */\n  ngDoCheck(): void {\n    if (this.cokieService.get(\"token\").length > 0) {\n      this.cookie = true;\n    }\n    else {\n      this.cookie = false;\n    }\n  }\n\n  ngOnInit(): void {\n    this.getEditorials();\n  }\n\n  /**\n   * Obtiene la informacion de todas las editoriales\n   */\n  getEditorials(): void {\n    this.editorialService.getEditorials().subscribe(editorials => this.editorials = editorials)\n  }\n\n  /**\n   * Elimina la editorial seleccionada\n   * @param {number}id: Id de la editorial \n   */\n  deleteEditorial(id: number): void {\n    console.log(id)\n    this.editorialService.deleteEditorial(id).subscribe();\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n        \n             Editoriales\n        \n        \n\n        \n        \n\n        \n        \n\n        \n\n        \n             Agregar\n            \n        \n    \n\n\n\n\n    \n        \n            \n            \n                \n                    {{editorial.name}}\n                \n\n                \n                     \n                \n                \n                      \n            \n        \n    \n\n    \n\n    \n                \n                    ./editorials.component.css\n                \n                #titulo {\n    margin-top: 10px;\n\n}\n\n#head {\n    margin-top: 10px;\n}\n\n#card {\n    margin-top: 30px;\n    margin-left: 50px;\n    margin-right: 50px;\n    justify-content: center;\n\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                         Editoriales                                                                             Agregar                                                                                                {{editorial.name}}                                                                                                                                   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'BookFormComponent', 'selector': 'app-book-form'},{'name': 'BookInfoComponent', 'selector': 'app-book-info'},{'name': 'BooksComponent', 'selector': 'app-books'},{'name': 'EditorialFormComponent', 'selector': 'app-editorial-form'},{'name': 'EditorialsComponent', 'selector': 'app-editorials'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'StaffComponent', 'selector': 'app-staff'},{'name': 'StaffInfoComponent', 'selector': 'app-staff-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditorialsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EncryptService.html":{"url":"injectables/EncryptService.html","title":"injectable - EncryptService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EncryptService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/encrypt.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tokenFromUI\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                encryptUsingAES256\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/encrypt.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        encryptUsingAES256\n                        \n                    \n                \n            \n            \n                \nencryptUsingAES256(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/encrypt.service.ts:18\n                \n            \n\n\n            \n                \n                    encripta un texto dado\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        contraseña\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        encrypted\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        tokenFromUI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"0123456789123456\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/encrypt.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as CryptoJS from 'crypto-js';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EncryptService {\n\n  tokenFromUI: string = \"0123456789123456\";\n\n  constructor() { }\n\n  /**\n   * encripta un texto dado\n   * @param password contraseña\n   * @returns {string} encrypted\n   */\n  encryptUsingAES256(password: string): string {\n    let _key = CryptoJS.enc.Utf8.parse(this.tokenFromUI);\n    let _iv = CryptoJS.enc.Utf8.parse(this.tokenFromUI);\n    let encrypted = CryptoJS.AES.encrypt(\n      JSON.stringify(password), _key, {\n      keySize: 16,\n      iv: _iv,\n      mode: CryptoJS.mode.ECB,\n      padding: CryptoJS.pad.Pkcs7\n    });\n    return encrypted.toString();\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavBarComponent.html":{"url":"components/NavBarComponent.html","title":"component - NavBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/nav-bar/nav-bar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav-bar\n            \n\n            \n                styleUrls\n                ./nav-bar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./nav-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cerrarSesion\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cerrar\n                            \n                            \n                                ngDoCheck\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cokieService: CokieService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/nav-bar/nav-bar.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cokieService\n                                                  \n                                                        \n                                                                        CokieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cerrar\n                        \n                    \n                \n            \n            \n                \ncerrar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/nav-bar/nav-bar.component.ts:40\n                \n            \n\n\n            \n                \n                    Cierra sesion del usuario y se elimina la informacion del JWT y nombre de usuario. al finalizar se redirecciona a la pagina principal.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoCheck\n                        \n                    \n                \n            \n            \n                \nngDoCheck()\n                \n            \n\n\n            \n                \n                    Defined in src/app/nav-bar/nav-bar.component.ts:27\n                \n            \n\n\n            \n                \n                    Verifica si el usuario esta autenticado. dependiendo de esto se le muestran opciones de inicar sesion o crear cuenta en caso de que no\ny en el caso contrario opciones de ver perfil y cerrar sesion.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/nav-bar/nav-bar.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cerrarSesion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/nav-bar/nav-bar.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/nav-bar/nav-bar.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CokieService } from '../services/cokie.service';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  title: string = '';\n  public cerrarSesion: boolean = false;\n\n\n  constructor(private cokieService: CokieService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n\n  }\n\n  /**\n   * Verifica si el usuario esta autenticado. dependiendo de esto se le muestran opciones de inicar sesion o crear cuenta en caso de que no\n   * y en el caso contrario opciones de ver perfil y cerrar sesion.\n   */\n  ngDoCheck(): void {\n    if (this.cokieService.get(\"token\").length > 0) {\n\n      this.cerrarSesion = true;\n    }\n    else {\n      this.cerrarSesion = false;\n    }\n  }\n\n  /**\n   * Cierra sesion del usuario y se elimina la informacion del JWT y nombre de usuario. al finalizar se redirecciona a la pagina principal.\n   */\n  cerrar(): void {\n    this.cokieService.delete(\"token\");\n    this.cokieService.delete(\"user\");\n    this.router.navigateByUrl('/books');\n  }\n\n}\n\n    \n\n    \n        \n    \n\n        \n            \n        \n\n        \n            \n                \n                    \n\n                        \n                             Libreria PUJ \n                        \n\n                        \n                             Libros\n                        \n                        \n                            Editoriales\n                        \n                    \n                \n\n            \n\n\n\n\n        \n\n        \n            \n                \n                    \n                    Mi cuenta\n\n                \n                \n                    Iniciar Sesión\n                    Crear cuenta\n                     Mi perfil\n                    \n                        \n                    \n                    Cerrar sesión\n                \n            \n\n        \n\n    \n\n    \n\n    \n                \n                    ./nav-bar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                             Libreria PUJ                                                                              Libros                                                                            Editoriales                                                                                                                                                            Mi cuenta                                                    Iniciar Sesión                    Crear cuenta                     Mi perfil                                                                                    Cerrar sesión                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'BookFormComponent', 'selector': 'app-book-form'},{'name': 'BookInfoComponent', 'selector': 'app-book-info'},{'name': 'BooksComponent', 'selector': 'app-books'},{'name': 'EditorialFormComponent', 'selector': 'app-editorial-form'},{'name': 'EditorialsComponent', 'selector': 'app-editorials'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'StaffComponent', 'selector': 'app-staff'},{'name': 'StaffInfoComponent', 'selector': 'app-staff-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RouteGuardGuard.html":{"url":"guards/RouteGuardGuard.html","title":"guard - RouteGuardGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RouteGuardGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/route-guard.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                response\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/route-guard.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/route-guard.guard.ts:19\n                \n            \n\n\n            \n                \n                    Valida si el usuario esta autenticado y tiene token valido para permitir el ingreso a ciertas urls restringidas\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './services/auth.service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardGuard implements CanActivate {\n\n  constructor(private auth: AuthService,\n    private router: Router) { }\n  response: boolean = false;\n\n  /**\n   * Valida si el usuario esta autenticado y tiene token valido para permitir el ingreso a ciertas urls restringidas\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n\n\n    this.auth.validate().subscribe(data => {\n      this.response = true\n      return this.response;\n    },\n      error => {\n        this.router.navigateByUrl(\"/books\");\n        return this.response;\n      });\n    return this.response;\n\n  }\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Staff.html":{"url":"interfaces/Staff.html","title":"interface - Staff","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Staff\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Staff.ts\n        \n\n\n            \n                Description\n            \n            \n                Datos del staff\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            birth\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            identification\n                                        \n                                \n                                \n                                        \n                                            lastname\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        birth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birth:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identification\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        identification:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Staff {\n    id: number,\n    name: string,\n    lastname: string,\n    identification: number,\n    birth: Date,\n    email: string,\n    status: boolean\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StaffComponent.html":{"url":"components/StaffComponent.html","title":"component - StaffComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StaffComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/staff/staff.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-staff\n            \n\n            \n                styleUrls\n                ./staff.component.css\n            \n\n\n\n            \n                templateUrl\n                ./staff.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registerForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSumbit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(staffService: StaffService, formBuilder: FormBuilder, authService: AuthService, encrypt: EncryptService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/staff/staff.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        staffService\n                                                  \n                                                        \n                                                                        StaffService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        encrypt\n                                                  \n                                                        \n                                                                        EncryptService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/staff/staff.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSumbit\n                        \n                    \n                \n            \n            \n                \nonSumbit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/staff/staff.component.ts:41\n                \n            \n\n\n            \n                \n                    Obtiene toda la informacion del registro del usuario para la creacion de un usuario y staff, al finalizar se redirecciona al usuario a la pantalla de login\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    lastName: '',\n    email: '',\n    firstName: '',\n    password: '',\n    userName: '',\n    birth: '',\n    identification: ''\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/staff/staff.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Staff } from '../models/Staff';\nimport { StaffService } from '../services/staff.service';\nimport { AuthService } from '../services/auth.service';\nimport { FormBuilder } from '@angular/forms';\nimport { EncryptService } from '../services/encrypt.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-staff',\n  templateUrl: './staff.component.html',\n  styleUrls: ['./staff.component.css']\n})\nexport class StaffComponent implements OnInit {\n\n  registerForm = this.formBuilder.group({\n    lastName: '',\n    email: '',\n    firstName: '',\n    password: '',\n    userName: '',\n    birth: '',\n    identification: ''\n  })\n\n\n  constructor(private staffService: StaffService,\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private encrypt: EncryptService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n\n  }\n\n  /**\n   * Obtiene toda la informacion del registro del usuario para la creacion de un usuario y staff, al finalizar se redirecciona al usuario a la pantalla de login \n   */\n  onSumbit(): void {\n    let firstNameParam: string = '' + this.registerForm.value.firstName;\n    let lastName: string = '' + this.registerForm.value.lastName;\n    let email: string = '' + this.registerForm.value.email;\n    let iden: number = Number(this.registerForm.value.identification);\n    let birth = '' + (this.registerForm.value.birth);\n\n    let userName: string = '' + this.registerForm.value.userName;\n    let passParam: string = this.encrypt.encryptUsingAES256('' + this.registerForm.value.password);\n\n\n    this.staffService.registerStaff(firstNameParam, lastName, email, iden, new Date(birth), true).subscribe(\n      data => { }\n    )\n\n    this.authService.registerUser(userName, passParam).subscribe(\n      data => {\n        this.registerForm.reset();\n        this.router.navigateByUrl('/login');\n      });\n\n  }\n\n\n}\n\n    \n\n    \n        \n  \n\n    \n    \n       Registrarse en la Libreria PUJ\n    \n\n\n    \n      \n        \n        \n          Nombre\n          \n        \n        \n        \n          Apellido\n          \n        \n      \n    \n\n\n    \n      \n\n        \n        \n          Fecha de nacimiento\n          \n        \n\n        \n        \n          Identificación\n          \n        \n\n\n      \n    \n\n\n    \n      Nombre de usuario\n      \n    \n\n    \n    \n      Correo\n      \n    \n\n\n    \n    \n      Contraseña\n      \n    \n\n\n    \n    \n      Registrarse\n    \n\n  \n\n    \n\n    \n                \n                    ./staff.component.css\n                \n                #sumbit {\n    margin-top: 30px;\n}\n\n\n#border {\n    border: 2px solid #4287f5;\n    margin: 0 auto;\n    /* Added */\n    float: none;\n    /* Added */\n    margin-bottom: 10px;\n    /* Added */\n    padding: 2rem;\n    margin-top: 30px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                 Registrarse en la Libreria PUJ                                        Nombre                                            Apellido                                                                Fecha de nacimiento                                            Identificación                                      Nombre de usuario                        Correo                        Contraseña                        Registrarse      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'BookFormComponent', 'selector': 'app-book-form'},{'name': 'BookInfoComponent', 'selector': 'app-book-info'},{'name': 'BooksComponent', 'selector': 'app-books'},{'name': 'EditorialFormComponent', 'selector': 'app-editorial-form'},{'name': 'EditorialsComponent', 'selector': 'app-editorials'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'StaffComponent', 'selector': 'app-staff'},{'name': 'StaffInfoComponent', 'selector': 'app-staff-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StaffComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StaffInfoComponent.html":{"url":"components/StaffInfoComponent.html","title":"component - StaffInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StaffInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/staff-info/staff-info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-staff-info\n            \n\n            \n                styleUrls\n                ./staff-info.component.css\n            \n\n\n\n            \n                templateUrl\n                ./staff-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auth\n                            \n                            \n                                personal\n                            \n                            \n                                staff\n                            \n                            \n                                stafForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeStatus\n                            \n                            \n                                getPersonal\n                            \n                            \n                                getStaff\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(staffService: StaffService, formBuilder: FormBuilder, cokieService: CokieService, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/staff-info/staff-info.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        staffService\n                                                  \n                                                        \n                                                                        StaffService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cokieService\n                                                  \n                                                        \n                                                                        CokieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeStatus\n                        \n                    \n                \n            \n            \n                \nchangeStatus(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/staff-info/staff-info.component.ts:82\n                \n            \n\n\n            \n                \n                    Cambia el status del usuario por su id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : Id del usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPersonal\n                        \n                    \n                \n            \n            \n                \ngetPersonal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/staff-info/staff-info.component.ts:67\n                \n            \n\n\n            \n                \n                    Obtiene los datos del usuario\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStaff\n                        \n                    \n                \n            \n            \n                \ngetStaff()\n                \n            \n\n\n            \n                \n                    Defined in src/app/staff-info/staff-info.component.ts:60\n                \n            \n\n\n            \n                \n                    Obtiene los datos del staff\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/staff-info/staff-info.component.ts:52\n                \n            \n\n\n            \n                \n                    inicializa los datos del staff y usuario\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/staff-info/staff-info.component.ts:91\n                \n            \n\n\n            \n                \n                    Se hace la actualizacion de los datos del usuario.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Auth\n\n                    \n                \n                \n                    \n                        Default value : {\n    \"id\": 0,\n    \"userName\": '',\n    \"password\": '',\n    \"roles\": []\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/staff-info/staff-info.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        personal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Staff\n\n                    \n                \n                \n                    \n                        Default value : {\n    \"id\": 0,\n    \"name\": '',\n    \"lastname\": '',\n    \"identification\": 0,\n    \"birth\": new Date(),\n    \"email\": '',\n    \"status\": true\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/staff-info/staff-info.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        staff\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Staff[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/staff-info/staff-info.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stafForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    name: '',\n    lastName: '',\n    userName: '',\n    email: ''\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/staff-info/staff-info.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Auth } from '../models/Auth';\nimport { Staff } from '../models/Staff';\nimport { StaffService } from '../services/staff.service';\nimport { FormBuilder } from '@angular/forms';\nimport { CokieService } from '../services/cokie.service';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-staff-info',\n  templateUrl: './staff-info.component.html',\n  styleUrls: ['./staff-info.component.css']\n})\nexport class StaffInfoComponent implements OnInit {\n\n  staff: Staff[] = [];\n\n  personal: Staff = {\n    \"id\": 0,\n    \"name\": '',\n    \"lastname\": '',\n    \"identification\": 0,\n    \"birth\": new Date(),\n    \"email\": '',\n    \"status\": true\n  }\n\n  auth: Auth = {\n    \"id\": 0,\n    \"userName\": '',\n    \"password\": '',\n    \"roles\": []\n  }\n\n  stafForm = this.formBuilder.group({\n    name: '',\n    lastName: '',\n    userName: '',\n    email: ''\n  })\n\n  constructor(private staffService: StaffService,\n    private formBuilder: FormBuilder,\n    private cokieService: CokieService,\n    private authService: AuthService,\n    private router: Router) { }\n\n  /**\n   * inicializa los datos del staff y usuario\n   */\n  ngOnInit(): void {\n    this.getStaff();\n    this.getPersonal();\n  }\n\n  /**\n   * Obtiene los datos del staff\n   */\n  getStaff(): void {\n    this.staffService.getStaff().subscribe(staf => this.staff = staf);\n  }\n\n  /**\n   * Obtiene los datos del usuario\n   */\n  getPersonal(): void {\n    this.authService.getUser(this.cokieService.get(\"user\")).subscribe(\n      data => {\n        this.auth = data\n        this.staffService.getStaffById(this.auth.id).subscribe(\n          data => this.personal = data\n        )\n      }\n    );\n  }\n\n  /**\n   * Cambia el status del usuario por su id.\n   * @param {number} id: Id del usuario \n   */\n  changeStatus(id: number): void {\n    this.staffService.changeStatus(id).subscribe();\n\n    this.router.navigateByUrl(\"/staff-info\");\n  }\n\n  /**\n   * Se hace la actualizacion de los datos del usuario. \n   */\n  onSubmit() {\n    let id = this.personal.id;\n    let name = this.personal.name;\n    let lastName = this.personal.lastname;\n    let email = this.personal.email;\n    let iden = this.personal.identification;\n    let birth = this.personal.birth;\n    let status = this.personal.status;\n\n    let userName = this.auth.userName;\n    let password = this.auth.password;\n    let roles = this.auth.roles;\n\n    this.staffService.updateStaff(id, name, lastName, email, iden, birth, status).subscribe();\n    this.authService.updateUser(id, userName, password, roles).subscribe();\n\n  }\n\n}\n\n    \n\n    \n        \n    Personal\n\n\n\n\n    \n\n        \n            Nombre \n            \n        \n\n        \n            Apellido \n            \n        \n\n        \n            Nombre de usuario \n            \n        \n\n        \n            Email \n            \n        \n\n    \n\n    \n        \n             Editar \n        \n    \n\n\n\n    \n        \n            \n                #\n                Nombre\n                Identificación\n                Email\n                Estatus\n                Acciones\n            \n        \n        \n            \n                 {{staf.id}}\n                 {{staf.name}} \n                 {{staf.identification}} \n                 {{staf.email}}\n                 {{staf.status}}\n                 \n                        Cambiar estatus\n                    \n            \n        \n    \n\n    \n\n    \n                \n                    ./staff-info.component.css\n                \n                #title {\n    margin-top: 20px;\n    margin-left: 20px;\n}\n\n#table {\n    margin-top: 20px;\n    margin-left: 10px;\n    margin-left: 20px;\n    margin-right: 20px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Personal                        Nombre                                         Apellido                                         Nombre de usuario                                         Email                                                  Editar                                                     #                Nombre                Identificación                Email                Estatus                Acciones                                                         {{staf.id}}                 {{staf.name}}                  {{staf.identification}}                  {{staf.email}}                 {{staf.status}}                                         Cambiar estatus                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'BookFormComponent', 'selector': 'app-book-form'},{'name': 'BookInfoComponent', 'selector': 'app-book-info'},{'name': 'BooksComponent', 'selector': 'app-books'},{'name': 'EditorialFormComponent', 'selector': 'app-editorial-form'},{'name': 'EditorialsComponent', 'selector': 'app-editorials'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'StaffComponent', 'selector': 'app-staff'},{'name': 'StaffInfoComponent', 'selector': 'app-staff-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StaffInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StaffService.html":{"url":"injectables/StaffService.html","title":"injectable - StaffService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StaffService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/staff.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeStatus\n                            \n                            \n                                getStaff\n                            \n                            \n                                getStaffById\n                            \n                            \n                                registerStaff\n                            \n                            \n                                updateStaff\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, cokieService: CokieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/staff.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cokieService\n                                                  \n                                                        \n                                                                        CokieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeStatus\n                        \n                    \n                \n            \n            \n                \nchangeStatus(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/staff.service.ts:58\n                \n            \n\n\n            \n                \n                    Llama al back y cambia el status del staff\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id de una persona\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Staff\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStaff\n                        \n                    \n                \n            \n            \n                \ngetStaff()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/staff.service.ts:25\n                \n            \n\n\n            \n                \n                    Llama al back y obtiene informacion del staff\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Staff[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStaffById\n                        \n                    \n                \n            \n            \n                \ngetStaffById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/staff.service.ts:34\n                \n            \n\n\n            \n                \n                    Llama al back y obtiene informacion del staff por el id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id del staff\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Staff\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerStaff\n                        \n                    \n                \n            \n            \n                \nregisterStaff(name: string, lastName: string, email: string, iden: number, birth: Date, status: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/staff.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Nombre del personal\n\n                                    \n                                \n                                \n                                    lastName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Apellido del personal\n\n                                    \n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Email del personal\n\n                                    \n                                \n                                \n                                    iden\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Identificacion del personal\n\n                                    \n                                \n                                \n                                    birth\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Fecha de nacimiento del personal\n\n                                    \n                                \n                                \n                                    status\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Esatado del personal (verdadero o falso)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Staff\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateStaff\n                        \n                    \n                \n            \n            \n                \nupdateStaff(id: number, name: string, lastName: string, email: string, iden: number, birth: Date, status: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/staff.service.ts:74\n                \n            \n\n\n            \n                \n                    actualiza los campos del personal.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id de la persona\n\n                                    \n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Nombre del personal\n\n                                    \n                                \n                                \n                                    lastName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Apellido del personal\n\n                                    \n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Email del personal\n\n                                    \n                                \n                                \n                                    iden\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Identificacion del personal\n\n                                    \n                                \n                                \n                                    birth\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Fecha de nacimiento del personal\n\n                                    \n                                \n                                \n                                    status\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Esatado del personal (verdadero o falso)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Staff\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'authorization': 'Bearer ' + this.cokieService.get(\"token\")\n    })\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/staff.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Staff } from '../models/Staff';\nimport { HttpClient, HttpHandler, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { CokieService } from './cokie.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StaffService {\n\n  private httpOptions = {\n    headers: new HttpHeaders({\n      'authorization': 'Bearer ' + this.cokieService.get(\"token\")\n    })\n  }\n\n  constructor(private http: HttpClient,\n    private cokieService: CokieService) { }\n\n  /**\n   * Llama al back y obtiene informacion del staff\n   * @returns {Observable} Staff[]\n   */\n  getStaff(): Observable {\n    return this.http.get(\"http://localhost:8082/staffAPI/staff\", this.httpOptions);\n  }\n\n  /**\n   * Llama al back y obtiene informacion del staff por el id\n   * @param {number} id Id del staff \n   * @returns {Observable} Staff\n   */\n  getStaffById(id: number): Observable {\n    return this.http.get(\"http://localhost:8082/staffAPI/staff/\" + id);\n  }\n\n  /**\n   * \n   * @param name Nombre del personal\n   * @param lastName Apellido del personal\n   * @param email Email del personal\n   * @param iden Identificacion del personal \n   * @param birth Fecha de nacimiento del personal\n   * @param status Esatado del personal (verdadero o falso)\n   * @returns {Observable} Staff\n   */\n  registerStaff(name: string, lastName: string, email: string, iden: number, birth: Date, status: boolean): Observable {\n    const body = { \"name\": name, \"lastname\": lastName, \"email\": email, \"identification\": iden, \"birth\": birth, \"status\": status };\n    return this.http.post(\"http://localhost:8082/staffAPI/newStaff\", body);\n  }\n\n  /**\n   * Llama al back y cambia el status del staff\n   * @param id id de una persona \n   * @returns {Observable} Staff\n   */\n  changeStatus(id: number): Observable {\n    const body = {};\n    return this.http.put(\"http://localhost:8082/staffAPI/staff/\" + id, body);\n  }\n\n  /**\n   * actualiza los campos del personal.\n   * @param id id de la persona\n   * @param name Nombre del personal\n   * @param lastName Apellido del personal\n   * @param email Email del personal\n   * @param iden Identificacion del personal \n   * @param birth Fecha de nacimiento del personal\n   * @param status Esatado del personal (verdadero o falso)\n   * @returns {Observable} Staff\n   */\n  updateStaff(id: number, name: string, lastName: string, email: string, iden: number, birth: Date, status: boolean): Observable {\n    const body = { \"id\": id, \"name\": name, \"lastname\": lastName, \"email\": email, \"identification\": iden, \"birth\": birth, \"status\": status };\n    return this.http.put(\"http://localhost:8082/staffAPI/staff/\", body);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Token.html":{"url":"interfaces/Token.html","title":"interface - Token","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Token\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Token.ts\n        \n\n\n            \n                Description\n            \n            \n                Informacion del token\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Token {\n    token: string,\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/book-form/book-form.component.ts\n            \n            component\n            BookFormComponent\n            \n                76 %\n                (10/13)\n            \n        \n        \n            \n                \n                src/app/book-info/book-info.component.ts\n            \n            component\n            BookInfoComponent\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/books/books.component.ts\n            \n            component\n            BooksComponent\n            \n                35 %\n                (5/14)\n            \n        \n        \n            \n                \n                src/app/editorial-form/editorial-form.component.ts\n            \n            component\n            EditorialFormComponent\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/editorials/editorials.component.ts\n            \n            component\n            EditorialsComponent\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/models/Auth.ts\n            \n            interface\n            Auth\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/models/Book.ts\n            \n            interface\n            Book\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/models/Editorial.ts\n            \n            interface\n            Editorial\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/models/Staff.ts\n            \n            interface\n            Staff\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/models/Token.ts\n            \n            interface\n            Token\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/nav-bar/nav-bar.component.ts\n            \n            component\n            NavBarComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/route-guard.guard.ts\n            \n            guard\n            RouteGuardGuard\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/services/book.service.ts\n            \n            injectable\n            BookService\n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                src/app/services/cokie.service.ts\n            \n            injectable\n            CokieService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/services/editorial.service.ts\n            \n            injectable\n            EditorialService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/services/encrypt.service.ts\n            \n            injectable\n            EncryptService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/services/staff.service.ts\n            \n            injectable\n            StaffService\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/staff-info/staff-info.component.ts\n            \n            component\n            StaffInfoComponent\n            \n                45 %\n                (5/11)\n            \n        \n        \n            \n                \n                src/app/staff/staff.component.ts\n            \n            component\n            StaffComponent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^14.2.0\n        \n            @angular/common : ^14.2.0\n        \n            @angular/compiler : ^14.2.0\n        \n            @angular/core : ^14.2.0\n        \n            @angular/forms : ^14.2.0\n        \n            @angular/platform-browser : ^14.2.0\n        \n            @angular/platform-browser-dynamic : ^14.2.0\n        \n            @angular/router : ^14.2.0\n        \n            @popperjs/core : ^2.11.6\n        \n            bootstrap : ^5.2.2\n        \n            crypto-js : ^4.1.1\n        \n            ngx-cookie-service : ^14.0.1\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nLibraryWeb\nThis project was generated with Angular CLI version 14.2.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\nAppModule -->\n\nAuthComponent->AppModule\n\n\n\n\n\nBookFormComponent\n\nBookFormComponent\n\nAppModule -->\n\nBookFormComponent->AppModule\n\n\n\n\n\nBookInfoComponent\n\nBookInfoComponent\n\nAppModule -->\n\nBookInfoComponent->AppModule\n\n\n\n\n\nBooksComponent\n\nBooksComponent\n\nAppModule -->\n\nBooksComponent->AppModule\n\n\n\n\n\nEditorialFormComponent\n\nEditorialFormComponent\n\nAppModule -->\n\nEditorialFormComponent->AppModule\n\n\n\n\n\nEditorialsComponent\n\nEditorialsComponent\n\nAppModule -->\n\nEditorialsComponent->AppModule\n\n\n\n\n\nNavBarComponent\n\nNavBarComponent\n\nAppModule -->\n\nNavBarComponent->AppModule\n\n\n\n\n\nStaffComponent\n\nStaffComponent\n\nAppModule -->\n\nStaffComponent->AppModule\n\n\n\n\n\nStaffInfoComponent\n\nStaffInfoComponent\n\nAppModule -->\n\nStaffInfoComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        11 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
